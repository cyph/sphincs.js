var sphincs = (function () { 

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  throw 'NO_DYNAMIC_EXECUTION was set, cannot eval';
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 1*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-1)/1] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    abort('NO_DYNAMIC_EXECUTION was set, cannot eval - ccall/cwrap are not functional');
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  // NO_DYNAMIC_EXECUTION is on, so we can't use the fast version of cwrap.
  // Fall back to returning a bound version of ccall.
  cwrap = function cwrap(ident, returnType, argTypes) {
    return function() {
      return ccall(ident, returnType, argTypes, arguments);
    }
  }
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 13107200;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 26214400;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;



buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [function() { { return Module.getRandomValue(); } },
 function() { { if (Module.getRandomValue === undefined) { try { var window_ = "object" === typeof window ? window : self, crypto_ = typeof window_.crypto !== "undefined" ? window_.crypto : window_.msCrypto, randomValuesStandard = function() { var buf = new Uint32Array(1); crypto_.getRandomValues(buf); return buf[0] >>> 0; }; randomValuesStandard(); Module.getRandomValue = randomValuesStandard; } catch (e) { try { var crypto = require('crypto'), randomValueNodeJS = function() { var buf = crypto.randomBytes(4); return (buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3]) >>> 0; }; randomValueNodeJS(); Module.getRandomValue = randomValueNodeJS; } catch (e) { throw 'No secure random number generator found'; } } } } }];

function _emscripten_asm_const_0(code) {
 return ASM_CONSTS[code]();
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 2384;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([211,8,163,133,136,106,63,36,68,115,112,3,46,138,25,19,208,49,159,41,34,56,9,164,137,108,78,236,152,250,46,8,119,19,208,56,230,33,40,69,108,12,233,52,207,102,84,190,221,80,124,201,183,41,172,192,23,9,71,181,181,213,132,63,27,251,121,137,217,213,22,146,172,181,223,152,166,11,49,209,183,223,26,208,219,114,253,47,150,126,38,106,237,175,225,184,153,127,44,241,69,144,124,186,247,108,145,179,71,153,161,36,22,252,142,133,226,242,1,8,105,78,87,113,216,32,105,99,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,38,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,119,105,110,100,111,119,95,32,61,32,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,44,32,99,114,121,112,116,111,95,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,58,32,119,105,110,100,111,119,95,46,109,115,67,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,98,117,102,95,108,101,110,32,60,61,32,83,73,90,69,95,77,65,88,0,108,105,98,115,111,100,105,117,109,47,115,114,99,47,108,105,98,115,111,100,105,117,109,47,114,97,110,100,111,109,98,121,116,101,115,47,114,97,110,100,111,109,98,121,116,101,115,46,99,0,114,97,110,100,111,109,98,121,116,101,115,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107,101,120,112,97,110,100,32,49,54,45,98,121,116,101,32,107,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,116,111,32,54,52,45,98,121,116,101,32,115,116,97,116,101,33,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Add"] = _i64Add;

   
  Module["_i64Subtract"] = _i64Subtract;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _emscripten_asm_const=true;

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  var _emscripten_asm_const_int=true;

  
  var PATH=undefined;
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = '__emcc';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            window.postMessage(emscriptenMainLoopMessageId, "*");
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "___assert_fail": ___assert_fail, "_pthread_self": _pthread_self, "_abort": _abort, "___setErrNo": ___setErrNo, "_llvm_stacksave": _llvm_stacksave, "_sbrk": _sbrk, "_time": _time, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "_llvm_stackrestore": _llvm_stackrestore, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_emscripten_asm_const_0": _emscripten_asm_const_0, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var ___assert_fail=env.___assert_fail;
  var _pthread_self=env._pthread_self;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var _llvm_stacksave=env._llvm_stacksave;
  var _sbrk=env._sbrk;
  var _time=env._time;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var _llvm_stackrestore=env._llvm_stackrestore;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _emscripten_asm_const_0=env._emscripten_asm_const_0;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _randombytes_random() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = _emscripten_asm_const_0(0)|0; //@line 59 "libsodium/src/libsodium/randombytes/randombytes.c"
 return ($0|0); //@line 59 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_stir() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _emscripten_asm_const_0(1); //@line 73 "libsodium/src/libsodium/randombytes/randombytes.c"
 return; //@line 101 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_buf($buf,$size) {
 $buf = $buf|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $buf;
 $1 = $size;
 $2 = $0; //@line 141 "libsodium/src/libsodium/randombytes/randombytes.c"
 $p = $2; //@line 141 "libsodium/src/libsodium/randombytes/randombytes.c"
 $i = 0; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
 while(1) {
  $3 = $i; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
  $4 = $1; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
  $5 = ($3>>>0)<($4>>>0); //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
  if (!($5)) {
   break;
  }
  $6 = (_randombytes_random()|0); //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  $7 = $6&255; //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  $8 = $i; //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  $9 = $p; //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  $10 = (($9) + ($8)|0); //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  HEAP8[$10>>0] = $7; //@line 145 "libsodium/src/libsodium/randombytes/randombytes.c"
  $11 = $i; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
  $12 = (($11) + 1)|0; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
  $i = $12; //@line 144 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
 STACKTOP = sp;return; //@line 148 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes($buf,$0,$1) {
 $buf = $buf|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $2 = $buf;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $3; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $9 = $8; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $10 = HEAP32[$9>>2]|0; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $11 = (($8) + 4)|0; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $12 = $11; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $13 = HEAP32[$12>>2]|0; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $14 = ($13>>>0)<(0); //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $15 = ($10>>>0)<=(4294967295); //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $16 = ($13|0)==(0); //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $17 = $16 & $15; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 $18 = $14 | $17; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 if ($18) {
  $19 = $2; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $20 = $3; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $21 = $20; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $22 = HEAP32[$21>>2]|0; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $23 = (($20) + 4)|0; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $24 = $23; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  $25 = HEAP32[$24>>2]|0; //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  _randombytes_buf($19,$22); //@line 163 "libsodium/src/libsodium/randombytes/randombytes.c"
  STACKTOP = sp;return; //@line 164 "libsodium/src/libsodium/randombytes/randombytes.c"
 } else {
  ___assert_fail((1491|0),(1511|0),162,(1561|0)); //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
  // unreachable; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
}
function _blake256_compress($S,$block) {
 $S = $S|0;
 $block = $block|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $i = 0, $m = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $v = sp + 72|0;
 $m = sp + 8|0;
 $0 = $S;
 $1 = $block;
 $i = 0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $2 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $3 = ($2>>>0)<(16); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($3)) {
   break;
  }
  $4 = $1; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $5 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $5<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $7 = (($4) + ($6)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $8 = HEAP8[$7>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $9 = $8&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $10 = $9 << 24; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $11 = $1; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $12 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $13 = $12<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $14 = (($11) + ($13)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $15 = ((($14)) + 1|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $16 = HEAP8[$15>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $17 = $16&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $18 = $17 << 16; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $19 = $10 | $18; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $20 = $1; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $21 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $22 = $21<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $23 = (($20) + ($22)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $24 = ((($23)) + 2|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $25 = HEAP8[$24>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $26 = $25&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $27 = $26 << 8; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $28 = $19 | $27; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $29 = $1; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $30 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $31 = $30<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $32 = (($29) + ($31)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $33 = ((($32)) + 3|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $34 = HEAP8[$33>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $35 = $34&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $36 = $28 | $35; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $37 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $38 = (($m) + ($37<<2)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$38>>2] = $36; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $39 = $i; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $40 = (($39) + 1)|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $i = $40; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $i = 0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $41 = $i; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $42 = ($41>>>0)<(8); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($42)) {
   break;
  }
  $43 = $i; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $44 = $0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $45 = (($44) + ($43<<2)|0); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $46 = HEAP32[$45>>2]|0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $47 = $i; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $48 = (($v) + ($47<<2)|0); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$48>>2] = $46; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $49 = $i; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $50 = (($49) + 1)|0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $i = $50; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $51 = $0; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $52 = ((($51)) + 32|0); //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $53 = HEAP32[$52>>2]|0; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $54 = $53 ^ 608135816; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $55 = ((($v)) + 32|0); //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$55>>2] = $54; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $56 = $0; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $57 = ((($56)) + 32|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $58 = ((($57)) + 4|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $59 = HEAP32[$58>>2]|0; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $60 = $59 ^ -2052912941; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $61 = ((($v)) + 36|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$61>>2] = $60; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $62 = $0; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $63 = ((($62)) + 32|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $64 = ((($63)) + 8|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $65 = HEAP32[$64>>2]|0; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $66 = $65 ^ 320440878; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $67 = ((($v)) + 40|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$67>>2] = $66; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $68 = $0; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $69 = ((($68)) + 32|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $70 = ((($69)) + 12|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $71 = HEAP32[$70>>2]|0; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $72 = $71 ^ 57701188; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $73 = ((($v)) + 44|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$73>>2] = $72; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $74 = ((($v)) + 48|0); //@line 76 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$74>>2] = -1542899678; //@line 76 "c_src/crypto_hash/blake256/ref/hash.c"
 $75 = ((($v)) + 52|0); //@line 77 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$75>>2] = 698298832; //@line 77 "c_src/crypto_hash/blake256/ref/hash.c"
 $76 = ((($v)) + 56|0); //@line 78 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$76>>2] = 137296536; //@line 78 "c_src/crypto_hash/blake256/ref/hash.c"
 $77 = ((($v)) + 60|0); //@line 79 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$77>>2] = -330404727; //@line 79 "c_src/crypto_hash/blake256/ref/hash.c"
 $78 = $0; //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $79 = ((($78)) + 60|0); //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $80 = HEAP32[$79>>2]|0; //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $81 = ($80|0)==(0); //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($81) {
  $82 = $0; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $83 = ((($82)) + 48|0); //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $84 = HEAP32[$83>>2]|0; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $85 = ((($v)) + 48|0); //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $86 = HEAP32[$85>>2]|0; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $87 = $86 ^ $84; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$85>>2] = $87; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $88 = $0; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $89 = ((($88)) + 48|0); //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $90 = HEAP32[$89>>2]|0; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $91 = ((($v)) + 52|0); //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $92 = HEAP32[$91>>2]|0; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $93 = $92 ^ $90; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$91>>2] = $93; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $94 = $0; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $95 = ((($94)) + 48|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $96 = ((($95)) + 4|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $97 = HEAP32[$96>>2]|0; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $98 = ((($v)) + 56|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $99 = HEAP32[$98>>2]|0; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $100 = $99 ^ $97; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$98>>2] = $100; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $101 = $0; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $102 = ((($101)) + 48|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $103 = ((($102)) + 4|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $104 = HEAP32[$103>>2]|0; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $105 = ((($v)) + 60|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $106 = HEAP32[$105>>2]|0; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $107 = $106 ^ $104; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$105>>2] = $107; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $i = 0; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $108 = $i; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $109 = ($108>>>0)<(14); //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($109)) {
   break;
  }
  $110 = $i; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $111 = (1573 + ($110<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $112 = HEAP8[$111>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $113 = $112&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $114 = (($m) + ($113<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $115 = HEAP32[$114>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $116 = $i; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $117 = (1573 + ($116<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $118 = ((($117)) + 1|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $119 = HEAP8[$118>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $120 = $119&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $121 = (136 + ($120<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $122 = HEAP32[$121>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $123 = $115 ^ $122; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $124 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $125 = HEAP32[$124>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $126 = (($123) + ($125))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $127 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $128 = (($127) + ($126))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$v>>2] = $128; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $129 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $130 = HEAP32[$129>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $131 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $132 = $130 ^ $131; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $133 = $132 << 16; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $134 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $135 = HEAP32[$134>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $136 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $137 = $135 ^ $136; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $138 = $137 >>> 16; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $139 = $133 | $138; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $140 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$140>>2] = $139; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $141 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $142 = HEAP32[$141>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $143 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $144 = HEAP32[$143>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $145 = (($144) + ($142))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$143>>2] = $145; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $146 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $147 = HEAP32[$146>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $148 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $149 = HEAP32[$148>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $150 = $147 ^ $149; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $151 = $150 << 20; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $152 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $153 = HEAP32[$152>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $154 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $155 = HEAP32[$154>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $156 = $153 ^ $155; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $157 = $156 >>> 12; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $158 = $151 | $157; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $159 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$159>>2] = $158; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $160 = $i; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $161 = (1573 + ($160<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $162 = ((($161)) + 1|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $163 = HEAP8[$162>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $164 = $163&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $165 = (($m) + ($164<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $166 = HEAP32[$165>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $167 = $i; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $168 = (1573 + ($167<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $169 = HEAP8[$168>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $170 = $169&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $171 = (136 + ($170<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $172 = HEAP32[$171>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $173 = $166 ^ $172; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $174 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $175 = HEAP32[$174>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $176 = (($173) + ($175))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $177 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $178 = (($177) + ($176))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$v>>2] = $178; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $179 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $180 = HEAP32[$179>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $181 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $182 = $180 ^ $181; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $183 = $182 << 24; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $184 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $185 = HEAP32[$184>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $186 = HEAP32[$v>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $187 = $185 ^ $186; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $188 = $187 >>> 8; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $189 = $183 | $188; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $190 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$190>>2] = $189; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $191 = ((($v)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $192 = HEAP32[$191>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $193 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $194 = HEAP32[$193>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $195 = (($194) + ($192))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$193>>2] = $195; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $196 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $197 = HEAP32[$196>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $198 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $199 = HEAP32[$198>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $200 = $197 ^ $199; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $201 = $200 << 25; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $202 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $203 = HEAP32[$202>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $204 = ((($v)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $205 = HEAP32[$204>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $206 = $203 ^ $205; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $207 = $206 >>> 7; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $208 = $201 | $207; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $209 = ((($v)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$209>>2] = $208; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $210 = $i; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $211 = (1573 + ($210<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $212 = ((($211)) + 2|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $213 = HEAP8[$212>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $214 = $213&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $215 = (($m) + ($214<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $216 = HEAP32[$215>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $217 = $i; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $218 = (1573 + ($217<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $219 = ((($218)) + 3|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $220 = HEAP8[$219>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $221 = $220&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $222 = (136 + ($221<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $223 = HEAP32[$222>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $224 = $216 ^ $223; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $225 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $226 = HEAP32[$225>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $227 = (($224) + ($226))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $228 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $229 = HEAP32[$228>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $230 = (($229) + ($227))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$228>>2] = $230; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $231 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $232 = HEAP32[$231>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $233 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $234 = HEAP32[$233>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $235 = $232 ^ $234; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $236 = $235 << 16; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $237 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $238 = HEAP32[$237>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $239 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $240 = HEAP32[$239>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $241 = $238 ^ $240; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $242 = $241 >>> 16; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $243 = $236 | $242; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $244 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$244>>2] = $243; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $245 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $246 = HEAP32[$245>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $247 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $248 = HEAP32[$247>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $249 = (($248) + ($246))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$247>>2] = $249; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $250 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $251 = HEAP32[$250>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $252 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $253 = HEAP32[$252>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $254 = $251 ^ $253; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $255 = $254 << 20; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $256 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $257 = HEAP32[$256>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $258 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $259 = HEAP32[$258>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $260 = $257 ^ $259; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $261 = $260 >>> 12; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $262 = $255 | $261; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $263 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$263>>2] = $262; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $264 = $i; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $265 = (1573 + ($264<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $266 = ((($265)) + 3|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $267 = HEAP8[$266>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $268 = $267&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $269 = (($m) + ($268<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $270 = HEAP32[$269>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $271 = $i; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $272 = (1573 + ($271<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $273 = ((($272)) + 2|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $274 = HEAP8[$273>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $275 = $274&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $276 = (136 + ($275<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $277 = HEAP32[$276>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $278 = $270 ^ $277; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $279 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $280 = HEAP32[$279>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $281 = (($278) + ($280))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $282 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $283 = HEAP32[$282>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $284 = (($283) + ($281))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$282>>2] = $284; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $285 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $286 = HEAP32[$285>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $287 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $288 = HEAP32[$287>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $289 = $286 ^ $288; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $290 = $289 << 24; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $291 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $292 = HEAP32[$291>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $293 = ((($v)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $294 = HEAP32[$293>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $295 = $292 ^ $294; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $296 = $295 >>> 8; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $297 = $290 | $296; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $298 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$298>>2] = $297; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $299 = ((($v)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $300 = HEAP32[$299>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $301 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $302 = HEAP32[$301>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $303 = (($302) + ($300))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$301>>2] = $303; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $304 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $305 = HEAP32[$304>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $306 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $307 = HEAP32[$306>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $308 = $305 ^ $307; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $309 = $308 << 25; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $310 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $311 = HEAP32[$310>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $312 = ((($v)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $313 = HEAP32[$312>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $314 = $311 ^ $313; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $315 = $314 >>> 7; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $316 = $309 | $315; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $317 = ((($v)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$317>>2] = $316; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $318 = $i; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $319 = (1573 + ($318<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $320 = ((($319)) + 4|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $321 = HEAP8[$320>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $322 = $321&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $323 = (($m) + ($322<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $324 = HEAP32[$323>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $325 = $i; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $326 = (1573 + ($325<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $327 = ((($326)) + 5|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $328 = HEAP8[$327>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $329 = $328&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $330 = (136 + ($329<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $331 = HEAP32[$330>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $332 = $324 ^ $331; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $333 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $334 = HEAP32[$333>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $335 = (($332) + ($334))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $336 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $337 = HEAP32[$336>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $338 = (($337) + ($335))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$336>>2] = $338; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $339 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $340 = HEAP32[$339>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $341 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $342 = HEAP32[$341>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $343 = $340 ^ $342; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $344 = $343 << 16; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $345 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $346 = HEAP32[$345>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $347 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $348 = HEAP32[$347>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $349 = $346 ^ $348; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $350 = $349 >>> 16; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $351 = $344 | $350; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $352 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$352>>2] = $351; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $353 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $354 = HEAP32[$353>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $355 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $356 = HEAP32[$355>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $357 = (($356) + ($354))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$355>>2] = $357; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $358 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $359 = HEAP32[$358>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $360 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $361 = HEAP32[$360>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $362 = $359 ^ $361; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $363 = $362 << 20; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $364 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $365 = HEAP32[$364>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $366 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $367 = HEAP32[$366>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $368 = $365 ^ $367; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $369 = $368 >>> 12; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $370 = $363 | $369; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $371 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$371>>2] = $370; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $372 = $i; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $373 = (1573 + ($372<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $374 = ((($373)) + 5|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $375 = HEAP8[$374>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $376 = $375&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $377 = (($m) + ($376<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $378 = HEAP32[$377>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $379 = $i; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $380 = (1573 + ($379<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $381 = ((($380)) + 4|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $382 = HEAP8[$381>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $383 = $382&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $384 = (136 + ($383<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $385 = HEAP32[$384>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $386 = $378 ^ $385; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $387 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $388 = HEAP32[$387>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $389 = (($386) + ($388))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $390 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $391 = HEAP32[$390>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $392 = (($391) + ($389))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$390>>2] = $392; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $393 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $394 = HEAP32[$393>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $395 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $396 = HEAP32[$395>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $397 = $394 ^ $396; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $398 = $397 << 24; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $399 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $400 = HEAP32[$399>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $401 = ((($v)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $402 = HEAP32[$401>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $403 = $400 ^ $402; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $404 = $403 >>> 8; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $405 = $398 | $404; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $406 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$406>>2] = $405; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $407 = ((($v)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $408 = HEAP32[$407>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $409 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $410 = HEAP32[$409>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $411 = (($410) + ($408))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$409>>2] = $411; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $412 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $413 = HEAP32[$412>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $414 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $415 = HEAP32[$414>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $416 = $413 ^ $415; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $417 = $416 << 25; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $418 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $419 = HEAP32[$418>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $420 = ((($v)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $421 = HEAP32[$420>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $422 = $419 ^ $421; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $423 = $422 >>> 7; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $424 = $417 | $423; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $425 = ((($v)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$425>>2] = $424; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $426 = $i; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $427 = (1573 + ($426<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $428 = ((($427)) + 6|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $429 = HEAP8[$428>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $430 = $429&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $431 = (($m) + ($430<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $432 = HEAP32[$431>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $433 = $i; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $434 = (1573 + ($433<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $435 = ((($434)) + 7|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $436 = HEAP8[$435>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $437 = $436&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $438 = (136 + ($437<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $439 = HEAP32[$438>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $440 = $432 ^ $439; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $441 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $442 = HEAP32[$441>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $443 = (($440) + ($442))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $444 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $445 = HEAP32[$444>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $446 = (($445) + ($443))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$444>>2] = $446; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $447 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $448 = HEAP32[$447>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $449 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $450 = HEAP32[$449>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $451 = $448 ^ $450; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $452 = $451 << 16; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $453 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $454 = HEAP32[$453>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $455 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $456 = HEAP32[$455>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $457 = $454 ^ $456; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $458 = $457 >>> 16; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $459 = $452 | $458; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $460 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$460>>2] = $459; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $461 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $462 = HEAP32[$461>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $463 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $464 = HEAP32[$463>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $465 = (($464) + ($462))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$463>>2] = $465; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $466 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $467 = HEAP32[$466>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $468 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $469 = HEAP32[$468>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $470 = $467 ^ $469; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $471 = $470 << 20; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $472 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $473 = HEAP32[$472>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $474 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $475 = HEAP32[$474>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $476 = $473 ^ $475; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $477 = $476 >>> 12; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $478 = $471 | $477; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $479 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$479>>2] = $478; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $480 = $i; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $481 = (1573 + ($480<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $482 = ((($481)) + 7|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $483 = HEAP8[$482>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $484 = $483&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $485 = (($m) + ($484<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $486 = HEAP32[$485>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $487 = $i; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $488 = (1573 + ($487<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $489 = ((($488)) + 6|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $490 = HEAP8[$489>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $491 = $490&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $492 = (136 + ($491<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $493 = HEAP32[$492>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $494 = $486 ^ $493; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $495 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $496 = HEAP32[$495>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $497 = (($494) + ($496))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $498 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $499 = HEAP32[$498>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $500 = (($499) + ($497))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$498>>2] = $500; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $501 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $502 = HEAP32[$501>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $503 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $504 = HEAP32[$503>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $505 = $502 ^ $504; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $506 = $505 << 24; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $507 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $508 = HEAP32[$507>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $509 = ((($v)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $510 = HEAP32[$509>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $511 = $508 ^ $510; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $512 = $511 >>> 8; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $513 = $506 | $512; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $514 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$514>>2] = $513; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $515 = ((($v)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $516 = HEAP32[$515>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $517 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $518 = HEAP32[$517>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $519 = (($518) + ($516))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$517>>2] = $519; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $520 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $521 = HEAP32[$520>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $522 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $523 = HEAP32[$522>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $524 = $521 ^ $523; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $525 = $524 << 25; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $526 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $527 = HEAP32[$526>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $528 = ((($v)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $529 = HEAP32[$528>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $530 = $527 ^ $529; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $531 = $530 >>> 7; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $532 = $525 | $531; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $533 = ((($v)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$533>>2] = $532; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $534 = $i; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $535 = (1573 + ($534<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $536 = ((($535)) + 14|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $537 = HEAP8[$536>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $538 = $537&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $539 = (($m) + ($538<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $540 = HEAP32[$539>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $541 = $i; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $542 = (1573 + ($541<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $543 = ((($542)) + 15|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $544 = HEAP8[$543>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $545 = $544&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $546 = (136 + ($545<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $547 = HEAP32[$546>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $548 = $540 ^ $547; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $549 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $550 = HEAP32[$549>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $551 = (($548) + ($550))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $552 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $553 = HEAP32[$552>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $554 = (($553) + ($551))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$552>>2] = $554; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $555 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $556 = HEAP32[$555>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $557 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $558 = HEAP32[$557>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $559 = $556 ^ $558; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $560 = $559 << 16; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $561 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $562 = HEAP32[$561>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $563 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $564 = HEAP32[$563>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $565 = $562 ^ $564; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $566 = $565 >>> 16; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $567 = $560 | $566; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $568 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$568>>2] = $567; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $569 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $570 = HEAP32[$569>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $571 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $572 = HEAP32[$571>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $573 = (($572) + ($570))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$571>>2] = $573; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $574 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $575 = HEAP32[$574>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $576 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $577 = HEAP32[$576>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $578 = $575 ^ $577; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $579 = $578 << 20; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $580 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $581 = HEAP32[$580>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $582 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $583 = HEAP32[$582>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $584 = $581 ^ $583; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $585 = $584 >>> 12; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $586 = $579 | $585; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $587 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$587>>2] = $586; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $588 = $i; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $589 = (1573 + ($588<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $590 = ((($589)) + 15|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $591 = HEAP8[$590>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $592 = $591&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $593 = (($m) + ($592<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $594 = HEAP32[$593>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $595 = $i; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $596 = (1573 + ($595<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $597 = ((($596)) + 14|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $598 = HEAP8[$597>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $599 = $598&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $600 = (136 + ($599<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $601 = HEAP32[$600>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $602 = $594 ^ $601; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $603 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $604 = HEAP32[$603>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $605 = (($602) + ($604))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $606 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $607 = HEAP32[$606>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $608 = (($607) + ($605))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$606>>2] = $608; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $609 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $610 = HEAP32[$609>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $611 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $612 = HEAP32[$611>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $613 = $610 ^ $612; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $614 = $613 << 24; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $615 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $616 = HEAP32[$615>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $617 = ((($v)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $618 = HEAP32[$617>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $619 = $616 ^ $618; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $620 = $619 >>> 8; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $621 = $614 | $620; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $622 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$622>>2] = $621; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $623 = ((($v)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $624 = HEAP32[$623>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $625 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $626 = HEAP32[$625>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $627 = (($626) + ($624))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$625>>2] = $627; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $628 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $629 = HEAP32[$628>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $630 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $631 = HEAP32[$630>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $632 = $629 ^ $631; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $633 = $632 << 25; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $634 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $635 = HEAP32[$634>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $636 = ((($v)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $637 = HEAP32[$636>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $638 = $635 ^ $637; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $639 = $638 >>> 7; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $640 = $633 | $639; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $641 = ((($v)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$641>>2] = $640; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $642 = $i; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $643 = (1573 + ($642<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $644 = ((($643)) + 12|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $645 = HEAP8[$644>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $646 = $645&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $647 = (($m) + ($646<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $648 = HEAP32[$647>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $649 = $i; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $650 = (1573 + ($649<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $651 = ((($650)) + 13|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $652 = HEAP8[$651>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $653 = $652&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $654 = (136 + ($653<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $655 = HEAP32[$654>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $656 = $648 ^ $655; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $657 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $658 = HEAP32[$657>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $659 = (($656) + ($658))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $660 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $661 = HEAP32[$660>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $662 = (($661) + ($659))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$660>>2] = $662; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $663 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $664 = HEAP32[$663>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $665 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $666 = HEAP32[$665>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $667 = $664 ^ $666; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $668 = $667 << 16; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $669 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $670 = HEAP32[$669>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $671 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $672 = HEAP32[$671>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $673 = $670 ^ $672; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $674 = $673 >>> 16; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $675 = $668 | $674; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $676 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$676>>2] = $675; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $677 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $678 = HEAP32[$677>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $679 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $680 = HEAP32[$679>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $681 = (($680) + ($678))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$679>>2] = $681; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $682 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $683 = HEAP32[$682>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $684 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $685 = HEAP32[$684>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $686 = $683 ^ $685; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $687 = $686 << 20; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $688 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $689 = HEAP32[$688>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $690 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $691 = HEAP32[$690>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $692 = $689 ^ $691; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $693 = $692 >>> 12; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $694 = $687 | $693; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $695 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$695>>2] = $694; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $696 = $i; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $697 = (1573 + ($696<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $698 = ((($697)) + 13|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $699 = HEAP8[$698>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $700 = $699&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $701 = (($m) + ($700<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $702 = HEAP32[$701>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $703 = $i; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $704 = (1573 + ($703<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $705 = ((($704)) + 12|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $706 = HEAP8[$705>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $707 = $706&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $708 = (136 + ($707<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $709 = HEAP32[$708>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $710 = $702 ^ $709; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $711 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $712 = HEAP32[$711>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $713 = (($710) + ($712))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $714 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $715 = HEAP32[$714>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $716 = (($715) + ($713))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$714>>2] = $716; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $717 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $718 = HEAP32[$717>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $719 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $720 = HEAP32[$719>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $721 = $718 ^ $720; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $722 = $721 << 24; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $723 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $724 = HEAP32[$723>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $725 = ((($v)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $726 = HEAP32[$725>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $727 = $724 ^ $726; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $728 = $727 >>> 8; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $729 = $722 | $728; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $730 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$730>>2] = $729; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $731 = ((($v)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $732 = HEAP32[$731>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $733 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $734 = HEAP32[$733>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $735 = (($734) + ($732))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$733>>2] = $735; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $736 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $737 = HEAP32[$736>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $738 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $739 = HEAP32[$738>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $740 = $737 ^ $739; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $741 = $740 << 25; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $742 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $743 = HEAP32[$742>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $744 = ((($v)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $745 = HEAP32[$744>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $746 = $743 ^ $745; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $747 = $746 >>> 7; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $748 = $741 | $747; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $749 = ((($v)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$749>>2] = $748; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $750 = $i; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $751 = (1573 + ($750<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $752 = ((($751)) + 8|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $753 = HEAP8[$752>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $754 = $753&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $755 = (($m) + ($754<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $756 = HEAP32[$755>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $757 = $i; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $758 = (1573 + ($757<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $759 = ((($758)) + 9|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $760 = HEAP8[$759>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $761 = $760&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $762 = (136 + ($761<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $763 = HEAP32[$762>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $764 = $756 ^ $763; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $765 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $766 = HEAP32[$765>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $767 = (($764) + ($766))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $768 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $769 = (($768) + ($767))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$v>>2] = $769; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $770 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $771 = HEAP32[$770>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $772 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $773 = $771 ^ $772; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $774 = $773 << 16; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $775 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $776 = HEAP32[$775>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $777 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $778 = $776 ^ $777; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $779 = $778 >>> 16; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $780 = $774 | $779; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $781 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$781>>2] = $780; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $782 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $783 = HEAP32[$782>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $784 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $785 = HEAP32[$784>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $786 = (($785) + ($783))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$784>>2] = $786; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $787 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $788 = HEAP32[$787>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $789 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $790 = HEAP32[$789>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $791 = $788 ^ $790; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $792 = $791 << 20; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $793 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $794 = HEAP32[$793>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $795 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $796 = HEAP32[$795>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $797 = $794 ^ $796; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $798 = $797 >>> 12; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $799 = $792 | $798; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $800 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$800>>2] = $799; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $801 = $i; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $802 = (1573 + ($801<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $803 = ((($802)) + 9|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $804 = HEAP8[$803>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $805 = $804&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $806 = (($m) + ($805<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $807 = HEAP32[$806>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $808 = $i; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $809 = (1573 + ($808<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $810 = ((($809)) + 8|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $811 = HEAP8[$810>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $812 = $811&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $813 = (136 + ($812<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $814 = HEAP32[$813>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $815 = $807 ^ $814; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $816 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $817 = HEAP32[$816>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $818 = (($815) + ($817))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $819 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $820 = (($819) + ($818))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$v>>2] = $820; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $821 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $822 = HEAP32[$821>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $823 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $824 = $822 ^ $823; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $825 = $824 << 24; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $826 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $827 = HEAP32[$826>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $828 = HEAP32[$v>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $829 = $827 ^ $828; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $830 = $829 >>> 8; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $831 = $825 | $830; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $832 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$832>>2] = $831; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $833 = ((($v)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $834 = HEAP32[$833>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $835 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $836 = HEAP32[$835>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $837 = (($836) + ($834))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$835>>2] = $837; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $838 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $839 = HEAP32[$838>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $840 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $841 = HEAP32[$840>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $842 = $839 ^ $841; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $843 = $842 << 25; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $844 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $845 = HEAP32[$844>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $846 = ((($v)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $847 = HEAP32[$846>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $848 = $845 ^ $847; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $849 = $848 >>> 7; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $850 = $843 | $849; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $851 = ((($v)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$851>>2] = $850; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $852 = $i; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $853 = (1573 + ($852<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $854 = ((($853)) + 10|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $855 = HEAP8[$854>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $856 = $855&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $857 = (($m) + ($856<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $858 = HEAP32[$857>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $859 = $i; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $860 = (1573 + ($859<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $861 = ((($860)) + 11|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $862 = HEAP8[$861>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $863 = $862&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $864 = (136 + ($863<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $865 = HEAP32[$864>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $866 = $858 ^ $865; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $867 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $868 = HEAP32[$867>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $869 = (($866) + ($868))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $870 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $871 = HEAP32[$870>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $872 = (($871) + ($869))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$870>>2] = $872; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $873 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $874 = HEAP32[$873>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $875 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $876 = HEAP32[$875>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $877 = $874 ^ $876; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $878 = $877 << 16; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $879 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $880 = HEAP32[$879>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $881 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $882 = HEAP32[$881>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $883 = $880 ^ $882; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $884 = $883 >>> 16; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $885 = $878 | $884; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $886 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$886>>2] = $885; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $887 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $888 = HEAP32[$887>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $889 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $890 = HEAP32[$889>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $891 = (($890) + ($888))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$889>>2] = $891; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $892 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $893 = HEAP32[$892>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $894 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $895 = HEAP32[$894>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $896 = $893 ^ $895; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $897 = $896 << 20; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $898 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $899 = HEAP32[$898>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $900 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $901 = HEAP32[$900>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $902 = $899 ^ $901; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $903 = $902 >>> 12; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $904 = $897 | $903; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $905 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$905>>2] = $904; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $906 = $i; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $907 = (1573 + ($906<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $908 = ((($907)) + 11|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $909 = HEAP8[$908>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $910 = $909&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $911 = (($m) + ($910<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $912 = HEAP32[$911>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $913 = $i; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $914 = (1573 + ($913<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $915 = ((($914)) + 10|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $916 = HEAP8[$915>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $917 = $916&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $918 = (136 + ($917<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $919 = HEAP32[$918>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $920 = $912 ^ $919; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $921 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $922 = HEAP32[$921>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $923 = (($920) + ($922))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $924 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $925 = HEAP32[$924>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $926 = (($925) + ($923))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$924>>2] = $926; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $927 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $928 = HEAP32[$927>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $929 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $930 = HEAP32[$929>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $931 = $928 ^ $930; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $932 = $931 << 24; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $933 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $934 = HEAP32[$933>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $935 = ((($v)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $936 = HEAP32[$935>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $937 = $934 ^ $936; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $938 = $937 >>> 8; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $939 = $932 | $938; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $940 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$940>>2] = $939; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $941 = ((($v)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $942 = HEAP32[$941>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $943 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $944 = HEAP32[$943>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $945 = (($944) + ($942))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$943>>2] = $945; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $946 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $947 = HEAP32[$946>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $948 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $949 = HEAP32[$948>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $950 = $947 ^ $949; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $951 = $950 << 25; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $952 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $953 = HEAP32[$952>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $954 = ((($v)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $955 = HEAP32[$954>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $956 = $953 ^ $955; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $957 = $956 >>> 7; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $958 = $951 | $957; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $959 = ((($v)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$959>>2] = $958; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $960 = $i; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $961 = (($960) + 1)|0; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $i = $961; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $i = 0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $962 = $i; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $963 = ($962>>>0)<(16); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($963)) {
   break;
  }
  $964 = $i; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $965 = (($v) + ($964<<2)|0); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $966 = HEAP32[$965>>2]|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $967 = $i; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $968 = (($967>>>0) % 8)&-1; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $969 = $0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $970 = (($969) + ($968<<2)|0); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $971 = HEAP32[$970>>2]|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $972 = $971 ^ $966; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$970>>2] = $972; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $973 = $i; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $974 = (($973) + 1)|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $i = $974; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $i = 0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $975 = $i; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $976 = ($975>>>0)<(8); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($976)) {
   break;
  }
  $977 = $i; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $978 = (($977>>>0) % 4)&-1; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $979 = $0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $980 = ((($979)) + 32|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $981 = (($980) + ($978<<2)|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $982 = HEAP32[$981>>2]|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $983 = $i; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $984 = $0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $985 = (($984) + ($983<<2)|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $986 = HEAP32[$985>>2]|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $987 = $986 ^ $982; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$985>>2] = $987; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $988 = $i; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $989 = (($988) + 1)|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $i = $989; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 STACKTOP = sp;return; //@line 100 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake256_init($S) {
 $S = $S|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $S;
 $1 = $0; //@line 105 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$1>>2] = 1779033703; //@line 105 "c_src/crypto_hash/blake256/ref/hash.c"
 $2 = $0; //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 $3 = ((($2)) + 4|0); //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$3>>2] = -1150833019; //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 $4 = $0; //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 $5 = ((($4)) + 8|0); //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$5>>2] = 1013904242; //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 $6 = $0; //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 $7 = ((($6)) + 12|0); //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$7>>2] = -1521486534; //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 $8 = $0; //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 $9 = ((($8)) + 16|0); //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$9>>2] = 1359893119; //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = $0; //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = ((($10)) + 20|0); //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$11>>2] = -1694144372; //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = $0; //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = ((($12)) + 24|0); //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$13>>2] = 528734635; //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = $0; //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = ((($14)) + 28|0); //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$15>>2] = 1541459225; //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = $0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = ((($16)) + 60|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$17>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = $0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $19 = ((($18)) + 56|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$19>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $20 = $0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $21 = ((($20)) + 48|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $22 = ((($21)) + 4|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$22>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $23 = $0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $24 = ((($23)) + 48|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$24>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $25 = $0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $26 = ((($25)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $27 = ((($26)) + 12|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$27>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $28 = $0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $29 = ((($28)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $30 = ((($29)) + 8|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$30>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $31 = $0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $32 = ((($31)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $33 = ((($32)) + 4|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$33>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $34 = $0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $35 = ((($34)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$35>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return; //@line 115 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake256_update($S,$data,$0,$1) {
 $S = $S|0;
 $data = $data|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fill = 0, $left = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $2 = $S;
 $3 = $data;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = $2; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = ((($9)) + 56|0); //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = HEAP32[$10>>2]|0; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = $11 >> 3; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $left = $12; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = $left; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = (64 - ($13))|0; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $fill = $14; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = $left; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = ($15|0)!=(0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($16) {
  $17 = $4; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $18 = $17; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $19 = HEAP32[$18>>2]|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $20 = (($17) + 4)|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $21 = $20; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $22 = HEAP32[$21>>2]|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $23 = (_bitshift64Lshr(($19|0),($22|0),3)|0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $24 = tempRet0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $25 = $23 & 63; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $26 = $fill; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $27 = ($26|0)<(0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $28 = $27 << 31 >> 31; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $29 = (0)>($28>>>0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $30 = ($25>>>0)>=($26>>>0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $31 = (0)==($28|0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $32 = $31 & $30; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $33 = $29 | $32; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($33) {
   $34 = $2; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $35 = ((($34)) + 64|0); //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $36 = $left; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $37 = (($35) + ($36)|0); //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $38 = $3; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $39 = $fill; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   _memcpy(($37|0),($38|0),($39|0))|0; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $40 = $2; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $41 = ((($40)) + 48|0); //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $42 = HEAP32[$41>>2]|0; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $43 = (($42) + 512)|0; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$41>>2] = $43; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $44 = $2; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $45 = ((($44)) + 48|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $46 = HEAP32[$45>>2]|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $47 = ($46|0)==(0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   if ($47) {
    $48 = $2; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $49 = ((($48)) + 48|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $50 = ((($49)) + 4|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $51 = HEAP32[$50>>2]|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $52 = (($51) + 1)|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    HEAP32[$50>>2] = $52; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   }
   $53 = $2; //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $54 = $2; //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $55 = ((($54)) + 64|0); //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_compress($53,$55); //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $56 = $fill; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $57 = $3; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $58 = (($57) + ($56)|0); //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $3 = $58; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $59 = $fill; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $60 = $59 << 3; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $61 = ($60|0)<(0); //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $62 = $61 << 31 >> 31; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $63 = $4; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $64 = $63; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $65 = HEAP32[$64>>2]|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $66 = (($63) + 4)|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $67 = $66; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $68 = HEAP32[$67>>2]|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $69 = (_i64Subtract(($65|0),($68|0),($60|0),($62|0))|0); //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $70 = tempRet0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $71 = $4; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $72 = $71; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$72>>2] = $69; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $73 = (($71) + 4)|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $74 = $73; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$74>>2] = $70; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $left = 0; //@line 130 "c_src/crypto_hash/blake256/ref/hash.c"
  }
 }
 while(1) {
  $75 = $4; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $76 = $75; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $77 = HEAP32[$76>>2]|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $78 = (($75) + 4)|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $79 = $78; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $80 = HEAP32[$79>>2]|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $81 = ($80>>>0)>(0); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $82 = ($77>>>0)>=(512); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $83 = ($80|0)==(0); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $84 = $83 & $82; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $85 = $81 | $84; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($85)) {
   break;
  }
  $86 = $2; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $87 = ((($86)) + 48|0); //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $88 = HEAP32[$87>>2]|0; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $89 = (($88) + 512)|0; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$87>>2] = $89; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $90 = $2; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $91 = ((($90)) + 48|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $92 = HEAP32[$91>>2]|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $93 = ($92|0)==(0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($93) {
   $94 = $2; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $95 = ((($94)) + 48|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $96 = ((($95)) + 4|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $97 = HEAP32[$96>>2]|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $98 = (($97) + 1)|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$96>>2] = $98; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  }
  $99 = $2; //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  $100 = $3; //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_compress($99,$100); //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  $101 = $3; //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $102 = ((($101)) + 64|0); //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $3 = $102; //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $103 = $4; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $104 = $103; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $105 = HEAP32[$104>>2]|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $106 = (($103) + 4)|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $107 = $106; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $108 = HEAP32[$107>>2]|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $109 = (_i64Subtract(($105|0),($108|0),512,0)|0); //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $110 = tempRet0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $111 = $4; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $112 = $111; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$112>>2] = $109; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $113 = (($111) + 4)|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $114 = $113; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$114>>2] = $110; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $115 = $4; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $116 = $115; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $117 = HEAP32[$116>>2]|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $118 = (($115) + 4)|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $119 = $118; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $120 = HEAP32[$119>>2]|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $121 = ($120>>>0)>(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $122 = ($117>>>0)>(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $123 = ($120|0)==(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $124 = $123 & $122; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $125 = $121 | $124; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $126 = $2; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($125) {
  $127 = ((($126)) + 64|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $128 = $left; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $129 = (($127) + ($128)|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $130 = $3; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $131 = $4; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $132 = $131; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $133 = HEAP32[$132>>2]|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $134 = (($131) + 4)|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $135 = $134; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $136 = HEAP32[$135>>2]|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $137 = (_bitshift64Lshr(($133|0),($136|0),3)|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $138 = tempRet0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  _memcpy(($129|0),($130|0),($137|0))|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $139 = $left; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $140 = $139 << 3; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $141 = ($140|0)<(0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $142 = $141 << 31 >> 31; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $143 = $4; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $144 = $143; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $145 = HEAP32[$144>>2]|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $146 = (($143) + 4)|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $147 = $146; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $148 = HEAP32[$147>>2]|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $149 = (_i64Add(($140|0),($142|0),($145|0),($148|0))|0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $150 = tempRet0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $151 = $2; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $152 = ((($151)) + 56|0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$152>>2] = $149; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  STACKTOP = sp;return; //@line 146 "c_src/crypto_hash/blake256/ref/hash.c"
 } else {
  $153 = ((($126)) + 56|0); //@line 145 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$153>>2] = 0; //@line 145 "c_src/crypto_hash/blake256/ref/hash.c"
  STACKTOP = sp;return; //@line 146 "c_src/crypto_hash/blake256/ref/hash.c"
 }
}
function _blake256_final($S,$digest) {
 $S = $S|0;
 $digest = $digest|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $hi = 0, $lo = 0, $msglen = 0, $oo = 0, $zo = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $msglen = sp + 24|0;
 $zo = sp + 17|0;
 $oo = sp + 16|0;
 $0 = $S;
 $1 = $digest;
 HEAP8[$zo>>0] = 1; //@line 151 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$oo>>0] = -127; //@line 151 "c_src/crypto_hash/blake256/ref/hash.c"
 $2 = $0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $3 = ((($2)) + 48|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $4 = HEAP32[$3>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $5 = $0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $6 = ((($5)) + 56|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $7 = HEAP32[$6>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $8 = (($4) + ($7))|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $lo = $8; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $9 = $0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = ((($9)) + 48|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = ((($10)) + 4|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = HEAP32[$11>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $hi = $12; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = $lo; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = $0; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = ((($14)) + 56|0); //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = HEAP32[$15>>2]|0; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = ($13>>>0)<($16>>>0); //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($17) {
  $18 = $hi; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
  $19 = (($18) + 1)|0; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
  $hi = $19; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $20 = $hi; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $21 = $20 >>> 24; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $22 = $21&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$msglen>>0] = $22; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $23 = $hi; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $24 = $23 >>> 16; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $25 = $24&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $26 = ((($msglen)) + 1|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$26>>0] = $25; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $27 = $hi; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $28 = $27 >>> 8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $29 = $28&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $30 = ((($msglen)) + 2|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$30>>0] = $29; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $31 = $hi; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $32 = $31&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $33 = ((($msglen)) + 3|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$33>>0] = $32; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $34 = $lo; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $35 = $34 >>> 24; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $36 = $35&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $37 = ((($msglen)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$37>>0] = $36; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $38 = $lo; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $39 = $38 >>> 16; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $40 = $39&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $41 = ((($msglen)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $42 = ((($41)) + 1|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$42>>0] = $40; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $43 = $lo; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $44 = $43 >>> 8; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $45 = $44&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $46 = ((($msglen)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $47 = ((($46)) + 2|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$47>>0] = $45; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $48 = $lo; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $49 = $48&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $50 = ((($msglen)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $51 = ((($50)) + 3|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$51>>0] = $49; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $52 = $0; //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $53 = ((($52)) + 56|0); //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $54 = HEAP32[$53>>2]|0; //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $55 = ($54|0)==(440); //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $56 = $0; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($55) {
  $57 = ((($56)) + 48|0); //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $58 = HEAP32[$57>>2]|0; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $59 = (($58) - 8)|0; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$57>>2] = $59; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $60 = $0; //@line 159 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_update($60,$oo,8,0); //@line 159 "c_src/crypto_hash/blake256/ref/hash.c"
 } else {
  $61 = ((($56)) + 56|0); //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $62 = HEAP32[$61>>2]|0; //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $63 = ($62|0)<(440); //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $64 = $0; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  $65 = ((($64)) + 56|0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  $66 = HEAP32[$65>>2]|0; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($63) {
   $67 = ($66|0)!=(0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
   if (!($67)) {
    $68 = $0; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
    $69 = ((($68)) + 60|0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
    HEAP32[$69>>2] = 1; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
   }
   $70 = $0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $71 = ((($70)) + 56|0); //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $72 = HEAP32[$71>>2]|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $73 = (440 - ($72))|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $74 = $0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $75 = ((($74)) + 48|0); //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $76 = HEAP32[$75>>2]|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $77 = (($76) - ($73))|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$75>>2] = $77; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $78 = $0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $79 = $0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $80 = ((($79)) + 56|0); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $81 = HEAP32[$80>>2]|0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $82 = (440 - ($81))|0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $83 = ($82|0)<(0); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $84 = $83 << 31 >> 31; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($78,1797,$82,$84); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
  } else {
   $85 = (512 - ($66))|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $86 = $0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $87 = ((($86)) + 48|0); //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $88 = HEAP32[$87>>2]|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $89 = (($88) - ($85))|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$87>>2] = $89; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $90 = $0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $91 = $0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $92 = ((($91)) + 56|0); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $93 = HEAP32[$92>>2]|0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $94 = (512 - ($93))|0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $95 = ($94|0)<(0); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $96 = $95 << 31 >> 31; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($90,1797,$94,$96); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $97 = $0; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $98 = ((($97)) + 48|0); //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $99 = HEAP32[$98>>2]|0; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $100 = (($99) - 440)|0; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$98>>2] = $100; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $101 = $0; //@line 171 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($101,(1798),440,0); //@line 171 "c_src/crypto_hash/blake256/ref/hash.c"
   $102 = $0; //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
   $103 = ((($102)) + 60|0); //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$103>>2] = 1; //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
  }
  $104 = $0; //@line 174 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_update($104,$zo,8,0); //@line 174 "c_src/crypto_hash/blake256/ref/hash.c"
  $105 = $0; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $106 = ((($105)) + 48|0); //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $107 = HEAP32[$106>>2]|0; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $108 = (($107) - 8)|0; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$106>>2] = $108; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $109 = $0; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $110 = ((($109)) + 48|0); //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $111 = HEAP32[$110>>2]|0; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $112 = (($111) - 64)|0; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$110>>2] = $112; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $113 = $0; //@line 178 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_update($113,$msglen,64,0); //@line 178 "c_src/crypto_hash/blake256/ref/hash.c"
 $114 = $0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $115 = HEAP32[$114>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $116 = $115 >>> 24; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $117 = $116&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $118 = $1; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$118>>0] = $117; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $119 = $0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $120 = HEAP32[$119>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $121 = $120 >>> 16; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $122 = $121&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $123 = $1; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $124 = ((($123)) + 1|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$124>>0] = $122; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $125 = $0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $126 = HEAP32[$125>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $127 = $126 >>> 8; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $128 = $127&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $129 = $1; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $130 = ((($129)) + 2|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$130>>0] = $128; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $131 = $0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $132 = HEAP32[$131>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $133 = $132&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $134 = $1; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $135 = ((($134)) + 3|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$135>>0] = $133; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $136 = $0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $137 = ((($136)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $138 = HEAP32[$137>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $139 = $138 >>> 24; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $140 = $139&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $141 = $1; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $142 = ((($141)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$142>>0] = $140; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $143 = $0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $144 = ((($143)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $145 = HEAP32[$144>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $146 = $145 >>> 16; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $147 = $146&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $148 = $1; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $149 = ((($148)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $150 = ((($149)) + 1|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$150>>0] = $147; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $151 = $0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $152 = ((($151)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $153 = HEAP32[$152>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $154 = $153 >>> 8; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $155 = $154&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $156 = $1; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $157 = ((($156)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $158 = ((($157)) + 2|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$158>>0] = $155; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $159 = $0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $160 = ((($159)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $161 = HEAP32[$160>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $162 = $161&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $163 = $1; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $164 = ((($163)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $165 = ((($164)) + 3|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$165>>0] = $162; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $166 = $0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $167 = ((($166)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $168 = HEAP32[$167>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $169 = $168 >>> 24; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $170 = $169&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $171 = $1; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $172 = ((($171)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$172>>0] = $170; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $173 = $0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $174 = ((($173)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $175 = HEAP32[$174>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $176 = $175 >>> 16; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $177 = $176&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $178 = $1; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $179 = ((($178)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $180 = ((($179)) + 1|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$180>>0] = $177; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $181 = $0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $182 = ((($181)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $183 = HEAP32[$182>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $184 = $183 >>> 8; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $185 = $184&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $186 = $1; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $187 = ((($186)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $188 = ((($187)) + 2|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$188>>0] = $185; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $189 = $0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $190 = ((($189)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $191 = HEAP32[$190>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $192 = $191&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $193 = $1; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $194 = ((($193)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $195 = ((($194)) + 3|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$195>>0] = $192; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $196 = $0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $197 = ((($196)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $198 = HEAP32[$197>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $199 = $198 >>> 24; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $200 = $199&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $201 = $1; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $202 = ((($201)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$202>>0] = $200; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $203 = $0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $204 = ((($203)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $205 = HEAP32[$204>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $206 = $205 >>> 16; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $207 = $206&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $208 = $1; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $209 = ((($208)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $210 = ((($209)) + 1|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$210>>0] = $207; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $211 = $0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $212 = ((($211)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $213 = HEAP32[$212>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $214 = $213 >>> 8; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $215 = $214&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $216 = $1; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $217 = ((($216)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $218 = ((($217)) + 2|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$218>>0] = $215; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $219 = $0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $220 = ((($219)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $221 = HEAP32[$220>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $222 = $221&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $223 = $1; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $224 = ((($223)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $225 = ((($224)) + 3|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$225>>0] = $222; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $226 = $0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $227 = ((($226)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $228 = HEAP32[$227>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $229 = $228 >>> 24; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $230 = $229&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $231 = $1; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $232 = ((($231)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$232>>0] = $230; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $233 = $0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $234 = ((($233)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $235 = HEAP32[$234>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $236 = $235 >>> 16; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $237 = $236&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $238 = $1; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $239 = ((($238)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $240 = ((($239)) + 1|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$240>>0] = $237; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $241 = $0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $242 = ((($241)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $243 = HEAP32[$242>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $244 = $243 >>> 8; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $245 = $244&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $246 = $1; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $247 = ((($246)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $248 = ((($247)) + 2|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$248>>0] = $245; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $249 = $0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $250 = ((($249)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $251 = HEAP32[$250>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $252 = $251&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $253 = $1; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $254 = ((($253)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $255 = ((($254)) + 3|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$255>>0] = $252; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $256 = $0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $257 = ((($256)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $258 = HEAP32[$257>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $259 = $258 >>> 24; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $260 = $259&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $261 = $1; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $262 = ((($261)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$262>>0] = $260; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $263 = $0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $264 = ((($263)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $265 = HEAP32[$264>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $266 = $265 >>> 16; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $267 = $266&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $268 = $1; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $269 = ((($268)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $270 = ((($269)) + 1|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$270>>0] = $267; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $271 = $0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $272 = ((($271)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $273 = HEAP32[$272>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $274 = $273 >>> 8; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $275 = $274&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $276 = $1; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $277 = ((($276)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $278 = ((($277)) + 2|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$278>>0] = $275; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $279 = $0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $280 = ((($279)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $281 = HEAP32[$280>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $282 = $281&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $283 = $1; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $284 = ((($283)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $285 = ((($284)) + 3|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$285>>0] = $282; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $286 = $0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $287 = ((($286)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $288 = HEAP32[$287>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $289 = $288 >>> 24; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $290 = $289&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $291 = $1; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $292 = ((($291)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$292>>0] = $290; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $293 = $0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $294 = ((($293)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $295 = HEAP32[$294>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $296 = $295 >>> 16; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $297 = $296&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $298 = $1; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $299 = ((($298)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $300 = ((($299)) + 1|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$300>>0] = $297; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $301 = $0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $302 = ((($301)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $303 = HEAP32[$302>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $304 = $303 >>> 8; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $305 = $304&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $306 = $1; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $307 = ((($306)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $308 = ((($307)) + 2|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$308>>0] = $305; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $309 = $0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $310 = ((($309)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $311 = HEAP32[$310>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $312 = $311&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $313 = $1; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $314 = ((($313)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $315 = ((($314)) + 3|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$315>>0] = $312; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $316 = $0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $317 = ((($316)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $318 = HEAP32[$317>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $319 = $318 >>> 24; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $320 = $319&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $321 = $1; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $322 = ((($321)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$322>>0] = $320; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $323 = $0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $324 = ((($323)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $325 = HEAP32[$324>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $326 = $325 >>> 16; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $327 = $326&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $328 = $1; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $329 = ((($328)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $330 = ((($329)) + 1|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$330>>0] = $327; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $331 = $0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $332 = ((($331)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $333 = HEAP32[$332>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $334 = $333 >>> 8; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $335 = $334&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $336 = $1; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $337 = ((($336)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $338 = ((($337)) + 2|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$338>>0] = $335; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $339 = $0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $340 = ((($339)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $341 = HEAP32[$340>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $342 = $341&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $343 = $1; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $344 = ((($343)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $345 = ((($344)) + 3|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$345>>0] = $342; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return; //@line 188 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _crypto_hash_blake256_ref($out,$in,$0,$1) {
 $out = $out|0;
 $in = $in|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $S = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $4 = sp;
 $S = sp + 8|0;
 $2 = $out;
 $3 = $in;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 _blake256_init($S); //@line 194 "c_src/crypto_hash/blake256/ref/hash.c"
 $9 = $3; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = $4; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = $10; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = HEAP32[$11>>2]|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = (($10) + 4)|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = $13; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = (___muldi3(($12|0),($15|0),8,0)|0); //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = tempRet0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_update($S,$9,$16,$17); //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = $2; //@line 196 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_final($S,$18); //@line 196 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 197 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake512_compress($S,$block) {
 $S = $S|0;
 $block = $block|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0;
 var $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0;
 var $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0;
 var $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0;
 var $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0;
 var $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0;
 var $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0;
 var $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0;
 var $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0;
 var $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0;
 var $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0;
 var $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0;
 var $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0;
 var $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0;
 var $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0;
 var $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0;
 var $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0;
 var $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0;
 var $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0;
 var $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0;
 var $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0;
 var $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0;
 var $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0;
 var $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0;
 var $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0;
 var $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0;
 var $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0;
 var $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0;
 var $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0;
 var $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0;
 var $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0;
 var $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0;
 var $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0;
 var $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0;
 var $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0;
 var $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0;
 var $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0;
 var $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0;
 var $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0;
 var $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0;
 var $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0;
 var $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0;
 var $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0;
 var $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0;
 var $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0;
 var $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0;
 var $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0;
 var $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0;
 var $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0;
 var $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0;
 var $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0;
 var $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0;
 var $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0;
 var $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0;
 var $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0;
 var $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0;
 var $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0;
 var $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0;
 var $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0;
 var $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0;
 var $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0;
 var $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0;
 var $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0;
 var $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0;
 var $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0;
 var $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0;
 var $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0;
 var $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0;
 var $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0;
 var $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0;
 var $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0;
 var $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0;
 var $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0;
 var $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0;
 var $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0;
 var $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0;
 var $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0;
 var $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0;
 var $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0;
 var $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0;
 var $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0;
 var $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0;
 var $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0;
 var $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0;
 var $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0;
 var $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0;
 var $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0;
 var $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0;
 var $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0;
 var $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0;
 var $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0;
 var $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0;
 var $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0;
 var $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0;
 var $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0;
 var $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0;
 var $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0;
 var $2834 = 0, $2835 = 0, $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0;
 var $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0;
 var $2870 = 0, $2871 = 0, $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0;
 var $2889 = 0, $289 = 0, $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0;
 var $2906 = 0, $2907 = 0, $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0;
 var $2924 = 0, $2925 = 0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0;
 var $2942 = 0, $2943 = 0, $2944 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0;
 var $2960 = 0, $2961 = 0, $2962 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0;
 var $2979 = 0, $298 = 0, $2980 = 0, $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0;
 var $2997 = 0, $2998 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0;
 var $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0;
 var $3031 = 0, $3032 = 0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0;
 var $305 = 0, $3050 = 0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0;
 var $3068 = 0, $3069 = 0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0;
 var $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0;
 var $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0;
 var $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0;
 var $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0;
 var $998 = 0, $999 = 0, $i = 0, $m = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $v = sp + 136|0;
 $m = sp + 8|0;
 $i = sp;
 $0 = $S;
 $1 = $block;
 $2 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $3 = $2; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3>>2] = 0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $4 = (($2) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $5 = $4; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$5>>2] = 0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $6 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $7 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $8 = HEAP32[$7>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $9 = (($6) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $10 = $9; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $11 = HEAP32[$10>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $12 = ($11>>>0)<(0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $13 = ($8>>>0)<(16); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $14 = ($11|0)==(0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $15 = $14 & $13; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $16 = $12 | $15; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($16)) {
   break;
  }
  $17 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $18 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $19 = $18; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $20 = HEAP32[$19>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $21 = (($18) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $22 = $21; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $23 = HEAP32[$22>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $24 = (___muldi3(($20|0),($23|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $25 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $26 = (($17) + ($24)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $27 = HEAP8[$26>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $28 = $27&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $29 = $28 << 24; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $30 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $31 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $32 = $31; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $33 = HEAP32[$32>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $34 = (($31) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $35 = $34; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $36 = HEAP32[$35>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $37 = (___muldi3(($33|0),($36|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $38 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $39 = (($30) + ($37)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $40 = ((($39)) + 1|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $41 = HEAP8[$40>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $42 = $41&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $43 = $42 << 16; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $44 = $29 | $43; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $45 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $46 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $47 = $46; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $48 = HEAP32[$47>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $49 = (($46) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $50 = $49; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $51 = HEAP32[$50>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $52 = (___muldi3(($48|0),($51|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $53 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $54 = (($45) + ($52)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $55 = ((($54)) + 2|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $56 = HEAP8[$55>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $57 = $56&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $58 = $57 << 8; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $59 = $44 | $58; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $60 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $61 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $62 = $61; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $63 = HEAP32[$62>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $64 = (($61) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $65 = $64; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $66 = HEAP32[$65>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $67 = (___muldi3(($63|0),($66|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $68 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $69 = (($60) + ($67)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $70 = ((($69)) + 3|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $71 = HEAP8[$70>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $72 = $71&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $73 = $59 | $72; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $74 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $75 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $76 = $75; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $77 = HEAP32[$76>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $78 = (($75) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $79 = $78; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $80 = HEAP32[$79>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $81 = (___muldi3(($77|0),($80|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $82 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $83 = (($74) + ($81)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $84 = ((($83)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $85 = HEAP8[$84>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $86 = $85&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $87 = $86 << 24; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $88 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $89 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $90 = $89; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $91 = HEAP32[$90>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $92 = (($89) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $93 = $92; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $94 = HEAP32[$93>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $95 = (___muldi3(($91|0),($94|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $96 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $97 = (($88) + ($95)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $98 = ((($97)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $99 = ((($98)) + 1|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $100 = HEAP8[$99>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $101 = $100&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $102 = $101 << 16; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $103 = $87 | $102; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $104 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $105 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $106 = $105; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $107 = HEAP32[$106>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $108 = (($105) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $109 = $108; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $110 = HEAP32[$109>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $111 = (___muldi3(($107|0),($110|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $112 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $113 = (($104) + ($111)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $114 = ((($113)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $115 = ((($114)) + 2|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $116 = HEAP8[$115>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $117 = $116&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $118 = $117 << 8; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $119 = $103 | $118; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $120 = $1; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $121 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $122 = $121; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $123 = HEAP32[$122>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $124 = (($121) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $125 = $124; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $126 = HEAP32[$125>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $127 = (___muldi3(($123|0),($126|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $128 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $129 = (($120) + ($127)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $130 = ((($129)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $131 = ((($130)) + 3|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $132 = HEAP8[$131>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $133 = $132&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $134 = $119 | $133; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $135 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $136 = $135; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $137 = HEAP32[$136>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $138 = (($135) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $139 = $138; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $140 = HEAP32[$139>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $141 = (($m) + ($137<<3)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $142 = $141; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $143 = $142; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$143>>2] = $134; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $144 = (($142) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $145 = $144; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$145>>2] = $73; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $146 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $147 = $146; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $148 = HEAP32[$147>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $149 = (($146) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $150 = $149; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $151 = HEAP32[$150>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $152 = (_i64Add(($148|0),($151|0),1,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $153 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $154 = $i; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $155 = $154; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$155>>2] = $152; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $156 = (($154) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $157 = $156; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$157>>2] = $153; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $158 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $159 = $158; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$159>>2] = 0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $160 = (($158) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $161 = $160; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$161>>2] = 0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $162 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $163 = $162; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $164 = HEAP32[$163>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $165 = (($162) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $166 = $165; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $167 = HEAP32[$166>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $168 = ($167>>>0)<(0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $169 = ($164>>>0)<(8); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $170 = ($167|0)==(0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $171 = $170 & $169; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $172 = $168 | $171; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($172)) {
   break;
  }
  $173 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $174 = $173; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $175 = HEAP32[$174>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $176 = (($173) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $177 = $176; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $178 = HEAP32[$177>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $179 = $0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $180 = (($179) + ($175<<3)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $181 = $180; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $182 = $181; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $183 = HEAP32[$182>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $184 = (($181) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $185 = $184; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $186 = HEAP32[$185>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $187 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $188 = $187; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $189 = HEAP32[$188>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $190 = (($187) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $191 = $190; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $192 = HEAP32[$191>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $193 = (($v) + ($189<<3)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $194 = $193; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $195 = $194; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$195>>2] = $183; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $196 = (($194) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $197 = $196; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$197>>2] = $186; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $198 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $199 = $198; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $200 = HEAP32[$199>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $201 = (($198) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $202 = $201; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $203 = HEAP32[$202>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $204 = (_i64Add(($200|0),($203|0),1,0)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $205 = tempRet0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $206 = $i; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $207 = $206; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$207>>2] = $204; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $208 = (($206) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $209 = $208; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$209>>2] = $205; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $210 = $0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $211 = ((($210)) + 64|0); //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $212 = $211; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $213 = $212; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $214 = HEAP32[$213>>2]|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $215 = (($212) + 4)|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $216 = $215; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $217 = HEAP32[$216>>2]|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $218 = $214 ^ -2052912941; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $219 = $217 ^ 608135816; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $220 = ((($v)) + 64|0); //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $221 = $220; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $222 = $221; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$222>>2] = $218; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $223 = (($221) + 4)|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $224 = $223; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$224>>2] = $219; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $225 = $0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $226 = ((($225)) + 64|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $227 = ((($226)) + 8|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $228 = $227; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $229 = $228; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $230 = HEAP32[$229>>2]|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $231 = (($228) + 4)|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $232 = $231; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $233 = HEAP32[$232>>2]|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $234 = $230 ^ 57701188; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $235 = $233 ^ 320440878; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $236 = ((($v)) + 72|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $237 = $236; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $238 = $237; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$238>>2] = $234; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $239 = (($237) + 4)|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $240 = $239; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$240>>2] = $235; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $241 = $0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $242 = ((($241)) + 64|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $243 = ((($242)) + 16|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $244 = $243; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $245 = $244; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $246 = HEAP32[$245>>2]|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $247 = (($244) + 4)|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $248 = $247; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $249 = HEAP32[$248>>2]|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $250 = $246 ^ 698298832; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $251 = $249 ^ -1542899678; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $252 = ((($v)) + 80|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $253 = $252; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $254 = $253; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$254>>2] = $250; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $255 = (($253) + 4)|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $256 = $255; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$256>>2] = $251; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $257 = $0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $258 = ((($257)) + 64|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $259 = ((($258)) + 24|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $260 = $259; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $261 = $260; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $262 = HEAP32[$261>>2]|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $263 = (($260) + 4)|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $264 = $263; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $265 = HEAP32[$264>>2]|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $266 = $262 ^ -330404727; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $267 = $265 ^ 137296536; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $268 = ((($v)) + 88|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $269 = $268; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $270 = $269; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$270>>2] = $266; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $271 = (($269) + 4)|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $272 = $271; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$272>>2] = $267; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $273 = ((($v)) + 96|0); //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $274 = $273; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $275 = $274; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$275>>2] = 953160567; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $276 = (($274) + 4)|0; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $277 = $276; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$277>>2] = 1160258022; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $278 = ((($v)) + 104|0); //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $279 = $278; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $280 = $279; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$280>>2] = 887688300; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $281 = (($279) + 4)|0; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $282 = $281; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$282>>2] = -1101764913; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $283 = ((($v)) + 112|0); //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $284 = $283; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $285 = $284; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$285>>2] = -914599715; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $286 = (($284) + 4)|0; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $287 = $286; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$287>>2] = -1062458953; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $288 = ((($v)) + 120|0); //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $289 = $288; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $290 = $289; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$290>>2] = -1253635817; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $291 = (($289) + 4)|0; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $292 = $291; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$292>>2] = 1065670069; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $293 = $0; //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $294 = ((($293)) + 116|0); //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $295 = HEAP32[$294>>2]|0; //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $296 = ($295|0)==(0); //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($296) {
  $297 = $0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $298 = ((($297)) + 96|0); //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $299 = $298; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $300 = $299; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $301 = HEAP32[$300>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $302 = (($299) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $303 = $302; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $304 = HEAP32[$303>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $305 = ((($v)) + 96|0); //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $306 = $305; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $307 = $306; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $308 = HEAP32[$307>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $309 = (($306) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $310 = $309; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $311 = HEAP32[$310>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $312 = $308 ^ $301; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $313 = $311 ^ $304; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $314 = $305; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $315 = $314; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$315>>2] = $312; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $316 = (($314) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $317 = $316; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$317>>2] = $313; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $318 = $0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $319 = ((($318)) + 96|0); //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $320 = $319; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $321 = $320; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $322 = HEAP32[$321>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $323 = (($320) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $324 = $323; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $325 = HEAP32[$324>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $326 = ((($v)) + 104|0); //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $327 = $326; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $328 = $327; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $329 = HEAP32[$328>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $330 = (($327) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $331 = $330; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $332 = HEAP32[$331>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $333 = $329 ^ $322; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $334 = $332 ^ $325; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $335 = $326; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $336 = $335; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$336>>2] = $333; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $337 = (($335) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $338 = $337; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$338>>2] = $334; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $339 = $0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $340 = ((($339)) + 96|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $341 = ((($340)) + 8|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $342 = $341; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $343 = $342; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $344 = HEAP32[$343>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $345 = (($342) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $346 = $345; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $347 = HEAP32[$346>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $348 = ((($v)) + 112|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $349 = $348; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $350 = $349; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $351 = HEAP32[$350>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $352 = (($349) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $353 = $352; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $354 = HEAP32[$353>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $355 = $351 ^ $344; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $356 = $354 ^ $347; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $357 = $348; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $358 = $357; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$358>>2] = $355; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $359 = (($357) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $360 = $359; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$360>>2] = $356; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $361 = $0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $362 = ((($361)) + 96|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $363 = ((($362)) + 8|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $364 = $363; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $365 = $364; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $366 = HEAP32[$365>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $367 = (($364) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $368 = $367; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $369 = HEAP32[$368>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $370 = ((($v)) + 120|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $371 = $370; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $372 = $371; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $373 = HEAP32[$372>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $374 = (($371) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $375 = $374; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $376 = HEAP32[$375>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $377 = $373 ^ $366; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $378 = $376 ^ $369; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $379 = $370; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $380 = $379; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$380>>2] = $377; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $381 = (($379) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $382 = $381; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$382>>2] = $378; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $383 = $i; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $384 = $383; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$384>>2] = 0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $385 = (($383) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $386 = $385; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$386>>2] = 0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $387 = $i; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $388 = $387; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $389 = HEAP32[$388>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $390 = (($387) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $391 = $390; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $392 = HEAP32[$391>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $393 = ($392>>>0)<(0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $394 = ($389>>>0)<(16); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $395 = ($392|0)==(0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $396 = $395 & $394; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $397 = $393 | $396; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($397)) {
   break;
  }
  $398 = $i; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $399 = $398; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $400 = HEAP32[$399>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $401 = (($398) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $402 = $401; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $403 = HEAP32[$402>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $404 = (1861 + ($400<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $405 = HEAP8[$404>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $406 = $405&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $407 = (($m) + ($406<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $408 = $407; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $409 = $408; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $410 = HEAP32[$409>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $411 = (($408) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $412 = $411; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $413 = HEAP32[$412>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $414 = $i; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $415 = $414; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $416 = HEAP32[$415>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $417 = (($414) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $418 = $417; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $419 = HEAP32[$418>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $420 = (1861 + ($416<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $421 = ((($420)) + 1|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $422 = HEAP8[$421>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $423 = $422&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $424 = (8 + ($423<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $425 = $424; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $426 = $425; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $427 = HEAP32[$426>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $428 = (($425) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $429 = $428; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $430 = HEAP32[$429>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $431 = $410 ^ $427; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $432 = $413 ^ $430; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $433 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $434 = $433; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $435 = $434; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $436 = HEAP32[$435>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $437 = (($434) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $438 = $437; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $439 = HEAP32[$438>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $440 = (_i64Add(($431|0),($432|0),($436|0),($439|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $441 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $442 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $443 = $442; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $444 = HEAP32[$443>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $445 = (($442) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $446 = $445; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $447 = HEAP32[$446>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $448 = (_i64Add(($444|0),($447|0),($440|0),($441|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $449 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $450 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $451 = $450; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$451>>2] = $448; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $452 = (($450) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $453 = $452; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$453>>2] = $449; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $454 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $455 = $454; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $456 = $455; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $457 = HEAP32[$456>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $458 = (($455) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $459 = $458; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $460 = HEAP32[$459>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $461 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $462 = $461; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $463 = HEAP32[$462>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $464 = (($461) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $465 = $464; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $466 = HEAP32[$465>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $467 = $457 ^ $463; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $460 ^ $466; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $468 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $469 = $468; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $470 = $469; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $471 = HEAP32[$470>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $472 = (($469) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $473 = $472; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $474 = HEAP32[$473>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $475 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $476 = $475; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $477 = HEAP32[$476>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $478 = (($475) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $479 = $478; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $480 = HEAP32[$479>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $471 ^ $477; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $481 = $474 ^ $480; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $482 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $483 = $482; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $484 = $483; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$484>>2] = $481; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $485 = (($483) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $486 = $485; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$486>>2] = $467; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $487 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $488 = $487; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $489 = $488; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $490 = HEAP32[$489>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $491 = (($488) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $492 = $491; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $493 = HEAP32[$492>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $494 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $495 = $494; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $496 = $495; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $497 = HEAP32[$496>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $498 = (($495) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $499 = $498; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $500 = HEAP32[$499>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $501 = (_i64Add(($497|0),($500|0),($490|0),($493|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $502 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $503 = $494; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $504 = $503; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$504>>2] = $501; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $505 = (($503) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $506 = $505; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$506>>2] = $502; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $507 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $508 = $507; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $509 = $508; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $510 = HEAP32[$509>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $511 = (($508) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $512 = $511; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $513 = HEAP32[$512>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $514 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $515 = $514; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $516 = $515; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $517 = HEAP32[$516>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $518 = (($515) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $519 = $518; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $520 = HEAP32[$519>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $521 = $510 ^ $517; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $522 = $513 ^ $520; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $523 = (_bitshift64Shl(($521|0),($522|0),39)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $524 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $525 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $526 = $525; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $527 = $526; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $528 = HEAP32[$527>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $529 = (($526) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $530 = $529; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $531 = HEAP32[$530>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $532 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $533 = $532; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $534 = $533; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $535 = HEAP32[$534>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $536 = (($533) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $537 = $536; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $538 = HEAP32[$537>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $539 = $528 ^ $535; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $540 = $531 ^ $538; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $541 = (_bitshift64Lshr(($539|0),($540|0),25)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $542 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $543 = $523 | $541; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $544 = $524 | $542; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $545 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $546 = $545; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $547 = $546; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$547>>2] = $543; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $548 = (($546) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $549 = $548; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$549>>2] = $544; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $550 = $i; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $551 = $550; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $552 = HEAP32[$551>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $553 = (($550) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $554 = $553; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $555 = HEAP32[$554>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $556 = (1861 + ($552<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $557 = ((($556)) + 1|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $558 = HEAP8[$557>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $559 = $558&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $560 = (($m) + ($559<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $561 = $560; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $562 = $561; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $563 = HEAP32[$562>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $564 = (($561) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $565 = $564; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $566 = HEAP32[$565>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $567 = $i; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $568 = $567; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $569 = HEAP32[$568>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $570 = (($567) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $571 = $570; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $572 = HEAP32[$571>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $573 = (1861 + ($569<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $574 = HEAP8[$573>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $575 = $574&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $576 = (8 + ($575<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $577 = $576; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $578 = $577; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $579 = HEAP32[$578>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $580 = (($577) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $581 = $580; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $582 = HEAP32[$581>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $583 = $563 ^ $579; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $584 = $566 ^ $582; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $585 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $586 = $585; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $587 = $586; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $588 = HEAP32[$587>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $589 = (($586) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $590 = $589; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $591 = HEAP32[$590>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $592 = (_i64Add(($583|0),($584|0),($588|0),($591|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $593 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $594 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $595 = $594; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $596 = HEAP32[$595>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $597 = (($594) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $598 = $597; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $599 = HEAP32[$598>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $600 = (_i64Add(($596|0),($599|0),($592|0),($593|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $601 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $602 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $603 = $602; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$603>>2] = $600; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $604 = (($602) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $605 = $604; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$605>>2] = $601; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $606 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $607 = $606; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $608 = $607; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $609 = HEAP32[$608>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $610 = (($607) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $611 = $610; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $612 = HEAP32[$611>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $613 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $614 = $613; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $615 = HEAP32[$614>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $616 = (($613) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $617 = $616; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $618 = HEAP32[$617>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $619 = $609 ^ $615; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $620 = $612 ^ $618; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $621 = (_bitshift64Shl(($619|0),($620|0),48)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $622 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $623 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $624 = $623; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $625 = $624; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $626 = HEAP32[$625>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $627 = (($624) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $628 = $627; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $629 = HEAP32[$628>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $630 = $v; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $631 = $630; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $632 = HEAP32[$631>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $633 = (($630) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $634 = $633; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $635 = HEAP32[$634>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $636 = $626 ^ $632; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $637 = $629 ^ $635; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $638 = (_bitshift64Lshr(($636|0),($637|0),16)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $639 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $640 = $621 | $638; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $641 = $622 | $639; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $642 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $643 = $642; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $644 = $643; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$644>>2] = $640; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $645 = (($643) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $646 = $645; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$646>>2] = $641; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $647 = ((($v)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $648 = $647; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $649 = $648; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $650 = HEAP32[$649>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $651 = (($648) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $652 = $651; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $653 = HEAP32[$652>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $654 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $655 = $654; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $656 = $655; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $657 = HEAP32[$656>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $658 = (($655) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $659 = $658; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $660 = HEAP32[$659>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $661 = (_i64Add(($657|0),($660|0),($650|0),($653|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $662 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $663 = $654; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $664 = $663; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$664>>2] = $661; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $665 = (($663) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $666 = $665; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$666>>2] = $662; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $667 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $668 = $667; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $669 = $668; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $670 = HEAP32[$669>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $671 = (($668) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $672 = $671; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $673 = HEAP32[$672>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $674 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $675 = $674; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $676 = $675; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $677 = HEAP32[$676>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $678 = (($675) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $679 = $678; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $680 = HEAP32[$679>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $681 = $670 ^ $677; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $682 = $673 ^ $680; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $683 = (_bitshift64Shl(($681|0),($682|0),53)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $684 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $685 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $686 = $685; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $687 = $686; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $688 = HEAP32[$687>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $689 = (($686) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $690 = $689; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $691 = HEAP32[$690>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $692 = ((($v)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $693 = $692; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $694 = $693; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $695 = HEAP32[$694>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $696 = (($693) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $697 = $696; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $698 = HEAP32[$697>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $699 = $688 ^ $695; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $700 = $691 ^ $698; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $701 = (_bitshift64Lshr(($699|0),($700|0),11)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $702 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $703 = $683 | $701; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $704 = $684 | $702; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $705 = ((($v)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $706 = $705; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $707 = $706; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$707>>2] = $703; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $708 = (($706) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $709 = $708; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$709>>2] = $704; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $710 = $i; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $711 = $710; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $712 = HEAP32[$711>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $713 = (($710) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $714 = $713; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $715 = HEAP32[$714>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $716 = (1861 + ($712<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $717 = ((($716)) + 2|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $718 = HEAP8[$717>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $719 = $718&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $720 = (($m) + ($719<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $721 = $720; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $722 = $721; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $723 = HEAP32[$722>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $724 = (($721) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $725 = $724; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $726 = HEAP32[$725>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $727 = $i; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $728 = $727; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $729 = HEAP32[$728>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $730 = (($727) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $731 = $730; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $732 = HEAP32[$731>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $733 = (1861 + ($729<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $734 = ((($733)) + 3|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $735 = HEAP8[$734>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $736 = $735&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $737 = (8 + ($736<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $738 = $737; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $739 = $738; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $740 = HEAP32[$739>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $741 = (($738) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $742 = $741; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $743 = HEAP32[$742>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $744 = $723 ^ $740; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $745 = $726 ^ $743; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $746 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $747 = $746; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $748 = $747; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $749 = HEAP32[$748>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $750 = (($747) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $751 = $750; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $752 = HEAP32[$751>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $753 = (_i64Add(($744|0),($745|0),($749|0),($752|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $754 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $755 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $756 = $755; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $757 = $756; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $758 = HEAP32[$757>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $759 = (($756) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $760 = $759; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $761 = HEAP32[$760>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $762 = (_i64Add(($758|0),($761|0),($753|0),($754|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $763 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $764 = $755; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $765 = $764; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$765>>2] = $762; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $766 = (($764) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $767 = $766; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$767>>2] = $763; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $768 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $769 = $768; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $770 = $769; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $771 = HEAP32[$770>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $772 = (($769) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $773 = $772; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $774 = HEAP32[$773>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $775 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $776 = $775; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $777 = $776; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $778 = HEAP32[$777>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $779 = (($776) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $780 = $779; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $781 = HEAP32[$780>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $782 = $771 ^ $778; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $774 ^ $781; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $783 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $784 = $783; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $785 = $784; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $786 = HEAP32[$785>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $787 = (($784) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $788 = $787; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $789 = HEAP32[$788>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $790 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $791 = $790; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $792 = $791; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $793 = HEAP32[$792>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $794 = (($791) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $795 = $794; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $796 = HEAP32[$795>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $786 ^ $793; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $797 = $789 ^ $796; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $798 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $799 = $798; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $800 = $799; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$800>>2] = $797; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $801 = (($799) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $802 = $801; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$802>>2] = $782; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $803 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $804 = $803; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $805 = $804; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $806 = HEAP32[$805>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $807 = (($804) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $808 = $807; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $809 = HEAP32[$808>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $810 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $811 = $810; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $812 = $811; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $813 = HEAP32[$812>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $814 = (($811) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $815 = $814; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $816 = HEAP32[$815>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $817 = (_i64Add(($813|0),($816|0),($806|0),($809|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $818 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $819 = $810; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $820 = $819; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$820>>2] = $817; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $821 = (($819) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $822 = $821; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$822>>2] = $818; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $823 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $824 = $823; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $825 = $824; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $826 = HEAP32[$825>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $827 = (($824) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $828 = $827; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $829 = HEAP32[$828>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $830 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $831 = $830; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $832 = $831; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $833 = HEAP32[$832>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $834 = (($831) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $835 = $834; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $836 = HEAP32[$835>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $837 = $826 ^ $833; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $838 = $829 ^ $836; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $839 = (_bitshift64Shl(($837|0),($838|0),39)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $840 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $841 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $842 = $841; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $843 = $842; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $844 = HEAP32[$843>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $845 = (($842) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $846 = $845; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $847 = HEAP32[$846>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $848 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $849 = $848; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $850 = $849; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $851 = HEAP32[$850>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $852 = (($849) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $853 = $852; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $854 = HEAP32[$853>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $855 = $844 ^ $851; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $856 = $847 ^ $854; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $857 = (_bitshift64Lshr(($855|0),($856|0),25)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $858 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $859 = $839 | $857; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $860 = $840 | $858; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $861 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $862 = $861; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $863 = $862; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$863>>2] = $859; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $864 = (($862) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $865 = $864; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$865>>2] = $860; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $866 = $i; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $867 = $866; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $868 = HEAP32[$867>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $869 = (($866) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $870 = $869; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $871 = HEAP32[$870>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $872 = (1861 + ($868<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $873 = ((($872)) + 3|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $874 = HEAP8[$873>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $875 = $874&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $876 = (($m) + ($875<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $877 = $876; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $878 = $877; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $879 = HEAP32[$878>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $880 = (($877) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $881 = $880; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $882 = HEAP32[$881>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $883 = $i; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $884 = $883; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $885 = HEAP32[$884>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $886 = (($883) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $887 = $886; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $888 = HEAP32[$887>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $889 = (1861 + ($885<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $890 = ((($889)) + 2|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $891 = HEAP8[$890>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $892 = $891&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $893 = (8 + ($892<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $894 = $893; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $895 = $894; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $896 = HEAP32[$895>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $897 = (($894) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $898 = $897; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $899 = HEAP32[$898>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $900 = $879 ^ $896; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $901 = $882 ^ $899; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $902 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $903 = $902; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $904 = $903; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $905 = HEAP32[$904>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $906 = (($903) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $907 = $906; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $908 = HEAP32[$907>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $909 = (_i64Add(($900|0),($901|0),($905|0),($908|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $910 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $911 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $912 = $911; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $913 = $912; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $914 = HEAP32[$913>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $915 = (($912) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $916 = $915; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $917 = HEAP32[$916>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $918 = (_i64Add(($914|0),($917|0),($909|0),($910|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $919 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $920 = $911; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $921 = $920; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$921>>2] = $918; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $922 = (($920) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $923 = $922; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$923>>2] = $919; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $924 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $925 = $924; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $926 = $925; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $927 = HEAP32[$926>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $928 = (($925) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $929 = $928; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $930 = HEAP32[$929>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $931 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $932 = $931; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $933 = $932; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $934 = HEAP32[$933>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $935 = (($932) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $936 = $935; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $937 = HEAP32[$936>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $938 = $927 ^ $934; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $939 = $930 ^ $937; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $940 = (_bitshift64Shl(($938|0),($939|0),48)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $941 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $942 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $943 = $942; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $944 = $943; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $945 = HEAP32[$944>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $946 = (($943) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $947 = $946; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $948 = HEAP32[$947>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $949 = ((($v)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $950 = $949; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $951 = $950; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $952 = HEAP32[$951>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $953 = (($950) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $954 = $953; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $955 = HEAP32[$954>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $956 = $945 ^ $952; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $957 = $948 ^ $955; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $958 = (_bitshift64Lshr(($956|0),($957|0),16)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $959 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $960 = $940 | $958; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $961 = $941 | $959; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $962 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $963 = $962; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $964 = $963; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$964>>2] = $960; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $965 = (($963) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $966 = $965; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$966>>2] = $961; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $967 = ((($v)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $968 = $967; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $969 = $968; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $970 = HEAP32[$969>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $971 = (($968) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $972 = $971; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $973 = HEAP32[$972>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $974 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $975 = $974; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $976 = $975; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $977 = HEAP32[$976>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $978 = (($975) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $979 = $978; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $980 = HEAP32[$979>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $981 = (_i64Add(($977|0),($980|0),($970|0),($973|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $982 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $983 = $974; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $984 = $983; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$984>>2] = $981; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $985 = (($983) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $986 = $985; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$986>>2] = $982; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $987 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $988 = $987; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $989 = $988; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $990 = HEAP32[$989>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $991 = (($988) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $992 = $991; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $993 = HEAP32[$992>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $994 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $995 = $994; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $996 = $995; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $997 = HEAP32[$996>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $998 = (($995) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $999 = $998; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1000 = HEAP32[$999>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1001 = $990 ^ $997; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1002 = $993 ^ $1000; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1003 = (_bitshift64Shl(($1001|0),($1002|0),53)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1004 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1005 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1006 = $1005; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1007 = $1006; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1008 = HEAP32[$1007>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1009 = (($1006) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1010 = $1009; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1011 = HEAP32[$1010>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1012 = ((($v)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1013 = $1012; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1014 = $1013; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1015 = HEAP32[$1014>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1016 = (($1013) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1017 = $1016; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1018 = HEAP32[$1017>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1019 = $1008 ^ $1015; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1020 = $1011 ^ $1018; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1021 = (_bitshift64Lshr(($1019|0),($1020|0),11)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1022 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1023 = $1003 | $1021; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1024 = $1004 | $1022; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1025 = ((($v)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1026 = $1025; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1027 = $1026; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1027>>2] = $1023; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1028 = (($1026) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1029 = $1028; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1029>>2] = $1024; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1030 = $i; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1031 = $1030; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1032 = HEAP32[$1031>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1033 = (($1030) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1034 = $1033; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1035 = HEAP32[$1034>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1036 = (1861 + ($1032<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1037 = ((($1036)) + 4|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1038 = HEAP8[$1037>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1039 = $1038&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1040 = (($m) + ($1039<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1041 = $1040; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1042 = $1041; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1043 = HEAP32[$1042>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1044 = (($1041) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1045 = $1044; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1046 = HEAP32[$1045>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1047 = $i; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1048 = $1047; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1049 = HEAP32[$1048>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1050 = (($1047) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1051 = $1050; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1052 = HEAP32[$1051>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1053 = (1861 + ($1049<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1054 = ((($1053)) + 5|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1055 = HEAP8[$1054>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1056 = $1055&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1057 = (8 + ($1056<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1058 = $1057; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1059 = $1058; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1060 = HEAP32[$1059>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1061 = (($1058) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1062 = $1061; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1063 = HEAP32[$1062>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1064 = $1043 ^ $1060; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1065 = $1046 ^ $1063; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1066 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1067 = $1066; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1068 = $1067; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1069 = HEAP32[$1068>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1070 = (($1067) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1071 = $1070; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1072 = HEAP32[$1071>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1073 = (_i64Add(($1064|0),($1065|0),($1069|0),($1072|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1074 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1075 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1076 = $1075; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1077 = $1076; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1078 = HEAP32[$1077>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1079 = (($1076) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1080 = $1079; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1081 = HEAP32[$1080>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1082 = (_i64Add(($1078|0),($1081|0),($1073|0),($1074|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1083 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1084 = $1075; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1085 = $1084; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1085>>2] = $1082; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1086 = (($1084) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1087 = $1086; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1087>>2] = $1083; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1088 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1089 = $1088; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1090 = $1089; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1091 = HEAP32[$1090>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1092 = (($1089) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1093 = $1092; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1094 = HEAP32[$1093>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1095 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1096 = $1095; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1097 = $1096; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1098 = HEAP32[$1097>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1099 = (($1096) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1100 = $1099; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1101 = HEAP32[$1100>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1102 = $1091 ^ $1098; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1094 ^ $1101; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1103 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1104 = $1103; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1105 = $1104; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1106 = HEAP32[$1105>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1107 = (($1104) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1108 = $1107; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1109 = HEAP32[$1108>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1110 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1111 = $1110; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1112 = $1111; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1113 = HEAP32[$1112>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1114 = (($1111) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1115 = $1114; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1116 = HEAP32[$1115>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1106 ^ $1113; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1117 = $1109 ^ $1116; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1118 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1119 = $1118; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1120 = $1119; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1120>>2] = $1117; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1121 = (($1119) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1122 = $1121; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1122>>2] = $1102; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1123 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1124 = $1123; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1125 = $1124; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1126 = HEAP32[$1125>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1127 = (($1124) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1128 = $1127; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1129 = HEAP32[$1128>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1130 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1131 = $1130; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1132 = $1131; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1133 = HEAP32[$1132>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1134 = (($1131) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1135 = $1134; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1136 = HEAP32[$1135>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1137 = (_i64Add(($1133|0),($1136|0),($1126|0),($1129|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1138 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1139 = $1130; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1140 = $1139; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1140>>2] = $1137; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1141 = (($1139) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1142 = $1141; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1142>>2] = $1138; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1143 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1144 = $1143; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1145 = $1144; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1146 = HEAP32[$1145>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1147 = (($1144) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1148 = $1147; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1149 = HEAP32[$1148>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1150 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1151 = $1150; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1152 = $1151; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1153 = HEAP32[$1152>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1154 = (($1151) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1155 = $1154; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1156 = HEAP32[$1155>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1157 = $1146 ^ $1153; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1158 = $1149 ^ $1156; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1159 = (_bitshift64Shl(($1157|0),($1158|0),39)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1160 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1161 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1162 = $1161; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1163 = $1162; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1164 = HEAP32[$1163>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1165 = (($1162) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1166 = $1165; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1167 = HEAP32[$1166>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1168 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1169 = $1168; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1170 = $1169; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1171 = HEAP32[$1170>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1172 = (($1169) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1173 = $1172; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1174 = HEAP32[$1173>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1175 = $1164 ^ $1171; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1176 = $1167 ^ $1174; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1177 = (_bitshift64Lshr(($1175|0),($1176|0),25)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1178 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1179 = $1159 | $1177; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1180 = $1160 | $1178; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1181 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1182 = $1181; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1183 = $1182; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1183>>2] = $1179; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1184 = (($1182) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1185 = $1184; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1185>>2] = $1180; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1186 = $i; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1187 = $1186; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1188 = HEAP32[$1187>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1189 = (($1186) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1190 = $1189; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1191 = HEAP32[$1190>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1192 = (1861 + ($1188<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1193 = ((($1192)) + 5|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1194 = HEAP8[$1193>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1195 = $1194&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1196 = (($m) + ($1195<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1197 = $1196; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1198 = $1197; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1199 = HEAP32[$1198>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1200 = (($1197) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1201 = $1200; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1202 = HEAP32[$1201>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1203 = $i; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1204 = $1203; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1205 = HEAP32[$1204>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1206 = (($1203) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1207 = $1206; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1208 = HEAP32[$1207>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1209 = (1861 + ($1205<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1210 = ((($1209)) + 4|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1211 = HEAP8[$1210>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1212 = $1211&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1213 = (8 + ($1212<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1214 = $1213; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1215 = $1214; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1216 = HEAP32[$1215>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1217 = (($1214) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1218 = $1217; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1219 = HEAP32[$1218>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1220 = $1199 ^ $1216; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1221 = $1202 ^ $1219; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1222 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1223 = $1222; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1224 = $1223; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1225 = HEAP32[$1224>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1226 = (($1223) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1227 = $1226; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1228 = HEAP32[$1227>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1229 = (_i64Add(($1220|0),($1221|0),($1225|0),($1228|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1230 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1231 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1232 = $1231; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1233 = $1232; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1234 = HEAP32[$1233>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1235 = (($1232) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1236 = $1235; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1237 = HEAP32[$1236>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1238 = (_i64Add(($1234|0),($1237|0),($1229|0),($1230|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1239 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1240 = $1231; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1241 = $1240; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1241>>2] = $1238; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1242 = (($1240) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1243 = $1242; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1243>>2] = $1239; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1244 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1245 = $1244; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1246 = $1245; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1247 = HEAP32[$1246>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1248 = (($1245) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1249 = $1248; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1250 = HEAP32[$1249>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1251 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1252 = $1251; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1253 = $1252; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1254 = HEAP32[$1253>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1255 = (($1252) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1256 = $1255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1257 = HEAP32[$1256>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1258 = $1247 ^ $1254; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1259 = $1250 ^ $1257; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1260 = (_bitshift64Shl(($1258|0),($1259|0),48)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1261 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1262 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1263 = $1262; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1264 = $1263; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1265 = HEAP32[$1264>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1266 = (($1263) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1267 = $1266; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1268 = HEAP32[$1267>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1269 = ((($v)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1270 = $1269; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1271 = $1270; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1272 = HEAP32[$1271>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1273 = (($1270) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1274 = $1273; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1275 = HEAP32[$1274>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1276 = $1265 ^ $1272; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1277 = $1268 ^ $1275; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1278 = (_bitshift64Lshr(($1276|0),($1277|0),16)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1279 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1280 = $1260 | $1278; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1281 = $1261 | $1279; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1282 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1283 = $1282; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1284 = $1283; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1284>>2] = $1280; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1285 = (($1283) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1286 = $1285; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1286>>2] = $1281; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1287 = ((($v)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1288 = $1287; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1289 = $1288; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1290 = HEAP32[$1289>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1291 = (($1288) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1292 = $1291; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1293 = HEAP32[$1292>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1294 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1295 = $1294; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1296 = $1295; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1297 = HEAP32[$1296>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1298 = (($1295) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1299 = $1298; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1300 = HEAP32[$1299>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1301 = (_i64Add(($1297|0),($1300|0),($1290|0),($1293|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1302 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1303 = $1294; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1304 = $1303; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1304>>2] = $1301; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1305 = (($1303) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1306 = $1305; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1306>>2] = $1302; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1307 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1308 = $1307; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1309 = $1308; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1310 = HEAP32[$1309>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1311 = (($1308) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1312 = $1311; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1313 = HEAP32[$1312>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1314 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1315 = $1314; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1316 = $1315; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1317 = HEAP32[$1316>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1318 = (($1315) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1319 = $1318; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1320 = HEAP32[$1319>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1321 = $1310 ^ $1317; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1322 = $1313 ^ $1320; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1323 = (_bitshift64Shl(($1321|0),($1322|0),53)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1324 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1325 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1326 = $1325; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1327 = $1326; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1328 = HEAP32[$1327>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1329 = (($1326) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1330 = $1329; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1331 = HEAP32[$1330>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1332 = ((($v)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1333 = $1332; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1334 = $1333; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1335 = HEAP32[$1334>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1336 = (($1333) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1337 = $1336; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1338 = HEAP32[$1337>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1339 = $1328 ^ $1335; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1340 = $1331 ^ $1338; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1341 = (_bitshift64Lshr(($1339|0),($1340|0),11)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1342 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1343 = $1323 | $1341; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1344 = $1324 | $1342; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1345 = ((($v)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1346 = $1345; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1347 = $1346; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1347>>2] = $1343; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1348 = (($1346) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1349 = $1348; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1349>>2] = $1344; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1350 = $i; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1351 = $1350; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1352 = HEAP32[$1351>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1353 = (($1350) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1354 = $1353; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1355 = HEAP32[$1354>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1356 = (1861 + ($1352<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1357 = ((($1356)) + 6|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1358 = HEAP8[$1357>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1359 = $1358&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1360 = (($m) + ($1359<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1361 = $1360; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1362 = $1361; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1363 = HEAP32[$1362>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1364 = (($1361) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1365 = $1364; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1366 = HEAP32[$1365>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1367 = $i; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1368 = $1367; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1369 = HEAP32[$1368>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1370 = (($1367) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1371 = $1370; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1372 = HEAP32[$1371>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1373 = (1861 + ($1369<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1374 = ((($1373)) + 7|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1375 = HEAP8[$1374>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1376 = $1375&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1377 = (8 + ($1376<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1378 = $1377; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1379 = $1378; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1380 = HEAP32[$1379>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1381 = (($1378) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1382 = $1381; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1383 = HEAP32[$1382>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1384 = $1363 ^ $1380; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1385 = $1366 ^ $1383; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1386 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1387 = $1386; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1388 = $1387; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1389 = HEAP32[$1388>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1390 = (($1387) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1391 = $1390; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1392 = HEAP32[$1391>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1393 = (_i64Add(($1384|0),($1385|0),($1389|0),($1392|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1394 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1395 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1396 = $1395; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1397 = $1396; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1398 = HEAP32[$1397>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1399 = (($1396) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1400 = $1399; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1401 = HEAP32[$1400>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1402 = (_i64Add(($1398|0),($1401|0),($1393|0),($1394|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1403 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1404 = $1395; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1405 = $1404; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1405>>2] = $1402; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1406 = (($1404) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1407 = $1406; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1407>>2] = $1403; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1408 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1409 = $1408; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1410 = $1409; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1411 = HEAP32[$1410>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1412 = (($1409) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1413 = $1412; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1414 = HEAP32[$1413>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1415 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1416 = $1415; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1417 = $1416; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1418 = HEAP32[$1417>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1419 = (($1416) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1420 = $1419; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1421 = HEAP32[$1420>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1422 = $1411 ^ $1418; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1414 ^ $1421; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1423 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1424 = $1423; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1425 = $1424; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1426 = HEAP32[$1425>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1427 = (($1424) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1428 = $1427; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1429 = HEAP32[$1428>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1430 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1431 = $1430; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1432 = $1431; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1433 = HEAP32[$1432>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1434 = (($1431) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1435 = $1434; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1436 = HEAP32[$1435>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1426 ^ $1433; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1437 = $1429 ^ $1436; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1438 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1439 = $1438; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1440 = $1439; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1440>>2] = $1437; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1441 = (($1439) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1442 = $1441; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1442>>2] = $1422; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1443 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1444 = $1443; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1445 = $1444; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1446 = HEAP32[$1445>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1447 = (($1444) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1448 = $1447; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1449 = HEAP32[$1448>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1450 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1451 = $1450; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1452 = $1451; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1453 = HEAP32[$1452>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1454 = (($1451) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1455 = $1454; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1456 = HEAP32[$1455>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1457 = (_i64Add(($1453|0),($1456|0),($1446|0),($1449|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1458 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1459 = $1450; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1460 = $1459; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1460>>2] = $1457; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1461 = (($1459) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1462 = $1461; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1462>>2] = $1458; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1463 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1464 = $1463; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1465 = $1464; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1466 = HEAP32[$1465>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1467 = (($1464) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1468 = $1467; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1469 = HEAP32[$1468>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1470 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1471 = $1470; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1472 = $1471; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1473 = HEAP32[$1472>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1474 = (($1471) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1475 = $1474; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1476 = HEAP32[$1475>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1477 = $1466 ^ $1473; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1478 = $1469 ^ $1476; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1479 = (_bitshift64Shl(($1477|0),($1478|0),39)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1480 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1481 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1482 = $1481; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1483 = $1482; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1484 = HEAP32[$1483>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1485 = (($1482) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1486 = $1485; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1487 = HEAP32[$1486>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1488 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1489 = $1488; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1490 = $1489; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1491 = HEAP32[$1490>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1492 = (($1489) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1493 = $1492; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1494 = HEAP32[$1493>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1495 = $1484 ^ $1491; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1496 = $1487 ^ $1494; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1497 = (_bitshift64Lshr(($1495|0),($1496|0),25)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1498 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1499 = $1479 | $1497; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1500 = $1480 | $1498; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1501 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1502 = $1501; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1503 = $1502; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1503>>2] = $1499; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1504 = (($1502) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1505 = $1504; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1505>>2] = $1500; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1506 = $i; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1507 = $1506; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1508 = HEAP32[$1507>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1509 = (($1506) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1510 = $1509; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1511 = HEAP32[$1510>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1512 = (1861 + ($1508<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1513 = ((($1512)) + 7|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1514 = HEAP8[$1513>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1515 = $1514&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1516 = (($m) + ($1515<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1517 = $1516; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1518 = $1517; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1519 = HEAP32[$1518>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1520 = (($1517) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1521 = $1520; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1522 = HEAP32[$1521>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1523 = $i; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1524 = $1523; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1525 = HEAP32[$1524>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1526 = (($1523) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1527 = $1526; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1528 = HEAP32[$1527>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1529 = (1861 + ($1525<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1530 = ((($1529)) + 6|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1531 = HEAP8[$1530>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1532 = $1531&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1533 = (8 + ($1532<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1534 = $1533; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1535 = $1534; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1536 = HEAP32[$1535>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1537 = (($1534) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1538 = $1537; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1539 = HEAP32[$1538>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1540 = $1519 ^ $1536; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1541 = $1522 ^ $1539; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1542 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1543 = $1542; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1544 = $1543; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1545 = HEAP32[$1544>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1546 = (($1543) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1547 = $1546; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1548 = HEAP32[$1547>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1549 = (_i64Add(($1540|0),($1541|0),($1545|0),($1548|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1550 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1551 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1552 = $1551; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1553 = $1552; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1554 = HEAP32[$1553>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1555 = (($1552) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1556 = $1555; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1557 = HEAP32[$1556>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1558 = (_i64Add(($1554|0),($1557|0),($1549|0),($1550|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1559 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1560 = $1551; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1561 = $1560; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1561>>2] = $1558; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1562 = (($1560) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1563 = $1562; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1563>>2] = $1559; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1564 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1565 = $1564; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1566 = $1565; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1567 = HEAP32[$1566>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1568 = (($1565) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1569 = $1568; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1570 = HEAP32[$1569>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1571 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1572 = $1571; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1573 = $1572; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1574 = HEAP32[$1573>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1575 = (($1572) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1576 = $1575; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1577 = HEAP32[$1576>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1578 = $1567 ^ $1574; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1579 = $1570 ^ $1577; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1580 = (_bitshift64Shl(($1578|0),($1579|0),48)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1581 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1582 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1583 = $1582; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1584 = $1583; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1585 = HEAP32[$1584>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1586 = (($1583) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1587 = $1586; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1588 = HEAP32[$1587>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1589 = ((($v)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1590 = $1589; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1591 = $1590; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1592 = HEAP32[$1591>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1593 = (($1590) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1594 = $1593; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1595 = HEAP32[$1594>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1596 = $1585 ^ $1592; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1597 = $1588 ^ $1595; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1598 = (_bitshift64Lshr(($1596|0),($1597|0),16)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1599 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1600 = $1580 | $1598; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1601 = $1581 | $1599; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1602 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1603 = $1602; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1604 = $1603; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1604>>2] = $1600; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1605 = (($1603) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1606 = $1605; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1606>>2] = $1601; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1607 = ((($v)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1608 = $1607; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1609 = $1608; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1610 = HEAP32[$1609>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1611 = (($1608) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1612 = $1611; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1613 = HEAP32[$1612>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1614 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1615 = $1614; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1616 = $1615; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1617 = HEAP32[$1616>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1618 = (($1615) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1619 = $1618; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1620 = HEAP32[$1619>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1621 = (_i64Add(($1617|0),($1620|0),($1610|0),($1613|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1622 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1623 = $1614; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1624 = $1623; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1624>>2] = $1621; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1625 = (($1623) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1626 = $1625; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1626>>2] = $1622; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1627 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1628 = $1627; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1629 = $1628; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1630 = HEAP32[$1629>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1631 = (($1628) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1632 = $1631; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1633 = HEAP32[$1632>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1634 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1635 = $1634; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1636 = $1635; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1637 = HEAP32[$1636>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1638 = (($1635) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1639 = $1638; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1640 = HEAP32[$1639>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1641 = $1630 ^ $1637; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1642 = $1633 ^ $1640; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1643 = (_bitshift64Shl(($1641|0),($1642|0),53)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1644 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1645 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1646 = $1645; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1647 = $1646; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1648 = HEAP32[$1647>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1649 = (($1646) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1650 = $1649; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1651 = HEAP32[$1650>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1652 = ((($v)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1653 = $1652; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1654 = $1653; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1655 = HEAP32[$1654>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1656 = (($1653) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1657 = $1656; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1658 = HEAP32[$1657>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1659 = $1648 ^ $1655; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1660 = $1651 ^ $1658; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1661 = (_bitshift64Lshr(($1659|0),($1660|0),11)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1662 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1663 = $1643 | $1661; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1664 = $1644 | $1662; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1665 = ((($v)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1666 = $1665; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1667 = $1666; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1667>>2] = $1663; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1668 = (($1666) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1669 = $1668; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1669>>2] = $1664; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1670 = $i; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1671 = $1670; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1672 = HEAP32[$1671>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1673 = (($1670) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1674 = $1673; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1675 = HEAP32[$1674>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1676 = (1861 + ($1672<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1677 = ((($1676)) + 14|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1678 = HEAP8[$1677>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1679 = $1678&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1680 = (($m) + ($1679<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1681 = $1680; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1682 = $1681; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1683 = HEAP32[$1682>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1684 = (($1681) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1685 = $1684; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1686 = HEAP32[$1685>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1687 = $i; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1688 = $1687; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1689 = HEAP32[$1688>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1690 = (($1687) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1691 = $1690; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1692 = HEAP32[$1691>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1693 = (1861 + ($1689<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1694 = ((($1693)) + 15|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1695 = HEAP8[$1694>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1696 = $1695&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1697 = (8 + ($1696<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1698 = $1697; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1699 = $1698; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1700 = HEAP32[$1699>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1701 = (($1698) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1702 = $1701; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1703 = HEAP32[$1702>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1704 = $1683 ^ $1700; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1705 = $1686 ^ $1703; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1706 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1707 = $1706; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1708 = $1707; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1709 = HEAP32[$1708>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1710 = (($1707) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1711 = $1710; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1712 = HEAP32[$1711>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1713 = (_i64Add(($1704|0),($1705|0),($1709|0),($1712|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1714 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1715 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1716 = $1715; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1717 = $1716; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1718 = HEAP32[$1717>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1719 = (($1716) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1720 = $1719; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1721 = HEAP32[$1720>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1722 = (_i64Add(($1718|0),($1721|0),($1713|0),($1714|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1723 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1724 = $1715; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1725 = $1724; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1725>>2] = $1722; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1726 = (($1724) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1727 = $1726; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1727>>2] = $1723; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1728 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1729 = $1728; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1730 = $1729; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1731 = HEAP32[$1730>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1732 = (($1729) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1733 = $1732; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1734 = HEAP32[$1733>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1735 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1736 = $1735; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1737 = $1736; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1738 = HEAP32[$1737>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1739 = (($1736) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1740 = $1739; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1741 = HEAP32[$1740>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1742 = $1731 ^ $1738; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1734 ^ $1741; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1743 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1744 = $1743; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1745 = $1744; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1746 = HEAP32[$1745>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1747 = (($1744) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1748 = $1747; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1749 = HEAP32[$1748>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1750 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1751 = $1750; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1752 = $1751; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1753 = HEAP32[$1752>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1754 = (($1751) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1755 = $1754; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1756 = HEAP32[$1755>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1746 ^ $1753; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1757 = $1749 ^ $1756; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1758 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1759 = $1758; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1760 = $1759; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1760>>2] = $1757; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1761 = (($1759) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1762 = $1761; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1762>>2] = $1742; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1763 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1764 = $1763; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1765 = $1764; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1766 = HEAP32[$1765>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1767 = (($1764) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1768 = $1767; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1769 = HEAP32[$1768>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1770 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1771 = $1770; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1772 = $1771; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1773 = HEAP32[$1772>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1774 = (($1771) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1775 = $1774; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1776 = HEAP32[$1775>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1777 = (_i64Add(($1773|0),($1776|0),($1766|0),($1769|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1778 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1779 = $1770; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1780 = $1779; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1780>>2] = $1777; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1781 = (($1779) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1782 = $1781; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1782>>2] = $1778; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1783 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1784 = $1783; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1785 = $1784; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1786 = HEAP32[$1785>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1787 = (($1784) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1788 = $1787; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1789 = HEAP32[$1788>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1790 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1791 = $1790; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1792 = $1791; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1793 = HEAP32[$1792>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1794 = (($1791) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1795 = $1794; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1796 = HEAP32[$1795>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1797 = $1786 ^ $1793; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1798 = $1789 ^ $1796; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1799 = (_bitshift64Shl(($1797|0),($1798|0),39)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1800 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1801 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1802 = $1801; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1803 = $1802; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1804 = HEAP32[$1803>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1805 = (($1802) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1806 = $1805; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1807 = HEAP32[$1806>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1808 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1809 = $1808; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1810 = $1809; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1811 = HEAP32[$1810>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1812 = (($1809) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1813 = $1812; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1814 = HEAP32[$1813>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1815 = $1804 ^ $1811; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1816 = $1807 ^ $1814; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1817 = (_bitshift64Lshr(($1815|0),($1816|0),25)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1818 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1819 = $1799 | $1817; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1820 = $1800 | $1818; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1821 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1822 = $1821; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1823 = $1822; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1823>>2] = $1819; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1824 = (($1822) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1825 = $1824; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1825>>2] = $1820; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1826 = $i; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1827 = $1826; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1828 = HEAP32[$1827>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1829 = (($1826) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1830 = $1829; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1831 = HEAP32[$1830>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1832 = (1861 + ($1828<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1833 = ((($1832)) + 15|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1834 = HEAP8[$1833>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1835 = $1834&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1836 = (($m) + ($1835<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1837 = $1836; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1838 = $1837; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1839 = HEAP32[$1838>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1840 = (($1837) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1841 = $1840; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1842 = HEAP32[$1841>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1843 = $i; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1844 = $1843; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1845 = HEAP32[$1844>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1846 = (($1843) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1847 = $1846; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1848 = HEAP32[$1847>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1849 = (1861 + ($1845<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1850 = ((($1849)) + 14|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1851 = HEAP8[$1850>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1852 = $1851&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1853 = (8 + ($1852<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1854 = $1853; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1855 = $1854; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1856 = HEAP32[$1855>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1857 = (($1854) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1858 = $1857; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1859 = HEAP32[$1858>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1860 = $1839 ^ $1856; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1861 = $1842 ^ $1859; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1862 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1863 = $1862; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1864 = $1863; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1865 = HEAP32[$1864>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1866 = (($1863) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1867 = $1866; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1868 = HEAP32[$1867>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1869 = (_i64Add(($1860|0),($1861|0),($1865|0),($1868|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1870 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1871 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1872 = $1871; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1873 = $1872; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1874 = HEAP32[$1873>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1875 = (($1872) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1876 = $1875; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1877 = HEAP32[$1876>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1878 = (_i64Add(($1874|0),($1877|0),($1869|0),($1870|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1879 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1880 = $1871; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1881 = $1880; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1881>>2] = $1878; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1882 = (($1880) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1883 = $1882; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1883>>2] = $1879; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1884 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1885 = $1884; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1886 = $1885; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1887 = HEAP32[$1886>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1888 = (($1885) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1889 = $1888; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1890 = HEAP32[$1889>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1891 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1892 = $1891; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1893 = $1892; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1894 = HEAP32[$1893>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1895 = (($1892) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1896 = $1895; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1897 = HEAP32[$1896>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1898 = $1887 ^ $1894; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1899 = $1890 ^ $1897; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1900 = (_bitshift64Shl(($1898|0),($1899|0),48)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1901 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1902 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1903 = $1902; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1904 = $1903; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1905 = HEAP32[$1904>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1906 = (($1903) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1907 = $1906; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1908 = HEAP32[$1907>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1909 = ((($v)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1910 = $1909; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1911 = $1910; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1912 = HEAP32[$1911>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1913 = (($1910) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1914 = $1913; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1915 = HEAP32[$1914>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1916 = $1905 ^ $1912; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1917 = $1908 ^ $1915; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1918 = (_bitshift64Lshr(($1916|0),($1917|0),16)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1919 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1920 = $1900 | $1918; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1921 = $1901 | $1919; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1922 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1923 = $1922; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1924 = $1923; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1924>>2] = $1920; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1925 = (($1923) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1926 = $1925; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1926>>2] = $1921; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1927 = ((($v)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1928 = $1927; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1929 = $1928; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1930 = HEAP32[$1929>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1931 = (($1928) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1932 = $1931; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1933 = HEAP32[$1932>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1934 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1935 = $1934; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1936 = $1935; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1937 = HEAP32[$1936>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1938 = (($1935) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1939 = $1938; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1940 = HEAP32[$1939>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1941 = (_i64Add(($1937|0),($1940|0),($1930|0),($1933|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1942 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1943 = $1934; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1944 = $1943; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1944>>2] = $1941; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1945 = (($1943) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1946 = $1945; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1946>>2] = $1942; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1947 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1948 = $1947; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1949 = $1948; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1950 = HEAP32[$1949>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1951 = (($1948) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1952 = $1951; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1953 = HEAP32[$1952>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1954 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1955 = $1954; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1956 = $1955; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1957 = HEAP32[$1956>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1958 = (($1955) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1959 = $1958; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1960 = HEAP32[$1959>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1961 = $1950 ^ $1957; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1962 = $1953 ^ $1960; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1963 = (_bitshift64Shl(($1961|0),($1962|0),53)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1964 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1965 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1966 = $1965; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1967 = $1966; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1968 = HEAP32[$1967>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1969 = (($1966) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1970 = $1969; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1971 = HEAP32[$1970>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1972 = ((($v)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1973 = $1972; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1974 = $1973; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1975 = HEAP32[$1974>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1976 = (($1973) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1977 = $1976; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1978 = HEAP32[$1977>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1979 = $1968 ^ $1975; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1980 = $1971 ^ $1978; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1981 = (_bitshift64Lshr(($1979|0),($1980|0),11)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1982 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1983 = $1963 | $1981; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1984 = $1964 | $1982; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1985 = ((($v)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1986 = $1985; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1987 = $1986; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1987>>2] = $1983; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1988 = (($1986) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1989 = $1988; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1989>>2] = $1984; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1990 = $i; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1991 = $1990; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1992 = HEAP32[$1991>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1993 = (($1990) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1994 = $1993; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1995 = HEAP32[$1994>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1996 = (1861 + ($1992<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1997 = ((($1996)) + 12|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1998 = HEAP8[$1997>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1999 = $1998&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2000 = (($m) + ($1999<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2001 = $2000; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2002 = $2001; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2003 = HEAP32[$2002>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2004 = (($2001) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2005 = $2004; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2006 = HEAP32[$2005>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2007 = $i; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2008 = $2007; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2009 = HEAP32[$2008>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2010 = (($2007) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2011 = $2010; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2012 = HEAP32[$2011>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2013 = (1861 + ($2009<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2014 = ((($2013)) + 13|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2015 = HEAP8[$2014>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2016 = $2015&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2017 = (8 + ($2016<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2018 = $2017; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2019 = $2018; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2020 = HEAP32[$2019>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2021 = (($2018) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2022 = $2021; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2023 = HEAP32[$2022>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2024 = $2003 ^ $2020; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2025 = $2006 ^ $2023; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2026 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2027 = $2026; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2028 = $2027; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2029 = HEAP32[$2028>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2030 = (($2027) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2031 = $2030; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2032 = HEAP32[$2031>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2033 = (_i64Add(($2024|0),($2025|0),($2029|0),($2032|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2034 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2035 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2036 = $2035; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2037 = $2036; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2038 = HEAP32[$2037>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2039 = (($2036) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2040 = $2039; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2041 = HEAP32[$2040>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2042 = (_i64Add(($2038|0),($2041|0),($2033|0),($2034|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2043 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2044 = $2035; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2045 = $2044; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2045>>2] = $2042; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2046 = (($2044) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2047 = $2046; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2047>>2] = $2043; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2048 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2049 = $2048; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2050 = $2049; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2051 = HEAP32[$2050>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2052 = (($2049) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2053 = $2052; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2054 = HEAP32[$2053>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2055 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2056 = $2055; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2057 = $2056; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2058 = HEAP32[$2057>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2059 = (($2056) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2060 = $2059; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2061 = HEAP32[$2060>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2062 = $2051 ^ $2058; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2054 ^ $2061; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2063 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2064 = $2063; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2065 = $2064; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2066 = HEAP32[$2065>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2067 = (($2064) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2068 = $2067; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2069 = HEAP32[$2068>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2070 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2071 = $2070; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2072 = $2071; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2073 = HEAP32[$2072>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2074 = (($2071) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2075 = $2074; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2076 = HEAP32[$2075>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2066 ^ $2073; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2077 = $2069 ^ $2076; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2078 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2079 = $2078; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2080 = $2079; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2080>>2] = $2077; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2081 = (($2079) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2082 = $2081; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2082>>2] = $2062; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2083 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2084 = $2083; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2085 = $2084; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2086 = HEAP32[$2085>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2087 = (($2084) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2088 = $2087; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2089 = HEAP32[$2088>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2090 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2091 = $2090; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2092 = $2091; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2093 = HEAP32[$2092>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2094 = (($2091) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2095 = $2094; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2096 = HEAP32[$2095>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2097 = (_i64Add(($2093|0),($2096|0),($2086|0),($2089|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2098 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2099 = $2090; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2100 = $2099; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2100>>2] = $2097; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2101 = (($2099) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2102 = $2101; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2102>>2] = $2098; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2103 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2104 = $2103; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2105 = $2104; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2106 = HEAP32[$2105>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2107 = (($2104) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2108 = $2107; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2109 = HEAP32[$2108>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2110 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2111 = $2110; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2112 = $2111; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2113 = HEAP32[$2112>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2114 = (($2111) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2115 = $2114; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2116 = HEAP32[$2115>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2117 = $2106 ^ $2113; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2118 = $2109 ^ $2116; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2119 = (_bitshift64Shl(($2117|0),($2118|0),39)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2120 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2121 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2122 = $2121; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2123 = $2122; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2124 = HEAP32[$2123>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2125 = (($2122) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2126 = $2125; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2127 = HEAP32[$2126>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2128 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2129 = $2128; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2130 = $2129; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2131 = HEAP32[$2130>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2132 = (($2129) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2133 = $2132; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2134 = HEAP32[$2133>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2135 = $2124 ^ $2131; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2136 = $2127 ^ $2134; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2137 = (_bitshift64Lshr(($2135|0),($2136|0),25)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2138 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2139 = $2119 | $2137; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2140 = $2120 | $2138; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2141 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2142 = $2141; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2143 = $2142; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2143>>2] = $2139; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2144 = (($2142) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2145 = $2144; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2145>>2] = $2140; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2146 = $i; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2147 = $2146; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2148 = HEAP32[$2147>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2149 = (($2146) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2150 = $2149; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2151 = HEAP32[$2150>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2152 = (1861 + ($2148<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2153 = ((($2152)) + 13|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2154 = HEAP8[$2153>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2155 = $2154&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2156 = (($m) + ($2155<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2157 = $2156; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2158 = $2157; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2159 = HEAP32[$2158>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2160 = (($2157) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2161 = $2160; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2162 = HEAP32[$2161>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2163 = $i; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2164 = $2163; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2165 = HEAP32[$2164>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2166 = (($2163) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2167 = $2166; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2168 = HEAP32[$2167>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2169 = (1861 + ($2165<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2170 = ((($2169)) + 12|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2171 = HEAP8[$2170>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2172 = $2171&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2173 = (8 + ($2172<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2174 = $2173; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2175 = $2174; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2176 = HEAP32[$2175>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2177 = (($2174) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2178 = $2177; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2179 = HEAP32[$2178>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2180 = $2159 ^ $2176; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2181 = $2162 ^ $2179; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2182 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2183 = $2182; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2184 = $2183; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2185 = HEAP32[$2184>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2186 = (($2183) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2187 = $2186; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2188 = HEAP32[$2187>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2189 = (_i64Add(($2180|0),($2181|0),($2185|0),($2188|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2190 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2191 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2192 = $2191; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2193 = $2192; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2194 = HEAP32[$2193>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2195 = (($2192) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2196 = $2195; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2197 = HEAP32[$2196>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2198 = (_i64Add(($2194|0),($2197|0),($2189|0),($2190|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2199 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2200 = $2191; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2201 = $2200; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2201>>2] = $2198; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2202 = (($2200) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2203 = $2202; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2203>>2] = $2199; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2204 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2205 = $2204; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2206 = $2205; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2207 = HEAP32[$2206>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2208 = (($2205) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2209 = $2208; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2210 = HEAP32[$2209>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2211 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2212 = $2211; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2213 = $2212; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2214 = HEAP32[$2213>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2215 = (($2212) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2216 = $2215; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2217 = HEAP32[$2216>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2218 = $2207 ^ $2214; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2219 = $2210 ^ $2217; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2220 = (_bitshift64Shl(($2218|0),($2219|0),48)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2221 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2222 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2223 = $2222; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2224 = $2223; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2225 = HEAP32[$2224>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2226 = (($2223) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2227 = $2226; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2228 = HEAP32[$2227>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2229 = ((($v)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2230 = $2229; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2231 = $2230; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2232 = HEAP32[$2231>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2233 = (($2230) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2234 = $2233; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2235 = HEAP32[$2234>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2236 = $2225 ^ $2232; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2237 = $2228 ^ $2235; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2238 = (_bitshift64Lshr(($2236|0),($2237|0),16)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2239 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2240 = $2220 | $2238; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2241 = $2221 | $2239; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2242 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2243 = $2242; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2244 = $2243; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2244>>2] = $2240; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2245 = (($2243) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2246 = $2245; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2246>>2] = $2241; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2247 = ((($v)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2248 = $2247; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2249 = $2248; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2250 = HEAP32[$2249>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2251 = (($2248) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2252 = $2251; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2253 = HEAP32[$2252>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2254 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2255 = $2254; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2256 = $2255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2257 = HEAP32[$2256>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2258 = (($2255) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2259 = $2258; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2260 = HEAP32[$2259>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2261 = (_i64Add(($2257|0),($2260|0),($2250|0),($2253|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2262 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2263 = $2254; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2264 = $2263; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2264>>2] = $2261; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2265 = (($2263) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2266 = $2265; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2266>>2] = $2262; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2267 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2268 = $2267; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2269 = $2268; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2270 = HEAP32[$2269>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2271 = (($2268) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2272 = $2271; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2273 = HEAP32[$2272>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2274 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2275 = $2274; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2276 = $2275; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2277 = HEAP32[$2276>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2278 = (($2275) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2279 = $2278; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2280 = HEAP32[$2279>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2281 = $2270 ^ $2277; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2282 = $2273 ^ $2280; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2283 = (_bitshift64Shl(($2281|0),($2282|0),53)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2284 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2285 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2286 = $2285; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2287 = $2286; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2288 = HEAP32[$2287>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2289 = (($2286) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2290 = $2289; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2291 = HEAP32[$2290>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2292 = ((($v)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2293 = $2292; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2294 = $2293; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2295 = HEAP32[$2294>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2296 = (($2293) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2297 = $2296; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2298 = HEAP32[$2297>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2299 = $2288 ^ $2295; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2300 = $2291 ^ $2298; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2301 = (_bitshift64Lshr(($2299|0),($2300|0),11)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2302 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2303 = $2283 | $2301; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2304 = $2284 | $2302; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2305 = ((($v)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2306 = $2305; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2307 = $2306; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2307>>2] = $2303; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2308 = (($2306) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2309 = $2308; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2309>>2] = $2304; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2310 = $i; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2311 = $2310; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2312 = HEAP32[$2311>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2313 = (($2310) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2314 = $2313; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2315 = HEAP32[$2314>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2316 = (1861 + ($2312<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2317 = ((($2316)) + 8|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2318 = HEAP8[$2317>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2319 = $2318&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2320 = (($m) + ($2319<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2321 = $2320; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2322 = $2321; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2323 = HEAP32[$2322>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2324 = (($2321) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2325 = $2324; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2326 = HEAP32[$2325>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2327 = $i; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2328 = $2327; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2329 = HEAP32[$2328>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2330 = (($2327) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2331 = $2330; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2332 = HEAP32[$2331>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2333 = (1861 + ($2329<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2334 = ((($2333)) + 9|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2335 = HEAP8[$2334>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2336 = $2335&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2337 = (8 + ($2336<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2338 = $2337; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2339 = $2338; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2340 = HEAP32[$2339>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2341 = (($2338) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2342 = $2341; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2343 = HEAP32[$2342>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2344 = $2323 ^ $2340; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2345 = $2326 ^ $2343; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2346 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2347 = $2346; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2348 = $2347; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2349 = HEAP32[$2348>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2350 = (($2347) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2351 = $2350; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2352 = HEAP32[$2351>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2353 = (_i64Add(($2344|0),($2345|0),($2349|0),($2352|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2354 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2355 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2356 = $2355; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2357 = HEAP32[$2356>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2358 = (($2355) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2359 = $2358; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2360 = HEAP32[$2359>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2361 = (_i64Add(($2357|0),($2360|0),($2353|0),($2354|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2362 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2363 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2364 = $2363; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2364>>2] = $2361; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2365 = (($2363) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2366 = $2365; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2366>>2] = $2362; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2367 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2368 = $2367; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2369 = $2368; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2370 = HEAP32[$2369>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2371 = (($2368) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2372 = $2371; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2373 = HEAP32[$2372>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2374 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2375 = $2374; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2376 = HEAP32[$2375>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2377 = (($2374) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2378 = $2377; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2379 = HEAP32[$2378>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2380 = $2370 ^ $2376; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2373 ^ $2379; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2381 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2382 = $2381; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2383 = $2382; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2384 = HEAP32[$2383>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2385 = (($2382) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2386 = $2385; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2387 = HEAP32[$2386>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2388 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2389 = $2388; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2390 = HEAP32[$2389>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2391 = (($2388) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2392 = $2391; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2393 = HEAP32[$2392>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2384 ^ $2390; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2394 = $2387 ^ $2393; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2395 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2396 = $2395; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2397 = $2396; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2397>>2] = $2394; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2398 = (($2396) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2399 = $2398; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2399>>2] = $2380; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2400 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2401 = $2400; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2402 = $2401; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2403 = HEAP32[$2402>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2404 = (($2401) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2405 = $2404; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2406 = HEAP32[$2405>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2407 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2408 = $2407; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2409 = $2408; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2410 = HEAP32[$2409>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2411 = (($2408) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2412 = $2411; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2413 = HEAP32[$2412>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2414 = (_i64Add(($2410|0),($2413|0),($2403|0),($2406|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2415 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2416 = $2407; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2417 = $2416; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2417>>2] = $2414; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2418 = (($2416) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2419 = $2418; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2419>>2] = $2415; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2420 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2421 = $2420; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2422 = $2421; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2423 = HEAP32[$2422>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2424 = (($2421) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2425 = $2424; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2426 = HEAP32[$2425>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2427 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2428 = $2427; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2429 = $2428; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2430 = HEAP32[$2429>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2431 = (($2428) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2432 = $2431; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2433 = HEAP32[$2432>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2434 = $2423 ^ $2430; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2435 = $2426 ^ $2433; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2436 = (_bitshift64Shl(($2434|0),($2435|0),39)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2437 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2438 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2439 = $2438; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2440 = $2439; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2441 = HEAP32[$2440>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2442 = (($2439) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2443 = $2442; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2444 = HEAP32[$2443>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2445 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2446 = $2445; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2447 = $2446; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2448 = HEAP32[$2447>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2449 = (($2446) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2450 = $2449; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2451 = HEAP32[$2450>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2452 = $2441 ^ $2448; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2453 = $2444 ^ $2451; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2454 = (_bitshift64Lshr(($2452|0),($2453|0),25)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2455 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2456 = $2436 | $2454; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2457 = $2437 | $2455; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2458 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2459 = $2458; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2460 = $2459; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2460>>2] = $2456; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2461 = (($2459) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2462 = $2461; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2462>>2] = $2457; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2463 = $i; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2464 = $2463; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2465 = HEAP32[$2464>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2466 = (($2463) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2467 = $2466; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2468 = HEAP32[$2467>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2469 = (1861 + ($2465<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2470 = ((($2469)) + 9|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2471 = HEAP8[$2470>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2472 = $2471&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2473 = (($m) + ($2472<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2474 = $2473; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2475 = $2474; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2476 = HEAP32[$2475>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2477 = (($2474) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2478 = $2477; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2479 = HEAP32[$2478>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2480 = $i; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2481 = $2480; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2482 = HEAP32[$2481>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2483 = (($2480) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2484 = $2483; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2485 = HEAP32[$2484>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2486 = (1861 + ($2482<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2487 = ((($2486)) + 8|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2488 = HEAP8[$2487>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2489 = $2488&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2490 = (8 + ($2489<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2491 = $2490; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2492 = $2491; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2493 = HEAP32[$2492>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2494 = (($2491) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2495 = $2494; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2496 = HEAP32[$2495>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2497 = $2476 ^ $2493; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2498 = $2479 ^ $2496; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2499 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2500 = $2499; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2501 = $2500; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2502 = HEAP32[$2501>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2503 = (($2500) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2504 = $2503; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2505 = HEAP32[$2504>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2506 = (_i64Add(($2497|0),($2498|0),($2502|0),($2505|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2507 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2508 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2509 = $2508; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2510 = HEAP32[$2509>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2511 = (($2508) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2512 = $2511; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2513 = HEAP32[$2512>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2514 = (_i64Add(($2510|0),($2513|0),($2506|0),($2507|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2515 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2516 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2517 = $2516; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2517>>2] = $2514; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2518 = (($2516) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2519 = $2518; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2519>>2] = $2515; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2520 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2521 = $2520; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2522 = $2521; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2523 = HEAP32[$2522>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2524 = (($2521) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2525 = $2524; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2526 = HEAP32[$2525>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2527 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2528 = $2527; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2529 = HEAP32[$2528>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2530 = (($2527) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2531 = $2530; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2532 = HEAP32[$2531>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2533 = $2523 ^ $2529; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2534 = $2526 ^ $2532; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2535 = (_bitshift64Shl(($2533|0),($2534|0),48)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2536 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2537 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2538 = $2537; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2539 = $2538; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2540 = HEAP32[$2539>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2541 = (($2538) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2542 = $2541; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2543 = HEAP32[$2542>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2544 = $v; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2545 = $2544; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2546 = HEAP32[$2545>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2547 = (($2544) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2548 = $2547; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2549 = HEAP32[$2548>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2550 = $2540 ^ $2546; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2551 = $2543 ^ $2549; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2552 = (_bitshift64Lshr(($2550|0),($2551|0),16)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2553 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2554 = $2535 | $2552; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2555 = $2536 | $2553; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2556 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2557 = $2556; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2558 = $2557; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2558>>2] = $2554; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2559 = (($2557) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2560 = $2559; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2560>>2] = $2555; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2561 = ((($v)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2562 = $2561; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2563 = $2562; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2564 = HEAP32[$2563>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2565 = (($2562) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2566 = $2565; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2567 = HEAP32[$2566>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2568 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2569 = $2568; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2570 = $2569; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2571 = HEAP32[$2570>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2572 = (($2569) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2573 = $2572; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2574 = HEAP32[$2573>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2575 = (_i64Add(($2571|0),($2574|0),($2564|0),($2567|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2576 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2577 = $2568; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2578 = $2577; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2578>>2] = $2575; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2579 = (($2577) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2580 = $2579; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2580>>2] = $2576; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2581 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2582 = $2581; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2583 = $2582; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2584 = HEAP32[$2583>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2585 = (($2582) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2586 = $2585; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2587 = HEAP32[$2586>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2588 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2589 = $2588; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2590 = $2589; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2591 = HEAP32[$2590>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2592 = (($2589) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2593 = $2592; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2594 = HEAP32[$2593>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2595 = $2584 ^ $2591; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2596 = $2587 ^ $2594; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2597 = (_bitshift64Shl(($2595|0),($2596|0),53)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2598 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2599 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2600 = $2599; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2601 = $2600; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2602 = HEAP32[$2601>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2603 = (($2600) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2604 = $2603; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2605 = HEAP32[$2604>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2606 = ((($v)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2607 = $2606; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2608 = $2607; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2609 = HEAP32[$2608>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2610 = (($2607) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2611 = $2610; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2612 = HEAP32[$2611>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2613 = $2602 ^ $2609; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2614 = $2605 ^ $2612; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2615 = (_bitshift64Lshr(($2613|0),($2614|0),11)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2616 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2617 = $2597 | $2615; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2618 = $2598 | $2616; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2619 = ((($v)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2620 = $2619; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2621 = $2620; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2621>>2] = $2617; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2622 = (($2620) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2623 = $2622; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2623>>2] = $2618; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2624 = $i; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2625 = $2624; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2626 = HEAP32[$2625>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2627 = (($2624) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2628 = $2627; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2629 = HEAP32[$2628>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2630 = (1861 + ($2626<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2631 = ((($2630)) + 10|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2632 = HEAP8[$2631>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2633 = $2632&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2634 = (($m) + ($2633<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2635 = $2634; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2636 = $2635; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2637 = HEAP32[$2636>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2638 = (($2635) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2639 = $2638; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2640 = HEAP32[$2639>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2641 = $i; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2642 = $2641; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2643 = HEAP32[$2642>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2644 = (($2641) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2645 = $2644; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2646 = HEAP32[$2645>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2647 = (1861 + ($2643<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2648 = ((($2647)) + 11|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2649 = HEAP8[$2648>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2650 = $2649&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2651 = (8 + ($2650<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2652 = $2651; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2653 = $2652; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2654 = HEAP32[$2653>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2655 = (($2652) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2656 = $2655; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2657 = HEAP32[$2656>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2658 = $2637 ^ $2654; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2659 = $2640 ^ $2657; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2660 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2661 = $2660; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2662 = $2661; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2663 = HEAP32[$2662>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2664 = (($2661) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2665 = $2664; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2666 = HEAP32[$2665>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2667 = (_i64Add(($2658|0),($2659|0),($2663|0),($2666|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2668 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2669 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2670 = $2669; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2671 = $2670; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2672 = HEAP32[$2671>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2673 = (($2670) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2674 = $2673; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2675 = HEAP32[$2674>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2676 = (_i64Add(($2672|0),($2675|0),($2667|0),($2668|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2677 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2678 = $2669; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2679 = $2678; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2679>>2] = $2676; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2680 = (($2678) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2681 = $2680; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2681>>2] = $2677; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2682 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2683 = $2682; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2684 = $2683; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2685 = HEAP32[$2684>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2686 = (($2683) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2687 = $2686; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2688 = HEAP32[$2687>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2689 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2690 = $2689; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2691 = $2690; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2692 = HEAP32[$2691>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2693 = (($2690) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2694 = $2693; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2695 = HEAP32[$2694>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2696 = $2685 ^ $2692; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2688 ^ $2695; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2697 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2698 = $2697; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2699 = $2698; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2700 = HEAP32[$2699>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2701 = (($2698) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2702 = $2701; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2703 = HEAP32[$2702>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2704 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2705 = $2704; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2706 = $2705; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2707 = HEAP32[$2706>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2708 = (($2705) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2709 = $2708; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2710 = HEAP32[$2709>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2700 ^ $2707; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2711 = $2703 ^ $2710; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2712 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2713 = $2712; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2714 = $2713; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2714>>2] = $2711; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2715 = (($2713) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2716 = $2715; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2716>>2] = $2696; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2717 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2718 = $2717; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2719 = $2718; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2720 = HEAP32[$2719>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2721 = (($2718) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2722 = $2721; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2723 = HEAP32[$2722>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2724 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2725 = $2724; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2726 = $2725; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2727 = HEAP32[$2726>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2728 = (($2725) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2729 = $2728; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2730 = HEAP32[$2729>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2731 = (_i64Add(($2727|0),($2730|0),($2720|0),($2723|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2732 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2733 = $2724; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2734 = $2733; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2734>>2] = $2731; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2735 = (($2733) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2736 = $2735; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2736>>2] = $2732; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2737 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2738 = $2737; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2739 = $2738; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2740 = HEAP32[$2739>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2741 = (($2738) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2742 = $2741; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2743 = HEAP32[$2742>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2744 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2745 = $2744; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2746 = $2745; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2747 = HEAP32[$2746>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2748 = (($2745) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2749 = $2748; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2750 = HEAP32[$2749>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2751 = $2740 ^ $2747; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2752 = $2743 ^ $2750; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2753 = (_bitshift64Shl(($2751|0),($2752|0),39)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2754 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2755 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2756 = $2755; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2757 = $2756; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2758 = HEAP32[$2757>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2759 = (($2756) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2760 = $2759; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2761 = HEAP32[$2760>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2762 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2763 = $2762; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2764 = $2763; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2765 = HEAP32[$2764>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2766 = (($2763) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2767 = $2766; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2768 = HEAP32[$2767>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2769 = $2758 ^ $2765; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2770 = $2761 ^ $2768; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2771 = (_bitshift64Lshr(($2769|0),($2770|0),25)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2772 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2773 = $2753 | $2771; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2774 = $2754 | $2772; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2775 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2776 = $2775; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2777 = $2776; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2777>>2] = $2773; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2778 = (($2776) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2779 = $2778; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2779>>2] = $2774; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2780 = $i; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2781 = $2780; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2782 = HEAP32[$2781>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2783 = (($2780) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2784 = $2783; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2785 = HEAP32[$2784>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2786 = (1861 + ($2782<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2787 = ((($2786)) + 11|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2788 = HEAP8[$2787>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2789 = $2788&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2790 = (($m) + ($2789<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2791 = $2790; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2792 = $2791; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2793 = HEAP32[$2792>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2794 = (($2791) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2795 = $2794; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2796 = HEAP32[$2795>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2797 = $i; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2798 = $2797; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2799 = HEAP32[$2798>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2800 = (($2797) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2801 = $2800; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2802 = HEAP32[$2801>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2803 = (1861 + ($2799<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2804 = ((($2803)) + 10|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2805 = HEAP8[$2804>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2806 = $2805&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2807 = (8 + ($2806<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2808 = $2807; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2809 = $2808; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2810 = HEAP32[$2809>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2811 = (($2808) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2812 = $2811; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2813 = HEAP32[$2812>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2814 = $2793 ^ $2810; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2815 = $2796 ^ $2813; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2816 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2817 = $2816; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2818 = $2817; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2819 = HEAP32[$2818>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2820 = (($2817) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2821 = $2820; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2822 = HEAP32[$2821>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2823 = (_i64Add(($2814|0),($2815|0),($2819|0),($2822|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2824 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2825 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2826 = $2825; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2827 = $2826; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2828 = HEAP32[$2827>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2829 = (($2826) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2830 = $2829; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2831 = HEAP32[$2830>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2832 = (_i64Add(($2828|0),($2831|0),($2823|0),($2824|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2833 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2834 = $2825; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2835 = $2834; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2835>>2] = $2832; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2836 = (($2834) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2837 = $2836; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2837>>2] = $2833; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2838 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2839 = $2838; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2840 = $2839; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2841 = HEAP32[$2840>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2842 = (($2839) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2843 = $2842; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2844 = HEAP32[$2843>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2845 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2846 = $2845; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2847 = $2846; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2848 = HEAP32[$2847>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2849 = (($2846) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2850 = $2849; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2851 = HEAP32[$2850>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2852 = $2841 ^ $2848; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2853 = $2844 ^ $2851; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2854 = (_bitshift64Shl(($2852|0),($2853|0),48)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2855 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2856 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2857 = $2856; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2858 = $2857; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2859 = HEAP32[$2858>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2860 = (($2857) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2861 = $2860; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2862 = HEAP32[$2861>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2863 = ((($v)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2864 = $2863; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2865 = $2864; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2866 = HEAP32[$2865>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2867 = (($2864) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2868 = $2867; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2869 = HEAP32[$2868>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2870 = $2859 ^ $2866; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2871 = $2862 ^ $2869; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2872 = (_bitshift64Lshr(($2870|0),($2871|0),16)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2873 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2874 = $2854 | $2872; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2875 = $2855 | $2873; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2876 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2877 = $2876; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2878 = $2877; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2878>>2] = $2874; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2879 = (($2877) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2880 = $2879; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2880>>2] = $2875; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2881 = ((($v)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2882 = $2881; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2883 = $2882; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2884 = HEAP32[$2883>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2885 = (($2882) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2886 = $2885; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2887 = HEAP32[$2886>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2888 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2889 = $2888; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2890 = $2889; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2891 = HEAP32[$2890>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2892 = (($2889) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2893 = $2892; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2894 = HEAP32[$2893>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2895 = (_i64Add(($2891|0),($2894|0),($2884|0),($2887|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2896 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2897 = $2888; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2898 = $2897; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2898>>2] = $2895; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2899 = (($2897) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2900 = $2899; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2900>>2] = $2896; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2901 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2902 = $2901; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2903 = $2902; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2904 = HEAP32[$2903>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2905 = (($2902) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2906 = $2905; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2907 = HEAP32[$2906>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2908 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2909 = $2908; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2910 = $2909; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2911 = HEAP32[$2910>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2912 = (($2909) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2913 = $2912; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2914 = HEAP32[$2913>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2915 = $2904 ^ $2911; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2916 = $2907 ^ $2914; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2917 = (_bitshift64Shl(($2915|0),($2916|0),53)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2918 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2919 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2920 = $2919; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2921 = $2920; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2922 = HEAP32[$2921>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2923 = (($2920) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2924 = $2923; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2925 = HEAP32[$2924>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2926 = ((($v)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2927 = $2926; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2928 = $2927; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2929 = HEAP32[$2928>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2930 = (($2927) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2931 = $2930; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2932 = HEAP32[$2931>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2933 = $2922 ^ $2929; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2934 = $2925 ^ $2932; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2935 = (_bitshift64Lshr(($2933|0),($2934|0),11)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2936 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2937 = $2917 | $2935; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2938 = $2918 | $2936; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2939 = ((($v)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2940 = $2939; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2941 = $2940; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2941>>2] = $2937; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2942 = (($2940) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2943 = $2942; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2943>>2] = $2938; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2944 = $i; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2945 = $2944; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2946 = HEAP32[$2945>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2947 = (($2944) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2948 = $2947; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2949 = HEAP32[$2948>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2950 = (_i64Add(($2946|0),($2949|0),1,0)|0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2951 = tempRet0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2952 = $i; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2953 = $2952; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2953>>2] = $2950; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2954 = (($2952) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2955 = $2954; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2955>>2] = $2951; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $2956 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2957 = $2956; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$2957>>2] = 0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2958 = (($2956) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2959 = $2958; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$2959>>2] = 0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $2960 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2961 = $2960; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2962 = HEAP32[$2961>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2963 = (($2960) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2964 = $2963; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2965 = HEAP32[$2964>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2966 = ($2965>>>0)<(0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2967 = ($2962>>>0)<(16); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2968 = ($2965|0)==(0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2969 = $2968 & $2967; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2970 = $2966 | $2969; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($2970)) {
   break;
  }
  $2971 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2972 = $2971; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2973 = HEAP32[$2972>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2974 = (($2971) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2975 = $2974; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2976 = HEAP32[$2975>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2977 = (($v) + ($2973<<3)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2978 = $2977; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2979 = $2978; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2980 = HEAP32[$2979>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2981 = (($2978) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2982 = $2981; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2983 = HEAP32[$2982>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2984 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2985 = $2984; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2986 = HEAP32[$2985>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2987 = (($2984) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2988 = $2987; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2989 = HEAP32[$2988>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2990 = (___uremdi3(($2986|0),($2989|0),8,0)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2991 = tempRet0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2992 = $0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2993 = (($2992) + ($2990<<3)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2994 = $2993; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2995 = $2994; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2996 = HEAP32[$2995>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2997 = (($2994) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2998 = $2997; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2999 = HEAP32[$2998>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3000 = $2996 ^ $2980; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3001 = $2999 ^ $2983; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3002 = $2993; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3003 = $3002; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3003>>2] = $3000; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3004 = (($3002) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3005 = $3004; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3005>>2] = $3001; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3006 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3007 = $3006; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3008 = HEAP32[$3007>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3009 = (($3006) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3010 = $3009; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3011 = HEAP32[$3010>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3012 = (_i64Add(($3008|0),($3011|0),1,0)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3013 = tempRet0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3014 = $i; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3015 = $3014; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3015>>2] = $3012; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3016 = (($3014) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3017 = $3016; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3017>>2] = $3013; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $3018 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3019 = $3018; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3019>>2] = 0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3020 = (($3018) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3021 = $3020; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3021>>2] = 0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $3022 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3023 = $3022; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3024 = HEAP32[$3023>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3025 = (($3022) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3026 = $3025; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3027 = HEAP32[$3026>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3028 = ($3027>>>0)<(0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3029 = ($3024>>>0)<(8); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3030 = ($3027|0)==(0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3031 = $3030 & $3029; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3032 = $3028 | $3031; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($3032)) {
   break;
  }
  $3033 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3034 = $3033; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3035 = HEAP32[$3034>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3036 = (($3033) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3037 = $3036; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3038 = HEAP32[$3037>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3039 = (___uremdi3(($3035|0),($3038|0),4,0)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3040 = tempRet0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3041 = $0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3042 = ((($3041)) + 64|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3043 = (($3042) + ($3039<<3)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3044 = $3043; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3045 = $3044; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3046 = HEAP32[$3045>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3047 = (($3044) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3048 = $3047; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3049 = HEAP32[$3048>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3050 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3051 = $3050; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3052 = HEAP32[$3051>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3053 = (($3050) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3054 = $3053; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3055 = HEAP32[$3054>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3056 = $0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3057 = (($3056) + ($3052<<3)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3058 = $3057; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3059 = $3058; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3060 = HEAP32[$3059>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3061 = (($3058) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3062 = $3061; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3063 = HEAP32[$3062>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3064 = $3060 ^ $3046; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3065 = $3063 ^ $3049; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3066 = $3057; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3067 = $3066; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3067>>2] = $3064; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3068 = (($3066) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3069 = $3068; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3069>>2] = $3065; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3070 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3071 = $3070; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3072 = HEAP32[$3071>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3073 = (($3070) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3074 = $3073; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3075 = HEAP32[$3074>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3076 = (_i64Add(($3072|0),($3075|0),1,0)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3077 = tempRet0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3078 = $i; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3079 = $3078; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3079>>2] = $3076; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3080 = (($3078) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3081 = $3080; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3081>>2] = $3077; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 STACKTOP = sp;return; //@line 115 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _blake512_init($S) {
 $S = $S|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $S;
 $1 = $0; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $2 = $1; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $3 = $2; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3>>2] = -205731576; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $4 = (($2) + 4)|0; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $5 = $4; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$5>>2] = 1779033703; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $6 = $0; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $7 = ((($6)) + 8|0); //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $8 = $7; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = $8; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$9>>2] = -2067093701; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = (($8) + 4)|0; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = $10; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$11>>2] = -1150833019; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = $0; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = ((($12)) + 16|0); //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = $13; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = $14; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$15>>2] = -23791573; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = (($14) + 4)|0; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = $16; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$17>>2] = 1013904242; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = $0; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = ((($18)) + 24|0); //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = $19; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $21 = $20; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$21>>2] = 1595750129; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $22 = (($20) + 4)|0; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $23 = $22; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$23>>2] = -1521486534; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $24 = $0; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $25 = ((($24)) + 32|0); //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $26 = $25; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $27 = $26; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$27>>2] = -1377402159; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $28 = (($26) + 4)|0; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $29 = $28; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$29>>2] = 1359893119; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $30 = $0; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $31 = ((($30)) + 40|0); //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $32 = $31; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $33 = $32; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$33>>2] = 725511199; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $34 = (($32) + 4)|0; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $35 = $34; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$35>>2] = -1694144372; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $36 = $0; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $37 = ((($36)) + 48|0); //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $38 = $37; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $39 = $38; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$39>>2] = -79577749; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $40 = (($38) + 4)|0; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $41 = $40; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$41>>2] = 528734635; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $42 = $0; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $43 = ((($42)) + 56|0); //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $44 = $43; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $45 = $44; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$45>>2] = 327033209; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $46 = (($44) + 4)|0; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $47 = $46; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$47>>2] = 1541459225; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $48 = $0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $49 = ((($48)) + 116|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$49>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $50 = $0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $51 = ((($50)) + 112|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$51>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $52 = $0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $53 = ((($52)) + 96|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $54 = ((($53)) + 8|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $55 = $54; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $56 = $55; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$56>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $57 = (($55) + 4)|0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $58 = $57; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$58>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $59 = $0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $60 = ((($59)) + 96|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $61 = $60; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $62 = $61; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$62>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $63 = (($61) + 4)|0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $64 = $63; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$64>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $65 = $0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $66 = ((($65)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $67 = ((($66)) + 24|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $68 = $67; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $69 = $68; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$69>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $70 = (($68) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $71 = $70; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$71>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $72 = $0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $73 = ((($72)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $74 = ((($73)) + 16|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $75 = $74; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $76 = $75; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$76>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $77 = (($75) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $78 = $77; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$78>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $79 = $0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $80 = ((($79)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $81 = ((($80)) + 8|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $82 = $81; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $83 = $82; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$83>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $84 = (($82) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $85 = $84; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$85>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $86 = $0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $87 = ((($86)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $88 = $87; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $89 = $88; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$89>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $90 = (($88) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $91 = $90; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$91>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return; //@line 131 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _blake512_update($S,$data,$0,$1) {
 $S = $S|0;
 $data = $data|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fill = 0, $left = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $2 = $S;
 $3 = $data;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = $2; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = ((($9)) + 112|0); //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = HEAP32[$10>>2]|0; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = $11 >> 3; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $left = $12; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = $left; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = (128 - ($13))|0; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $fill = $14; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = $left; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = ($15|0)!=(0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($16) {
  $17 = $4; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $18 = $17; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $19 = HEAP32[$18>>2]|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $20 = (($17) + 4)|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $21 = $20; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $22 = HEAP32[$21>>2]|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $23 = (_bitshift64Lshr(($19|0),($22|0),3)|0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $24 = tempRet0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $25 = $23 & 127; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $26 = $fill; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $27 = ($26|0)<(0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $28 = $27 << 31 >> 31; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $29 = (0)>($28>>>0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $30 = ($25>>>0)>=($26>>>0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $31 = (0)==($28|0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $32 = $31 & $30; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $33 = $29 | $32; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  if ($33) {
   $34 = $2; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $35 = ((($34)) + 120|0); //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $36 = $left; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $37 = (($35) + ($36)|0); //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $38 = $3; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $39 = $fill; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   _memcpy(($37|0),($38|0),($39|0))|0; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $40 = $2; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $41 = ((($40)) + 96|0); //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $42 = $41; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $43 = $42; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $44 = HEAP32[$43>>2]|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $45 = (($42) + 4)|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $46 = $45; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $47 = HEAP32[$46>>2]|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $48 = (_i64Add(($44|0),($47|0),1024,0)|0); //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $49 = tempRet0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $50 = $41; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $51 = $50; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$51>>2] = $48; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $52 = (($50) + 4)|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $53 = $52; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$53>>2] = $49; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $54 = $2; //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $55 = $2; //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $56 = ((($55)) + 120|0); //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_compress($54,$56); //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $57 = $fill; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $58 = $3; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $59 = (($58) + ($57)|0); //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $3 = $59; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $60 = $fill; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $61 = $60 << 3; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $62 = ($61|0)<(0); //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $63 = $62 << 31 >> 31; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $64 = $4; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $65 = $64; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $66 = HEAP32[$65>>2]|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $67 = (($64) + 4)|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $68 = $67; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $69 = HEAP32[$68>>2]|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $70 = (_i64Subtract(($66|0),($69|0),($61|0),($63|0))|0); //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $71 = tempRet0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $72 = $4; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $73 = $72; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$73>>2] = $70; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $74 = (($72) + 4)|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $75 = $74; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$75>>2] = $71; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $left = 0; //@line 146 "c_src/crypto_hash/blake512/ref/hash.c"
  }
 }
 while(1) {
  $76 = $4; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $77 = $76; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $78 = HEAP32[$77>>2]|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $79 = (($76) + 4)|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $80 = $79; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $81 = HEAP32[$80>>2]|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $82 = ($81>>>0)>(0); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $83 = ($78>>>0)>=(1024); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $84 = ($81|0)==(0); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $85 = $84 & $83; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $86 = $82 | $85; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($86)) {
   break;
  }
  $87 = $2; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $88 = ((($87)) + 96|0); //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $89 = $88; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $90 = $89; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $91 = HEAP32[$90>>2]|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $92 = (($89) + 4)|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $93 = $92; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $94 = HEAP32[$93>>2]|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $95 = (_i64Add(($91|0),($94|0),1024,0)|0); //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $96 = tempRet0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $97 = $88; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $98 = $97; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$98>>2] = $95; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $99 = (($97) + 4)|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $100 = $99; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$100>>2] = $96; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $101 = $2; //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  $102 = $3; //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_compress($101,$102); //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  $103 = $3; //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $104 = ((($103)) + 128|0); //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $3 = $104; //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $105 = $4; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $106 = $105; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $107 = HEAP32[$106>>2]|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $108 = (($105) + 4)|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $109 = $108; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $110 = HEAP32[$109>>2]|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $111 = (_i64Subtract(($107|0),($110|0),1024,0)|0); //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $112 = tempRet0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $113 = $4; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $114 = $113; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$114>>2] = $111; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $115 = (($113) + 4)|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $116 = $115; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$116>>2] = $112; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $117 = $4; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $118 = $117; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $119 = HEAP32[$118>>2]|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $120 = (($117) + 4)|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $121 = $120; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $122 = HEAP32[$121>>2]|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $123 = ($122>>>0)>(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $124 = ($119>>>0)>(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $125 = ($122|0)==(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $126 = $125 & $124; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $127 = $123 | $126; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $128 = $2; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($127) {
  $129 = ((($128)) + 120|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $130 = $left; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $131 = (($129) + ($130)|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $132 = $3; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $133 = $4; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $134 = $133; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $135 = HEAP32[$134>>2]|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $136 = (($133) + 4)|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $137 = $136; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $138 = HEAP32[$137>>2]|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $139 = (_bitshift64Lshr(($135|0),($138|0),3)|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $140 = tempRet0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $141 = $139 & 127; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  _memcpy(($131|0),($132|0),($141|0))|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $142 = $left; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $143 = $142 << 3; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $144 = ($143|0)<(0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $145 = $144 << 31 >> 31; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $146 = $4; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $147 = $146; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $148 = HEAP32[$147>>2]|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $149 = (($146) + 4)|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $150 = $149; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $151 = HEAP32[$150>>2]|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $152 = (_i64Add(($143|0),($145|0),($148|0),($151|0))|0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $153 = tempRet0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $154 = $2; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $155 = ((($154)) + 112|0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$155>>2] = $152; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  STACKTOP = sp;return; //@line 161 "c_src/crypto_hash/blake512/ref/hash.c"
 } else {
  $156 = ((($128)) + 112|0); //@line 160 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$156>>2] = 0; //@line 160 "c_src/crypto_hash/blake512/ref/hash.c"
  STACKTOP = sp;return; //@line 161 "c_src/crypto_hash/blake512/ref/hash.c"
 }
}
function _blake512_final($S,$digest) {
 $S = $S|0;
 $digest = $digest|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0;
 var $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0;
 var $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0;
 var $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0;
 var $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0;
 var $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $hi = 0, $lo = 0, $msglen = 0, $oo = 0;
 var $zo = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $msglen = sp + 32|0;
 $zo = sp + 25|0;
 $oo = sp + 24|0;
 $lo = sp + 8|0;
 $hi = sp;
 $0 = $S;
 $1 = $digest;
 HEAP8[$zo>>0] = 1; //@line 166 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$oo>>0] = -127; //@line 166 "c_src/crypto_hash/blake512/ref/hash.c"
 $2 = $0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $3 = ((($2)) + 96|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $4 = $3; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $5 = $4; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $6 = HEAP32[$5>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $7 = (($4) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $8 = $7; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = HEAP32[$8>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = $0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = ((($10)) + 112|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = HEAP32[$11>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = ($12|0)<(0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = $13 << 31 >> 31; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = (_i64Add(($6|0),($9|0),($12|0),($14|0))|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = tempRet0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = $lo; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = $17; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$18>>2] = $15; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = (($17) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = $19; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$20>>2] = $16; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $21 = $0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $22 = ((($21)) + 96|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $23 = ((($22)) + 8|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $24 = $23; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $25 = $24; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $26 = HEAP32[$25>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $27 = (($24) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $28 = $27; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $29 = HEAP32[$28>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $30 = $hi; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $31 = $30; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$31>>2] = $26; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $32 = (($30) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $33 = $32; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$33>>2] = $29; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $34 = $lo; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $35 = $34; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $36 = HEAP32[$35>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $37 = (($34) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $38 = $37; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $39 = HEAP32[$38>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $40 = $0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $41 = ((($40)) + 112|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $42 = HEAP32[$41>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $43 = ($42|0)<(0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $44 = $43 << 31 >> 31; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $45 = ($39>>>0)<($44>>>0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $46 = ($36>>>0)<($42>>>0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $47 = ($39|0)==($44|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $48 = $47 & $46; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $49 = $45 | $48; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($49) {
  $50 = $hi; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $51 = $50; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $52 = HEAP32[$51>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $53 = (($50) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $54 = $53; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $55 = HEAP32[$54>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $56 = (_i64Add(($52|0),($55|0),1,0)|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $57 = tempRet0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $58 = $hi; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $59 = $58; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$59>>2] = $56; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $60 = (($58) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $61 = $60; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$61>>2] = $57; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $62 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $63 = $62; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $64 = HEAP32[$63>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $65 = (($62) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $66 = $65; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $67 = HEAP32[$66>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $68 = $67 >>> 24; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $69 = $68&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$msglen>>0] = $69; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $70 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $71 = $70; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $72 = HEAP32[$71>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $73 = (($70) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $74 = $73; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $75 = HEAP32[$74>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $76 = $75 >>> 16; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $77 = $76&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $78 = ((($msglen)) + 1|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$78>>0] = $77; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $79 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $80 = $79; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $81 = HEAP32[$80>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $82 = (($79) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $83 = $82; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $84 = HEAP32[$83>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $85 = $84 >>> 8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $86 = $85&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $87 = ((($msglen)) + 2|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$87>>0] = $86; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $88 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $89 = $88; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $90 = HEAP32[$89>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $91 = (($88) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $92 = $91; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $93 = HEAP32[$92>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $94 = $93&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $95 = ((($msglen)) + 3|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$95>>0] = $94; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $96 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $97 = $96; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $98 = HEAP32[$97>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $99 = (($96) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $100 = $99; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $101 = HEAP32[$100>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $102 = $98 >>> 24; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $103 = $102&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $104 = ((($msglen)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$104>>0] = $103; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $105 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $106 = $105; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $107 = HEAP32[$106>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $108 = (($105) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $109 = $108; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $110 = HEAP32[$109>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $111 = $107 >>> 16; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $112 = $111&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $113 = ((($msglen)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $114 = ((($113)) + 1|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$114>>0] = $112; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $115 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $116 = $115; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $117 = HEAP32[$116>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $118 = (($115) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $119 = $118; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $120 = HEAP32[$119>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $121 = $117 >>> 8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $122 = $121&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $123 = ((($msglen)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $124 = ((($123)) + 2|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$124>>0] = $122; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $125 = $hi; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $126 = $125; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $127 = HEAP32[$126>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $128 = (($125) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $129 = $128; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $130 = HEAP32[$129>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $131 = $127&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $132 = ((($msglen)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $133 = ((($132)) + 3|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$133>>0] = $131; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $134 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $135 = $134; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $136 = HEAP32[$135>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $137 = (($134) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $138 = $137; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $139 = HEAP32[$138>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $140 = $139 >>> 24; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $141 = $140&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $142 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$142>>0] = $141; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $143 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $144 = $143; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $145 = HEAP32[$144>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $146 = (($143) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $147 = $146; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $148 = HEAP32[$147>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $149 = $148 >>> 16; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $150 = $149&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $151 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $152 = ((($151)) + 1|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$152>>0] = $150; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $153 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $154 = $153; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $155 = HEAP32[$154>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $156 = (($153) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $157 = $156; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $158 = HEAP32[$157>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $159 = $158 >>> 8; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $160 = $159&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $161 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $162 = ((($161)) + 2|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$162>>0] = $160; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $163 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $164 = $163; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $165 = HEAP32[$164>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $166 = (($163) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $167 = $166; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $168 = HEAP32[$167>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $169 = $168&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $170 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $171 = ((($170)) + 3|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$171>>0] = $169; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $172 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $173 = $172; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $174 = HEAP32[$173>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $175 = (($172) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $176 = $175; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $177 = HEAP32[$176>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $178 = $174 >>> 24; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $179 = $178&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $180 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $181 = ((($180)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$181>>0] = $179; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $182 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $183 = $182; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $184 = HEAP32[$183>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $185 = (($182) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $186 = $185; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $187 = HEAP32[$186>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $188 = $184 >>> 16; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $189 = $188&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $190 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $191 = ((($190)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $192 = ((($191)) + 1|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$192>>0] = $189; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $193 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $194 = $193; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $195 = HEAP32[$194>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $196 = (($193) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $197 = $196; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $198 = HEAP32[$197>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $199 = $195 >>> 8; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $200 = $199&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $201 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $202 = ((($201)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $203 = ((($202)) + 2|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$203>>0] = $200; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $204 = $lo; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $205 = $204; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $206 = HEAP32[$205>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $207 = (($204) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $208 = $207; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $209 = HEAP32[$208>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $210 = $206&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $211 = ((($msglen)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $212 = ((($211)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $213 = ((($212)) + 3|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$213>>0] = $210; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $214 = $0; //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $215 = ((($214)) + 112|0); //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $216 = HEAP32[$215>>2]|0; //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $217 = ($216|0)==(888); //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $218 = $0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($217) {
  $219 = ((($218)) + 96|0); //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $220 = $219; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $221 = $220; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $222 = HEAP32[$221>>2]|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $223 = (($220) + 4)|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $224 = $223; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $225 = HEAP32[$224>>2]|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $226 = (_i64Subtract(($222|0),($225|0),8,0)|0); //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $227 = tempRet0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $228 = $219; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $229 = $228; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$229>>2] = $226; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $230 = (($228) + 4)|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $231 = $230; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$231>>2] = $227; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $232 = $0; //@line 174 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_update($232,$oo,8,0); //@line 174 "c_src/crypto_hash/blake512/ref/hash.c"
 } else {
  $233 = ((($218)) + 112|0); //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $234 = HEAP32[$233>>2]|0; //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $235 = ($234|0)<(888); //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $236 = $0; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  $237 = ((($236)) + 112|0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  $238 = HEAP32[$237>>2]|0; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  if ($235) {
   $239 = ($238|0)==(0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
   if ($239) {
    $240 = $0; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
    $241 = ((($240)) + 116|0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
    HEAP32[$241>>2] = 1; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
   }
   $242 = $0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $243 = ((($242)) + 112|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $244 = HEAP32[$243>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $245 = (888 - ($244))|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $246 = ($245|0)<(0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $247 = $246 << 31 >> 31; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $248 = $0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $249 = ((($248)) + 96|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $250 = $249; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $251 = $250; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $252 = HEAP32[$251>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $253 = (($250) + 4)|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $254 = $253; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $255 = HEAP32[$254>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $256 = (_i64Subtract(($252|0),($255|0),($245|0),($247|0))|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $257 = tempRet0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $258 = $249; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $259 = $258; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$259>>2] = $256; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $260 = (($258) + 4)|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $261 = $260; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$261>>2] = $257; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $262 = $0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $263 = $0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $264 = ((($263)) + 112|0); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $265 = HEAP32[$264>>2]|0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $266 = (888 - ($265))|0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $267 = ($266|0)<(0); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $268 = $267 << 31 >> 31; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($262,2181,$266,$268); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
  } else {
   $269 = (1024 - ($238))|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $270 = ($269|0)<(0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $271 = $270 << 31 >> 31; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $272 = $0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $273 = ((($272)) + 96|0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $274 = $273; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $275 = $274; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $276 = HEAP32[$275>>2]|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $277 = (($274) + 4)|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $278 = $277; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $279 = HEAP32[$278>>2]|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $280 = (_i64Subtract(($276|0),($279|0),($269|0),($271|0))|0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $281 = tempRet0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $282 = $273; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $283 = $282; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$283>>2] = $280; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $284 = (($282) + 4)|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $285 = $284; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$285>>2] = $281; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $286 = $0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $287 = $0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $288 = ((($287)) + 112|0); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $289 = HEAP32[$288>>2]|0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $290 = (1024 - ($289))|0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $291 = ($290|0)<(0); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $292 = $291 << 31 >> 31; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($286,2181,$290,$292); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $293 = $0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $294 = ((($293)) + 96|0); //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $295 = $294; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $296 = $295; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $297 = HEAP32[$296>>2]|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $298 = (($295) + 4)|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $299 = $298; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $300 = HEAP32[$299>>2]|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $301 = (_i64Subtract(($297|0),($300|0),888,0)|0); //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $302 = tempRet0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $303 = $294; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $304 = $303; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$304>>2] = $301; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $305 = (($303) + 4)|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $306 = $305; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$306>>2] = $302; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $307 = $0; //@line 186 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($307,(2182),888,0); //@line 186 "c_src/crypto_hash/blake512/ref/hash.c"
   $308 = $0; //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
   $309 = ((($308)) + 116|0); //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$309>>2] = 1; //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
  }
  $310 = $0; //@line 189 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_update($310,$zo,8,0); //@line 189 "c_src/crypto_hash/blake512/ref/hash.c"
  $311 = $0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $312 = ((($311)) + 96|0); //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $313 = $312; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $314 = $313; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $315 = HEAP32[$314>>2]|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $316 = (($313) + 4)|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $317 = $316; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $318 = HEAP32[$317>>2]|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $319 = (_i64Subtract(($315|0),($318|0),8,0)|0); //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $320 = tempRet0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $321 = $312; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $322 = $321; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$322>>2] = $319; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $323 = (($321) + 4)|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $324 = $323; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$324>>2] = $320; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $325 = $0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $326 = ((($325)) + 96|0); //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $327 = $326; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $328 = $327; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $329 = HEAP32[$328>>2]|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $330 = (($327) + 4)|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $331 = $330; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $332 = HEAP32[$331>>2]|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $333 = (_i64Subtract(($329|0),($332|0),128,0)|0); //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $334 = tempRet0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $335 = $326; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $336 = $335; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$336>>2] = $333; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $337 = (($335) + 4)|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $338 = $337; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$338>>2] = $334; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $339 = $0; //@line 193 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_update($339,$msglen,128,0); //@line 193 "c_src/crypto_hash/blake512/ref/hash.c"
 $340 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $341 = $340; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $342 = $341; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $343 = HEAP32[$342>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $344 = (($341) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $345 = $344; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $346 = HEAP32[$345>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $347 = $346 >>> 24; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $348 = $347&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $349 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$349>>0] = $348; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $350 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $351 = $350; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $352 = $351; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $353 = HEAP32[$352>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $354 = (($351) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $355 = $354; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $356 = HEAP32[$355>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $357 = $356 >>> 16; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $358 = $357&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $359 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $360 = ((($359)) + 1|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$360>>0] = $358; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $361 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $362 = $361; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $363 = $362; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $364 = HEAP32[$363>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $365 = (($362) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $366 = $365; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $367 = HEAP32[$366>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $368 = $367 >>> 8; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $369 = $368&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $370 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $371 = ((($370)) + 2|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$371>>0] = $369; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $372 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $373 = $372; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $374 = $373; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $375 = HEAP32[$374>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $376 = (($373) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $377 = $376; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $378 = HEAP32[$377>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $379 = $378&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $380 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $381 = ((($380)) + 3|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$381>>0] = $379; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $382 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $383 = $382; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $384 = $383; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $385 = HEAP32[$384>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $386 = (($383) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $387 = $386; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $388 = HEAP32[$387>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $389 = $385 >>> 24; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $390 = $389&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $391 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $392 = ((($391)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$392>>0] = $390; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $393 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $394 = $393; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $395 = $394; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $396 = HEAP32[$395>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $397 = (($394) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $398 = $397; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $399 = HEAP32[$398>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $400 = $396 >>> 16; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $401 = $400&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $402 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $403 = ((($402)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $404 = ((($403)) + 1|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$404>>0] = $401; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $405 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $406 = $405; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $407 = $406; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $408 = HEAP32[$407>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $409 = (($406) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $410 = $409; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $411 = HEAP32[$410>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $412 = $408 >>> 8; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $413 = $412&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $414 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $415 = ((($414)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $416 = ((($415)) + 2|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$416>>0] = $413; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $417 = $0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $418 = $417; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $419 = $418; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $420 = HEAP32[$419>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $421 = (($418) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $422 = $421; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $423 = HEAP32[$422>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $424 = $420&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $425 = $1; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $426 = ((($425)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $427 = ((($426)) + 3|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$427>>0] = $424; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $428 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $429 = ((($428)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $430 = $429; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $431 = $430; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $432 = HEAP32[$431>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $433 = (($430) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $434 = $433; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $435 = HEAP32[$434>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $436 = $435 >>> 24; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $437 = $436&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $438 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $439 = ((($438)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$439>>0] = $437; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $440 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $441 = ((($440)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $442 = $441; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $443 = $442; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $444 = HEAP32[$443>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $445 = (($442) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $446 = $445; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $447 = HEAP32[$446>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $448 = $447 >>> 16; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $449 = $448&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $450 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $451 = ((($450)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $452 = ((($451)) + 1|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$452>>0] = $449; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $453 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $454 = ((($453)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $455 = $454; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $456 = $455; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $457 = HEAP32[$456>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $458 = (($455) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $459 = $458; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $460 = HEAP32[$459>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $461 = $460 >>> 8; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $462 = $461&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $463 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $464 = ((($463)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $465 = ((($464)) + 2|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$465>>0] = $462; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $466 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $467 = ((($466)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $468 = $467; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $469 = $468; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $470 = HEAP32[$469>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $471 = (($468) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $472 = $471; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $473 = HEAP32[$472>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $474 = $473&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $475 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $476 = ((($475)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $477 = ((($476)) + 3|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$477>>0] = $474; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $478 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $479 = ((($478)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $480 = $479; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $481 = $480; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $482 = HEAP32[$481>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $483 = (($480) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $484 = $483; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $485 = HEAP32[$484>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $486 = $482 >>> 24; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $487 = $486&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $488 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $489 = ((($488)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $490 = ((($489)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$490>>0] = $487; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $491 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $492 = ((($491)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $493 = $492; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $494 = $493; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $495 = HEAP32[$494>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $496 = (($493) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $497 = $496; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $498 = HEAP32[$497>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $499 = $495 >>> 16; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $500 = $499&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $501 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $502 = ((($501)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $503 = ((($502)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $504 = ((($503)) + 1|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$504>>0] = $500; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $505 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $506 = ((($505)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $507 = $506; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $508 = $507; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $509 = HEAP32[$508>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $510 = (($507) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $511 = $510; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $512 = HEAP32[$511>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $513 = $509 >>> 8; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $514 = $513&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $515 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $516 = ((($515)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $517 = ((($516)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $518 = ((($517)) + 2|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$518>>0] = $514; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $519 = $0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $520 = ((($519)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $521 = $520; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $522 = $521; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $523 = HEAP32[$522>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $524 = (($521) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $525 = $524; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $526 = HEAP32[$525>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $527 = $523&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $528 = $1; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $529 = ((($528)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $530 = ((($529)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $531 = ((($530)) + 3|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$531>>0] = $527; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $532 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $533 = ((($532)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $534 = $533; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $535 = $534; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $536 = HEAP32[$535>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $537 = (($534) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $538 = $537; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $539 = HEAP32[$538>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $540 = $539 >>> 24; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $541 = $540&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $542 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $543 = ((($542)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$543>>0] = $541; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $544 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $545 = ((($544)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $546 = $545; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $547 = $546; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $548 = HEAP32[$547>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $549 = (($546) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $550 = $549; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $551 = HEAP32[$550>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $552 = $551 >>> 16; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $553 = $552&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $554 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $555 = ((($554)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $556 = ((($555)) + 1|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$556>>0] = $553; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $557 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $558 = ((($557)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $559 = $558; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $560 = $559; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $561 = HEAP32[$560>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $562 = (($559) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $563 = $562; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $564 = HEAP32[$563>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $565 = $564 >>> 8; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $566 = $565&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $567 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $568 = ((($567)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $569 = ((($568)) + 2|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$569>>0] = $566; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $570 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $571 = ((($570)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $572 = $571; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $573 = $572; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $574 = HEAP32[$573>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $575 = (($572) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $576 = $575; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $577 = HEAP32[$576>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $578 = $577&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $579 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $580 = ((($579)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $581 = ((($580)) + 3|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$581>>0] = $578; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $582 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $583 = ((($582)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $584 = $583; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $585 = $584; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $586 = HEAP32[$585>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $587 = (($584) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $588 = $587; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $589 = HEAP32[$588>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $590 = $586 >>> 24; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $591 = $590&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $592 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $593 = ((($592)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $594 = ((($593)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$594>>0] = $591; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $595 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $596 = ((($595)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $597 = $596; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $598 = $597; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $599 = HEAP32[$598>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $600 = (($597) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $601 = $600; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $602 = HEAP32[$601>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $603 = $599 >>> 16; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $604 = $603&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $605 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $606 = ((($605)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $607 = ((($606)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $608 = ((($607)) + 1|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$608>>0] = $604; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $609 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $610 = ((($609)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $611 = $610; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $612 = $611; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $613 = HEAP32[$612>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $614 = (($611) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $615 = $614; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $616 = HEAP32[$615>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $617 = $613 >>> 8; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $618 = $617&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $619 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $620 = ((($619)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $621 = ((($620)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $622 = ((($621)) + 2|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$622>>0] = $618; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $623 = $0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $624 = ((($623)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $625 = $624; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $626 = $625; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $627 = HEAP32[$626>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $628 = (($625) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $629 = $628; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $630 = HEAP32[$629>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $631 = $627&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $632 = $1; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $633 = ((($632)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $634 = ((($633)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $635 = ((($634)) + 3|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$635>>0] = $631; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $636 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $637 = ((($636)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $638 = $637; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $639 = $638; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $640 = HEAP32[$639>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $641 = (($638) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $642 = $641; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $643 = HEAP32[$642>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $644 = $643 >>> 24; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $645 = $644&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $646 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $647 = ((($646)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$647>>0] = $645; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $648 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $649 = ((($648)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $650 = $649; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $651 = $650; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $652 = HEAP32[$651>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $653 = (($650) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $654 = $653; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $655 = HEAP32[$654>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $656 = $655 >>> 16; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $657 = $656&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $658 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $659 = ((($658)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $660 = ((($659)) + 1|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$660>>0] = $657; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $661 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $662 = ((($661)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $663 = $662; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $664 = $663; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $665 = HEAP32[$664>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $666 = (($663) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $667 = $666; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $668 = HEAP32[$667>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $669 = $668 >>> 8; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $670 = $669&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $671 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $672 = ((($671)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $673 = ((($672)) + 2|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$673>>0] = $670; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $674 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $675 = ((($674)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $676 = $675; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $677 = $676; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $678 = HEAP32[$677>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $679 = (($676) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $680 = $679; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $681 = HEAP32[$680>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $682 = $681&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $683 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $684 = ((($683)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $685 = ((($684)) + 3|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$685>>0] = $682; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $686 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $687 = ((($686)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $688 = $687; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $689 = $688; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $690 = HEAP32[$689>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $691 = (($688) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $692 = $691; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $693 = HEAP32[$692>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $694 = $690 >>> 24; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $695 = $694&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $696 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $697 = ((($696)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $698 = ((($697)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$698>>0] = $695; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $699 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $700 = ((($699)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $701 = $700; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $702 = $701; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $703 = HEAP32[$702>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $704 = (($701) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $705 = $704; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $706 = HEAP32[$705>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $707 = $703 >>> 16; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $708 = $707&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $709 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $710 = ((($709)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $711 = ((($710)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $712 = ((($711)) + 1|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$712>>0] = $708; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $713 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $714 = ((($713)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $715 = $714; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $716 = $715; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $717 = HEAP32[$716>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $718 = (($715) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $719 = $718; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $720 = HEAP32[$719>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $721 = $717 >>> 8; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $722 = $721&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $723 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $724 = ((($723)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $725 = ((($724)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $726 = ((($725)) + 2|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$726>>0] = $722; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $727 = $0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $728 = ((($727)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $729 = $728; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $730 = $729; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $731 = HEAP32[$730>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $732 = (($729) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $733 = $732; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $734 = HEAP32[$733>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $735 = $731&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $736 = $1; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $737 = ((($736)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $738 = ((($737)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $739 = ((($738)) + 3|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$739>>0] = $735; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $740 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $741 = ((($740)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $742 = $741; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $743 = $742; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $744 = HEAP32[$743>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $745 = (($742) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $746 = $745; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $747 = HEAP32[$746>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $748 = $747 >>> 24; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $749 = $748&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $750 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $751 = ((($750)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$751>>0] = $749; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $752 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $753 = ((($752)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $754 = $753; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $755 = $754; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $756 = HEAP32[$755>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $757 = (($754) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $758 = $757; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $759 = HEAP32[$758>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $760 = $759 >>> 16; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $761 = $760&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $762 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $763 = ((($762)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $764 = ((($763)) + 1|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$764>>0] = $761; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $765 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $766 = ((($765)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $767 = $766; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $768 = $767; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $769 = HEAP32[$768>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $770 = (($767) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $771 = $770; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $772 = HEAP32[$771>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $773 = $772 >>> 8; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $774 = $773&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $775 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $776 = ((($775)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $777 = ((($776)) + 2|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$777>>0] = $774; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $778 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $779 = ((($778)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $780 = $779; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $781 = $780; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $782 = HEAP32[$781>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $783 = (($780) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $784 = $783; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $785 = HEAP32[$784>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $786 = $785&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $787 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $788 = ((($787)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $789 = ((($788)) + 3|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$789>>0] = $786; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $790 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $791 = ((($790)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $792 = $791; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $793 = $792; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $794 = HEAP32[$793>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $795 = (($792) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $796 = $795; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $797 = HEAP32[$796>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $798 = $794 >>> 24; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $799 = $798&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $800 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $801 = ((($800)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $802 = ((($801)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$802>>0] = $799; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $803 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $804 = ((($803)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $805 = $804; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $806 = $805; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $807 = HEAP32[$806>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $808 = (($805) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $809 = $808; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $810 = HEAP32[$809>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $811 = $807 >>> 16; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $812 = $811&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $813 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $814 = ((($813)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $815 = ((($814)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $816 = ((($815)) + 1|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$816>>0] = $812; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $817 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $818 = ((($817)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $819 = $818; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $820 = $819; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $821 = HEAP32[$820>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $822 = (($819) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $823 = $822; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $824 = HEAP32[$823>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $825 = $821 >>> 8; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $826 = $825&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $827 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $828 = ((($827)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $829 = ((($828)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $830 = ((($829)) + 2|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$830>>0] = $826; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $831 = $0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $832 = ((($831)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $833 = $832; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $834 = $833; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $835 = HEAP32[$834>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $836 = (($833) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $837 = $836; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $838 = HEAP32[$837>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $839 = $835&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $840 = $1; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $841 = ((($840)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $842 = ((($841)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $843 = ((($842)) + 3|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$843>>0] = $839; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $844 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $845 = ((($844)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $846 = $845; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $847 = $846; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $848 = HEAP32[$847>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $849 = (($846) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $850 = $849; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $851 = HEAP32[$850>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $852 = $851 >>> 24; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $853 = $852&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $854 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $855 = ((($854)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$855>>0] = $853; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $856 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $857 = ((($856)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $858 = $857; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $859 = $858; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $860 = HEAP32[$859>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $861 = (($858) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $862 = $861; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $863 = HEAP32[$862>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $864 = $863 >>> 16; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $865 = $864&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $866 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $867 = ((($866)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $868 = ((($867)) + 1|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$868>>0] = $865; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $869 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $870 = ((($869)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $871 = $870; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $872 = $871; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $873 = HEAP32[$872>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $874 = (($871) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $875 = $874; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $876 = HEAP32[$875>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $877 = $876 >>> 8; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $878 = $877&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $879 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $880 = ((($879)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $881 = ((($880)) + 2|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$881>>0] = $878; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $882 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $883 = ((($882)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $884 = $883; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $885 = $884; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $886 = HEAP32[$885>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $887 = (($884) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $888 = $887; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $889 = HEAP32[$888>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $890 = $889&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $891 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $892 = ((($891)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $893 = ((($892)) + 3|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$893>>0] = $890; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $894 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $895 = ((($894)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $896 = $895; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $897 = $896; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $898 = HEAP32[$897>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $899 = (($896) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $900 = $899; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $901 = HEAP32[$900>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $902 = $898 >>> 24; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $903 = $902&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $904 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $905 = ((($904)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $906 = ((($905)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$906>>0] = $903; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $907 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $908 = ((($907)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $909 = $908; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $910 = $909; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $911 = HEAP32[$910>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $912 = (($909) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $913 = $912; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $914 = HEAP32[$913>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $915 = $911 >>> 16; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $916 = $915&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $917 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $918 = ((($917)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $919 = ((($918)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $920 = ((($919)) + 1|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$920>>0] = $916; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $921 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $922 = ((($921)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $923 = $922; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $924 = $923; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $925 = HEAP32[$924>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $926 = (($923) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $927 = $926; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $928 = HEAP32[$927>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $929 = $925 >>> 8; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $930 = $929&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $931 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $932 = ((($931)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $933 = ((($932)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $934 = ((($933)) + 2|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$934>>0] = $930; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $935 = $0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $936 = ((($935)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $937 = $936; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $938 = $937; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $939 = HEAP32[$938>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $940 = (($937) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $941 = $940; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $942 = HEAP32[$941>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $943 = $939&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $944 = $1; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $945 = ((($944)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $946 = ((($945)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $947 = ((($946)) + 3|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$947>>0] = $943; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $948 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $949 = ((($948)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $950 = $949; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $951 = $950; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $952 = HEAP32[$951>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $953 = (($950) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $954 = $953; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $955 = HEAP32[$954>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $956 = $955 >>> 24; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $957 = $956&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $958 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $959 = ((($958)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$959>>0] = $957; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $960 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $961 = ((($960)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $962 = $961; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $963 = $962; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $964 = HEAP32[$963>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $965 = (($962) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $966 = $965; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $967 = HEAP32[$966>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $968 = $967 >>> 16; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $969 = $968&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $970 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $971 = ((($970)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $972 = ((($971)) + 1|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$972>>0] = $969; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $973 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $974 = ((($973)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $975 = $974; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $976 = $975; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $977 = HEAP32[$976>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $978 = (($975) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $979 = $978; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $980 = HEAP32[$979>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $981 = $980 >>> 8; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $982 = $981&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $983 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $984 = ((($983)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $985 = ((($984)) + 2|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$985>>0] = $982; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $986 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $987 = ((($986)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $988 = $987; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $989 = $988; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $990 = HEAP32[$989>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $991 = (($988) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $992 = $991; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $993 = HEAP32[$992>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $994 = $993&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $995 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $996 = ((($995)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $997 = ((($996)) + 3|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$997>>0] = $994; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $998 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $999 = ((($998)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1000 = $999; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1001 = $1000; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1002 = HEAP32[$1001>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1003 = (($1000) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1004 = $1003; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1005 = HEAP32[$1004>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1006 = $1002 >>> 24; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1007 = $1006&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1008 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1009 = ((($1008)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1010 = ((($1009)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1010>>0] = $1007; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1011 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1012 = ((($1011)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1013 = $1012; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1014 = $1013; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1015 = HEAP32[$1014>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1016 = (($1013) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1017 = $1016; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1018 = HEAP32[$1017>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1019 = $1015 >>> 16; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1020 = $1019&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1021 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1022 = ((($1021)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1023 = ((($1022)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1024 = ((($1023)) + 1|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1024>>0] = $1020; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1025 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1026 = ((($1025)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1027 = $1026; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1028 = $1027; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1029 = HEAP32[$1028>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1030 = (($1027) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1031 = $1030; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1032 = HEAP32[$1031>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1033 = $1029 >>> 8; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1034 = $1033&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1035 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1036 = ((($1035)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1037 = ((($1036)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1038 = ((($1037)) + 2|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1038>>0] = $1034; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1039 = $0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1040 = ((($1039)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1041 = $1040; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1042 = $1041; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1043 = HEAP32[$1042>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1044 = (($1041) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1045 = $1044; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1046 = HEAP32[$1045>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1047 = $1043&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1048 = $1; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1049 = ((($1048)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1050 = ((($1049)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1051 = ((($1050)) + 3|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1051>>0] = $1047; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1052 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1053 = ((($1052)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1054 = $1053; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1055 = $1054; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1056 = HEAP32[$1055>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1057 = (($1054) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1058 = $1057; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1059 = HEAP32[$1058>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1060 = $1059 >>> 24; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1061 = $1060&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1062 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1063 = ((($1062)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1063>>0] = $1061; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1064 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1065 = ((($1064)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1066 = $1065; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1067 = $1066; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1068 = HEAP32[$1067>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1069 = (($1066) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1070 = $1069; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1071 = HEAP32[$1070>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1072 = $1071 >>> 16; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1073 = $1072&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1074 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1075 = ((($1074)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1076 = ((($1075)) + 1|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1076>>0] = $1073; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1077 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1078 = ((($1077)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1079 = $1078; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1080 = $1079; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1081 = HEAP32[$1080>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1082 = (($1079) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1083 = $1082; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1084 = HEAP32[$1083>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1085 = $1084 >>> 8; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1086 = $1085&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1087 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1088 = ((($1087)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1089 = ((($1088)) + 2|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1089>>0] = $1086; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1090 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1091 = ((($1090)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1092 = $1091; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1093 = $1092; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1094 = HEAP32[$1093>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1095 = (($1092) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1096 = $1095; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1097 = HEAP32[$1096>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1098 = $1097&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1099 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1100 = ((($1099)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1101 = ((($1100)) + 3|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1101>>0] = $1098; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1102 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1103 = ((($1102)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1104 = $1103; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1105 = $1104; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1106 = HEAP32[$1105>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1107 = (($1104) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1108 = $1107; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1109 = HEAP32[$1108>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1110 = $1106 >>> 24; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1111 = $1110&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1112 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1113 = ((($1112)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1114 = ((($1113)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1114>>0] = $1111; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1115 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1116 = ((($1115)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1117 = $1116; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1118 = $1117; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1119 = HEAP32[$1118>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1120 = (($1117) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1121 = $1120; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1122 = HEAP32[$1121>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1123 = $1119 >>> 16; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1124 = $1123&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1125 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1126 = ((($1125)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1127 = ((($1126)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1128 = ((($1127)) + 1|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1128>>0] = $1124; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1129 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1130 = ((($1129)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1131 = $1130; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1132 = $1131; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1133 = HEAP32[$1132>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1134 = (($1131) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1135 = $1134; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1136 = HEAP32[$1135>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1137 = $1133 >>> 8; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1138 = $1137&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1139 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1140 = ((($1139)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1141 = ((($1140)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1142 = ((($1141)) + 2|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1142>>0] = $1138; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1143 = $0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1144 = ((($1143)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1145 = $1144; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1146 = $1145; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1147 = HEAP32[$1146>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1148 = (($1145) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1149 = $1148; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1150 = HEAP32[$1149>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1151 = $1147&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1152 = $1; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1153 = ((($1152)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1154 = ((($1153)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1155 = ((($1154)) + 3|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1155>>0] = $1151; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return; //@line 203 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _crypto_hash_blake512_ref($out,$in,$0,$1) {
 $out = $out|0;
 $in = $in|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $S = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $4 = sp + 248|0;
 $S = sp;
 $2 = $out;
 $3 = $in;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 _blake512_init($S); //@line 209 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = $3; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = $4; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = $10; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = HEAP32[$11>>2]|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = (($10) + 4)|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = $13; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = (___muldi3(($12|0),($15|0),8,0)|0); //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = tempRet0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_update($S,$9,$16,$17); //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = $2; //@line 211 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_final($S,$18); //@line 211 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return 0; //@line 212 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _crypto_stream_chacha12_ref($c,$0,$1,$n,$k) {
 $c = $c|0;
 $0 = $0|0;
 $1 = $1|0;
 $n = $n|0;
 $k = $k|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $ctx = 0;
 var $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $3 = sp + 8|0;
 $ctx = sp + 16|0;
 $i = sp;
 $2 = $c;
 $6 = $3;
 $7 = $6;
 HEAP32[$7>>2] = $0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $4 = $n;
 $5 = $k;
 $10 = $5; //@line 18 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_keysetup($ctx,$10,256,64); //@line 18 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $11 = $4; //@line 19 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_ivsetup($ctx,$11); //@line 19 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $12 = $i; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $13 = $12; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 HEAP32[$13>>2] = 0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $14 = (($12) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $15 = $14; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 HEAP32[$15>>2] = 0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 while(1) {
  $16 = $i; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $17 = $16; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $18 = HEAP32[$17>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $19 = (($16) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $20 = $19; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $21 = HEAP32[$20>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $22 = $3; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $23 = $22; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $24 = HEAP32[$23>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $25 = (($22) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $26 = $25; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $27 = HEAP32[$26>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $28 = ($21>>>0)<($27>>>0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $29 = ($18>>>0)<($24>>>0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $30 = ($21|0)==($27|0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $31 = $30 & $29; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $32 = $28 | $31; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  if (!($32)) {
   break;
  }
  $33 = $i; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $34 = $33; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $35 = HEAP32[$34>>2]|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $36 = (($33) + 4)|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $37 = $36; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $38 = HEAP32[$37>>2]|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $39 = $2; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $40 = (($39) + ($35)|0); //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP8[$40>>0] = 0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $41 = $i; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $42 = $41; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $43 = HEAP32[$42>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $44 = (($41) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $45 = $44; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $46 = HEAP32[$45>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $47 = (_i64Add(($43|0),($46|0),1,0)|0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $48 = tempRet0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $49 = $i; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $50 = $49; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP32[$50>>2] = $47; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $51 = (($49) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $52 = $51; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP32[$52>>2] = $48; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 }
 $53 = $2; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $54 = $2; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $55 = $3; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $56 = $55; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $57 = HEAP32[$56>>2]|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $58 = (($55) + 4)|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $59 = $58; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $60 = HEAP32[$59>>2]|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_encrypt_bytes($ctx,$53,$54,$57); //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 STACKTOP = sp;return 0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/stream.c"
}
function _ECRYPT_keysetup($x,$k,$kbits,$ivbits) {
 $x = $x|0;
 $k = $k|0;
 $kbits = $kbits|0;
 $ivbits = $ivbits|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $constants = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = $x;
 $1 = $k;
 $2 = $kbits;
 $3 = $ivbits;
 $4 = $1; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $5 = HEAP8[$4>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $6 = $5&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $7 = $1; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $8 = ((($7)) + 1|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $9 = HEAP8[$8>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $10 = $9&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $11 = $10 << 8; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $12 = $6 | $11; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $13 = $1; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $14 = ((($13)) + 2|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $15 = HEAP8[$14>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $16 = $15&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $17 = $16 << 16; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $18 = $12 | $17; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $19 = $1; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $20 = ((($19)) + 3|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $21 = HEAP8[$20>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $22 = $21&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $23 = $22 << 24; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $24 = $18 | $23; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $25 = $0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $26 = ((($25)) + 16|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$26>>2] = $24; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $27 = $1; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $28 = ((($27)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $29 = HEAP8[$28>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $30 = $29&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $31 = $1; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $32 = ((($31)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $33 = ((($32)) + 1|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $34 = HEAP8[$33>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $35 = $34&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $36 = $35 << 8; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $37 = $30 | $36; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $38 = $1; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $39 = ((($38)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $40 = ((($39)) + 2|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $41 = HEAP8[$40>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $42 = $41&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $43 = $42 << 16; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $44 = $37 | $43; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $45 = $1; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $46 = ((($45)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $47 = ((($46)) + 3|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $48 = HEAP8[$47>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $49 = $48&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $50 = $49 << 24; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $51 = $44 | $50; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $52 = $0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $53 = ((($52)) + 20|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$53>>2] = $51; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $54 = $1; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $55 = ((($54)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $56 = HEAP8[$55>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $57 = $56&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $58 = $1; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $59 = ((($58)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $60 = ((($59)) + 1|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $61 = HEAP8[$60>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $62 = $61&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $63 = $62 << 8; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $64 = $57 | $63; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $65 = $1; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $66 = ((($65)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $67 = ((($66)) + 2|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $68 = HEAP8[$67>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $69 = $68&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $70 = $69 << 16; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $71 = $64 | $70; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $72 = $1; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $73 = ((($72)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $74 = ((($73)) + 3|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $75 = HEAP8[$74>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $76 = $75&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $77 = $76 << 24; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $78 = $71 | $77; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $79 = $0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $80 = ((($79)) + 24|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$80>>2] = $78; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $81 = $1; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $82 = ((($81)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $83 = HEAP8[$82>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $84 = $83&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $85 = $1; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $86 = ((($85)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $87 = ((($86)) + 1|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $88 = HEAP8[$87>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $89 = $88&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $90 = $89 << 8; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $91 = $84 | $90; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $92 = $1; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $93 = ((($92)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $94 = ((($93)) + 2|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $95 = HEAP8[$94>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $96 = $95&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $97 = $96 << 16; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $98 = $91 | $97; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $99 = $1; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $100 = ((($99)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $101 = ((($100)) + 3|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $102 = HEAP8[$101>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $103 = $102&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $104 = $103 << 24; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $105 = $98 | $104; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $106 = $0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $107 = ((($106)) + 28|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$107>>2] = $105; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $108 = $2; //@line 56 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $109 = ($108|0)==(256); //@line 56 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 if ($109) {
  $110 = $1; //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $111 = ((($110)) + 16|0); //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $1 = $111; //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $constants = 2310; //@line 58 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 } else {
  $constants = 2326; //@line 60 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $112 = $1; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $113 = HEAP8[$112>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $114 = $113&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $115 = $1; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $116 = ((($115)) + 1|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $117 = HEAP8[$116>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $118 = $117&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $119 = $118 << 8; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $120 = $114 | $119; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $121 = $1; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $122 = ((($121)) + 2|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $123 = HEAP8[$122>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $124 = $123&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $125 = $124 << 16; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $126 = $120 | $125; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $127 = $1; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $128 = ((($127)) + 3|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $129 = HEAP8[$128>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $130 = $129&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $131 = $130 << 24; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $132 = $126 | $131; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $133 = $0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $134 = ((($133)) + 32|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$134>>2] = $132; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $135 = $1; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $136 = ((($135)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $137 = HEAP8[$136>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $138 = $137&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $139 = $1; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $140 = ((($139)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $141 = ((($140)) + 1|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $142 = HEAP8[$141>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $143 = $142&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $144 = $143 << 8; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $145 = $138 | $144; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $146 = $1; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $147 = ((($146)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $148 = ((($147)) + 2|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $149 = HEAP8[$148>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $150 = $149&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $151 = $150 << 16; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $152 = $145 | $151; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $153 = $1; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $154 = ((($153)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $155 = ((($154)) + 3|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $156 = HEAP8[$155>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $157 = $156&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $158 = $157 << 24; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $159 = $152 | $158; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $160 = $0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $161 = ((($160)) + 36|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$161>>2] = $159; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $162 = $1; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $163 = ((($162)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $164 = HEAP8[$163>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $165 = $164&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $166 = $1; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $167 = ((($166)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $168 = ((($167)) + 1|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $169 = HEAP8[$168>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $170 = $169&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $171 = $170 << 8; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $172 = $165 | $171; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $173 = $1; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $174 = ((($173)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $175 = ((($174)) + 2|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $176 = HEAP8[$175>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $177 = $176&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $178 = $177 << 16; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $179 = $172 | $178; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $180 = $1; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $181 = ((($180)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $182 = ((($181)) + 3|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $183 = HEAP8[$182>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $184 = $183&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $185 = $184 << 24; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $186 = $179 | $185; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $187 = $0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $188 = ((($187)) + 40|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$188>>2] = $186; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $189 = $1; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $190 = ((($189)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $191 = HEAP8[$190>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $192 = $191&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $193 = $1; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $194 = ((($193)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $195 = ((($194)) + 1|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $196 = HEAP8[$195>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $197 = $196&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $198 = $197 << 8; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $199 = $192 | $198; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $200 = $1; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $201 = ((($200)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $202 = ((($201)) + 2|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $203 = HEAP8[$202>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $204 = $203&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $205 = $204 << 16; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $206 = $199 | $205; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $207 = $1; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $208 = ((($207)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $209 = ((($208)) + 3|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $210 = HEAP8[$209>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $211 = $210&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $212 = $211 << 24; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $213 = $206 | $212; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $214 = $0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $215 = ((($214)) + 44|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$215>>2] = $213; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $216 = $constants; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $217 = HEAP8[$216>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $218 = $217 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $219 = $constants; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $220 = ((($219)) + 1|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $221 = HEAP8[$220>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $222 = $221 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $223 = $222 << 8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $224 = $218 | $223; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $225 = $constants; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $226 = ((($225)) + 2|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $227 = HEAP8[$226>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $228 = $227 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $229 = $228 << 16; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $230 = $224 | $229; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $231 = $constants; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $232 = ((($231)) + 3|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $233 = HEAP8[$232>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $234 = $233 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $235 = $234 << 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $236 = $230 | $235; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $237 = $0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$237>>2] = $236; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $238 = $constants; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $239 = ((($238)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $240 = HEAP8[$239>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $241 = $240 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $242 = $constants; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $243 = ((($242)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $244 = ((($243)) + 1|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $245 = HEAP8[$244>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $246 = $245 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $247 = $246 << 8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $248 = $241 | $247; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $249 = $constants; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $250 = ((($249)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $251 = ((($250)) + 2|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $252 = HEAP8[$251>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $253 = $252 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $254 = $253 << 16; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $255 = $248 | $254; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $256 = $constants; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $257 = ((($256)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $258 = ((($257)) + 3|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $259 = HEAP8[$258>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $260 = $259 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $261 = $260 << 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $262 = $255 | $261; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $263 = $0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $264 = ((($263)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$264>>2] = $262; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $265 = $constants; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $266 = ((($265)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $267 = HEAP8[$266>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $268 = $267 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $269 = $constants; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $270 = ((($269)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $271 = ((($270)) + 1|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $272 = HEAP8[$271>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $273 = $272 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $274 = $273 << 8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $275 = $268 | $274; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $276 = $constants; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $277 = ((($276)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $278 = ((($277)) + 2|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $279 = HEAP8[$278>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $280 = $279 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $281 = $280 << 16; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $282 = $275 | $281; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $283 = $constants; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $284 = ((($283)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $285 = ((($284)) + 3|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $286 = HEAP8[$285>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $287 = $286 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $288 = $287 << 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $289 = $282 | $288; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $290 = $0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $291 = ((($290)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$291>>2] = $289; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $292 = $constants; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $293 = ((($292)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $294 = HEAP8[$293>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $295 = $294 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $296 = $constants; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $297 = ((($296)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $298 = ((($297)) + 1|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $299 = HEAP8[$298>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $300 = $299 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $301 = $300 << 8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $302 = $295 | $301; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $303 = $constants; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $304 = ((($303)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $305 = ((($304)) + 2|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $306 = HEAP8[$305>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $307 = $306 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $308 = $307 << 16; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $309 = $302 | $308; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $310 = $constants; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $311 = ((($310)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $312 = ((($311)) + 3|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $313 = HEAP8[$312>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $314 = $313 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $315 = $314 << 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $316 = $309 | $315; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $317 = $0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $318 = ((($317)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$318>>2] = $316; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 STACKTOP = sp;return; //@line 70 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _ECRYPT_ivsetup($x,$iv) {
 $x = $x|0;
 $iv = $iv|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $x;
 $1 = $iv;
 $2 = $0; //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $3 = ((($2)) + 48|0); //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$3>>2] = 0; //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $4 = $0; //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $5 = ((($4)) + 52|0); //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$5>>2] = 0; //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $6 = $1; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $7 = HEAP8[$6>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $8 = $7&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $9 = $1; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $10 = ((($9)) + 1|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $11 = HEAP8[$10>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $12 = $11&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $13 = $12 << 8; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $14 = $8 | $13; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $15 = $1; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $16 = ((($15)) + 2|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $17 = HEAP8[$16>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $18 = $17&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $19 = $18 << 16; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $20 = $14 | $19; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $21 = $1; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $22 = ((($21)) + 3|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $23 = HEAP8[$22>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $24 = $23&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $25 = $24 << 24; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $26 = $20 | $25; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $27 = $0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $28 = ((($27)) + 56|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$28>>2] = $26; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $29 = $1; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $30 = ((($29)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $31 = HEAP8[$30>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $32 = $31&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $33 = $1; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $34 = ((($33)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $35 = ((($34)) + 1|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $36 = HEAP8[$35>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $37 = $36&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $38 = $37 << 8; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $39 = $32 | $38; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $40 = $1; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $41 = ((($40)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $42 = ((($41)) + 2|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $43 = HEAP8[$42>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $44 = $43&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $45 = $44 << 16; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $46 = $39 | $45; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $47 = $1; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $48 = ((($47)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $49 = ((($48)) + 3|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $50 = HEAP8[$49>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $51 = $50&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $52 = $51 << 24; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $53 = $46 | $52; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $54 = $0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $55 = ((($54)) + 60|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$55>>2] = $53; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 STACKTOP = sp;return; //@line 78 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _ECRYPT_encrypt_bytes($x,$m,$c,$bytes) {
 $x = $x|0;
 $m = $m|0;
 $c = $c|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $output = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $output = sp + 24|0;
 $0 = $x;
 $1 = $m;
 $2 = $c;
 $3 = $bytes;
 $4 = $3; //@line 85 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $5 = ($4|0)!=(0); //@line 85 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 if (!($5)) {
  STACKTOP = sp;return; //@line 102 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 while(1) {
  $6 = $0; //@line 87 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  _salsa20_wordtobyte($output,$6); //@line 87 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $7 = $0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $8 = ((($7)) + 48|0); //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $9 = HEAP32[$8>>2]|0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $10 = (($9) + 1)|0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $11 = $0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $12 = ((($11)) + 48|0); //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$12>>2] = $10; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $13 = $0; //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $14 = ((($13)) + 48|0); //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $15 = HEAP32[$14>>2]|0; //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $16 = ($15|0)!=(0); //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($16)) {
   $17 = $0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $18 = ((($17)) + 52|0); //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $19 = HEAP32[$18>>2]|0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $20 = (($19) + 1)|0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $21 = $0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $22 = ((($21)) + 52|0); //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   HEAP32[$22>>2] = $20; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  }
  $23 = $3; //@line 93 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $24 = ($23>>>0)<=(64); //@line 93 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = 0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if ($24) {
   break;
  }
  while(1) {
   $44 = $i; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $45 = ($44|0)<(64); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   if (!($45)) {
    break;
   }
   $46 = $i; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $47 = $1; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $48 = (($47) + ($46)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $49 = HEAP8[$48>>0]|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $50 = $49&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $51 = $i; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $52 = (($output) + ($51)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $53 = HEAP8[$52>>0]|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $54 = $53&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $55 = $50 ^ $54; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $56 = $55&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $57 = $i; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $58 = $2; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $59 = (($58) + ($57)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   HEAP8[$59>>0] = $56; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $60 = $i; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $61 = (($60) + 1)|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $i = $61; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  }
  $62 = $3; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $63 = (($62) - 64)|0; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $3 = $63; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $64 = $2; //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $65 = ((($64)) + 64|0); //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $2 = $65; //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $66 = $1; //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $67 = ((($66)) + 64|0); //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $1 = $67; //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 while(1) {
  $25 = $i; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $26 = $3; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $27 = ($25>>>0)<($26>>>0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($27)) {
   break;
  }
  $28 = $i; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $29 = $1; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $30 = (($29) + ($28)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $31 = HEAP8[$30>>0]|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $32 = $31&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $33 = $i; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $34 = (($output) + ($33)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $35 = HEAP8[$34>>0]|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $36 = $35&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $37 = $32 ^ $36; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $38 = $37&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $39 = $i; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $40 = $2; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $41 = (($40) + ($39)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$41>>0] = $38; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $42 = $i; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $43 = (($42) + 1)|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = $43; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 STACKTOP = sp;return; //@line 102 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _salsa20_wordtobyte($output,$input) {
 $output = $output|0;
 $input = $input|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $x = sp + 8|0;
 $0 = $output;
 $1 = $input;
 $i = 0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $2 = $i; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $3 = ($2|0)<(16); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $1; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $6 = (($5) + ($4<<2)|0); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $7 = HEAP32[$6>>2]|0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $8 = $i; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $9 = (($x) + ($8<<2)|0); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$9>>2] = $7; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $10 = $i; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $11 = (($10) + 1)|0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = $11; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $i = 12; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $12 = $i; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $13 = ($12|0)>(0); //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($13)) {
   break;
  }
  $14 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $15 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $16 = HEAP32[$15>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $17 = (($14) + ($16))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$x>>2] = $17; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $18 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $19 = HEAP32[$18>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $20 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $21 = $19 ^ $20; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $22 = $21 << 16; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $23 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $24 = HEAP32[$23>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $25 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $26 = $24 ^ $25; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $27 = $26 >>> 16; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $28 = $22 | $27; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $29 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$29>>2] = $28; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $30 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $31 = HEAP32[$30>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $32 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $33 = HEAP32[$32>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $34 = (($31) + ($33))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $35 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$35>>2] = $34; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $36 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $37 = HEAP32[$36>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $38 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $39 = HEAP32[$38>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $40 = $37 ^ $39; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $41 = $40 << 12; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $42 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $43 = HEAP32[$42>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $44 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $45 = HEAP32[$44>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $46 = $43 ^ $45; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $47 = $46 >>> 20; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $48 = $41 | $47; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $49 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$49>>2] = $48; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $50 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $51 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $52 = HEAP32[$51>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $53 = (($50) + ($52))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$x>>2] = $53; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $54 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $55 = HEAP32[$54>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $56 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $57 = $55 ^ $56; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $58 = $57 << 8; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $59 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $60 = HEAP32[$59>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $61 = HEAP32[$x>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $62 = $60 ^ $61; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $63 = $62 >>> 24; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $64 = $58 | $63; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $65 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$65>>2] = $64; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $66 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $67 = HEAP32[$66>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $68 = ((($x)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $69 = HEAP32[$68>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $70 = (($67) + ($69))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $71 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$71>>2] = $70; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $72 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $73 = HEAP32[$72>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $74 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $75 = HEAP32[$74>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $76 = $73 ^ $75; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $77 = $76 << 7; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $78 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $79 = HEAP32[$78>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $80 = ((($x)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $81 = HEAP32[$80>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $82 = $79 ^ $81; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $83 = $82 >>> 25; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $84 = $77 | $83; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $85 = ((($x)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$85>>2] = $84; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $86 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $87 = HEAP32[$86>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $88 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $89 = HEAP32[$88>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $90 = (($87) + ($89))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $91 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$91>>2] = $90; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $92 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $93 = HEAP32[$92>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $94 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $95 = HEAP32[$94>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $96 = $93 ^ $95; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $97 = $96 << 16; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $98 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $99 = HEAP32[$98>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $100 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $101 = HEAP32[$100>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $102 = $99 ^ $101; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $103 = $102 >>> 16; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $104 = $97 | $103; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $105 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$105>>2] = $104; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $106 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $107 = HEAP32[$106>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $108 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $109 = HEAP32[$108>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $110 = (($107) + ($109))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $111 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$111>>2] = $110; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $112 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $113 = HEAP32[$112>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $114 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $115 = HEAP32[$114>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $116 = $113 ^ $115; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $117 = $116 << 12; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $118 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $119 = HEAP32[$118>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $120 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $121 = HEAP32[$120>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $122 = $119 ^ $121; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $123 = $122 >>> 20; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $124 = $117 | $123; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $125 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$125>>2] = $124; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $126 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $127 = HEAP32[$126>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $128 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $129 = HEAP32[$128>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $130 = (($127) + ($129))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $131 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$131>>2] = $130; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $132 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $133 = HEAP32[$132>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $134 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $135 = HEAP32[$134>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $136 = $133 ^ $135; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $137 = $136 << 8; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $138 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $139 = HEAP32[$138>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $140 = ((($x)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $141 = HEAP32[$140>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $142 = $139 ^ $141; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $143 = $142 >>> 24; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $144 = $137 | $143; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $145 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$145>>2] = $144; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $146 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $147 = HEAP32[$146>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $148 = ((($x)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $149 = HEAP32[$148>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $150 = (($147) + ($149))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $151 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$151>>2] = $150; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $152 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $153 = HEAP32[$152>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $154 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $155 = HEAP32[$154>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $156 = $153 ^ $155; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $157 = $156 << 7; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $158 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $159 = HEAP32[$158>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $160 = ((($x)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $161 = HEAP32[$160>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $162 = $159 ^ $161; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $163 = $162 >>> 25; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $164 = $157 | $163; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $165 = ((($x)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$165>>2] = $164; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $166 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $167 = HEAP32[$166>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $168 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $169 = HEAP32[$168>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $170 = (($167) + ($169))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $171 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$171>>2] = $170; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $172 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $173 = HEAP32[$172>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $174 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $175 = HEAP32[$174>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $176 = $173 ^ $175; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $177 = $176 << 16; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $178 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $179 = HEAP32[$178>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $180 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $181 = HEAP32[$180>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $182 = $179 ^ $181; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $183 = $182 >>> 16; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $184 = $177 | $183; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $185 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$185>>2] = $184; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $186 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $187 = HEAP32[$186>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $188 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $189 = HEAP32[$188>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $190 = (($187) + ($189))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $191 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$191>>2] = $190; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $192 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $193 = HEAP32[$192>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $194 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $195 = HEAP32[$194>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $196 = $193 ^ $195; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $197 = $196 << 12; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $198 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $199 = HEAP32[$198>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $200 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $201 = HEAP32[$200>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $202 = $199 ^ $201; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $203 = $202 >>> 20; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $204 = $197 | $203; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $205 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$205>>2] = $204; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $206 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $207 = HEAP32[$206>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $208 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $209 = HEAP32[$208>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $210 = (($207) + ($209))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $211 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$211>>2] = $210; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $212 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $213 = HEAP32[$212>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $214 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $215 = HEAP32[$214>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $216 = $213 ^ $215; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $217 = $216 << 8; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $218 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $219 = HEAP32[$218>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $220 = ((($x)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $221 = HEAP32[$220>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $222 = $219 ^ $221; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $223 = $222 >>> 24; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $224 = $217 | $223; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $225 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$225>>2] = $224; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $226 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $227 = HEAP32[$226>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $228 = ((($x)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $229 = HEAP32[$228>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $230 = (($227) + ($229))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $231 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$231>>2] = $230; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $232 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $233 = HEAP32[$232>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $234 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $235 = HEAP32[$234>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $236 = $233 ^ $235; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $237 = $236 << 7; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $238 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $239 = HEAP32[$238>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $240 = ((($x)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $241 = HEAP32[$240>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $242 = $239 ^ $241; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $243 = $242 >>> 25; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $244 = $237 | $243; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $245 = ((($x)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$245>>2] = $244; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $246 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $247 = HEAP32[$246>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $248 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $249 = HEAP32[$248>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $250 = (($247) + ($249))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $251 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$251>>2] = $250; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $252 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $253 = HEAP32[$252>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $254 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $255 = HEAP32[$254>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $256 = $253 ^ $255; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $257 = $256 << 16; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $258 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $259 = HEAP32[$258>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $260 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $261 = HEAP32[$260>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $262 = $259 ^ $261; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $263 = $262 >>> 16; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $264 = $257 | $263; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $265 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$265>>2] = $264; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $266 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $267 = HEAP32[$266>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $268 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $269 = HEAP32[$268>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $270 = (($267) + ($269))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $271 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$271>>2] = $270; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $272 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $273 = HEAP32[$272>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $274 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $275 = HEAP32[$274>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $276 = $273 ^ $275; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $277 = $276 << 12; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $278 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $279 = HEAP32[$278>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $280 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $281 = HEAP32[$280>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $282 = $279 ^ $281; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $283 = $282 >>> 20; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $284 = $277 | $283; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $285 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$285>>2] = $284; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $286 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $287 = HEAP32[$286>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $288 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $289 = HEAP32[$288>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $290 = (($287) + ($289))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $291 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$291>>2] = $290; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $292 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $293 = HEAP32[$292>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $294 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $295 = HEAP32[$294>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $296 = $293 ^ $295; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $297 = $296 << 8; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $298 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $299 = HEAP32[$298>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $300 = ((($x)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $301 = HEAP32[$300>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $302 = $299 ^ $301; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $303 = $302 >>> 24; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $304 = $297 | $303; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $305 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$305>>2] = $304; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $306 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $307 = HEAP32[$306>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $308 = ((($x)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $309 = HEAP32[$308>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $310 = (($307) + ($309))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $311 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$311>>2] = $310; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $312 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $313 = HEAP32[$312>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $314 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $315 = HEAP32[$314>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $316 = $313 ^ $315; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $317 = $316 << 7; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $318 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $319 = HEAP32[$318>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $320 = ((($x)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $321 = HEAP32[$320>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $322 = $319 ^ $321; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $323 = $322 >>> 25; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $324 = $317 | $323; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $325 = ((($x)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$325>>2] = $324; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $326 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $327 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $328 = HEAP32[$327>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $329 = (($326) + ($328))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$x>>2] = $329; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $330 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $331 = HEAP32[$330>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $332 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $333 = $331 ^ $332; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $334 = $333 << 16; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $335 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $336 = HEAP32[$335>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $337 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $338 = $336 ^ $337; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $339 = $338 >>> 16; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $340 = $334 | $339; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $341 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$341>>2] = $340; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $342 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $343 = HEAP32[$342>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $344 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $345 = HEAP32[$344>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $346 = (($343) + ($345))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $347 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$347>>2] = $346; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $348 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $349 = HEAP32[$348>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $350 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $351 = HEAP32[$350>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $352 = $349 ^ $351; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $353 = $352 << 12; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $354 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $355 = HEAP32[$354>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $356 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $357 = HEAP32[$356>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $358 = $355 ^ $357; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $359 = $358 >>> 20; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $360 = $353 | $359; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $361 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$361>>2] = $360; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $362 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $363 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $364 = HEAP32[$363>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $365 = (($362) + ($364))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$x>>2] = $365; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $366 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $367 = HEAP32[$366>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $368 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $369 = $367 ^ $368; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $370 = $369 << 8; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $371 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $372 = HEAP32[$371>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $373 = HEAP32[$x>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $374 = $372 ^ $373; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $375 = $374 >>> 24; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $376 = $370 | $375; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $377 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$377>>2] = $376; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $378 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $379 = HEAP32[$378>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $380 = ((($x)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $381 = HEAP32[$380>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $382 = (($379) + ($381))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $383 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$383>>2] = $382; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $384 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $385 = HEAP32[$384>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $386 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $387 = HEAP32[$386>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $388 = $385 ^ $387; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $389 = $388 << 7; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $390 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $391 = HEAP32[$390>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $392 = ((($x)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $393 = HEAP32[$392>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $394 = $391 ^ $393; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $395 = $394 >>> 25; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $396 = $389 | $395; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $397 = ((($x)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$397>>2] = $396; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $398 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $399 = HEAP32[$398>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $400 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $401 = HEAP32[$400>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $402 = (($399) + ($401))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $403 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$403>>2] = $402; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $404 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $405 = HEAP32[$404>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $406 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $407 = HEAP32[$406>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $408 = $405 ^ $407; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $409 = $408 << 16; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $410 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $411 = HEAP32[$410>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $412 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $413 = HEAP32[$412>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $414 = $411 ^ $413; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $415 = $414 >>> 16; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $416 = $409 | $415; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $417 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$417>>2] = $416; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $418 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $419 = HEAP32[$418>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $420 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $421 = HEAP32[$420>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $422 = (($419) + ($421))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $423 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$423>>2] = $422; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $424 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $425 = HEAP32[$424>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $426 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $427 = HEAP32[$426>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $428 = $425 ^ $427; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $429 = $428 << 12; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $430 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $431 = HEAP32[$430>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $432 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $433 = HEAP32[$432>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $434 = $431 ^ $433; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $435 = $434 >>> 20; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $436 = $429 | $435; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $437 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$437>>2] = $436; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $438 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $439 = HEAP32[$438>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $440 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $441 = HEAP32[$440>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $442 = (($439) + ($441))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $443 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$443>>2] = $442; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $444 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $445 = HEAP32[$444>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $446 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $447 = HEAP32[$446>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $448 = $445 ^ $447; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $449 = $448 << 8; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $450 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $451 = HEAP32[$450>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $452 = ((($x)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $453 = HEAP32[$452>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $454 = $451 ^ $453; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $455 = $454 >>> 24; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $456 = $449 | $455; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $457 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$457>>2] = $456; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $458 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $459 = HEAP32[$458>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $460 = ((($x)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $461 = HEAP32[$460>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $462 = (($459) + ($461))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $463 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$463>>2] = $462; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $464 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $465 = HEAP32[$464>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $466 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $467 = HEAP32[$466>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $468 = $465 ^ $467; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $469 = $468 << 7; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $470 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $471 = HEAP32[$470>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $472 = ((($x)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $473 = HEAP32[$472>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $474 = $471 ^ $473; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $475 = $474 >>> 25; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $476 = $469 | $475; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $477 = ((($x)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$477>>2] = $476; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $478 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $479 = HEAP32[$478>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $480 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $481 = HEAP32[$480>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $482 = (($479) + ($481))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $483 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$483>>2] = $482; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $484 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $485 = HEAP32[$484>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $486 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $487 = HEAP32[$486>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $488 = $485 ^ $487; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $489 = $488 << 16; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $490 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $491 = HEAP32[$490>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $492 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $493 = HEAP32[$492>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $494 = $491 ^ $493; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $495 = $494 >>> 16; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $496 = $489 | $495; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $497 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$497>>2] = $496; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $498 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $499 = HEAP32[$498>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $500 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $501 = HEAP32[$500>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $502 = (($499) + ($501))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $503 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$503>>2] = $502; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $504 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $505 = HEAP32[$504>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $506 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $507 = HEAP32[$506>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $508 = $505 ^ $507; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $509 = $508 << 12; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $510 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $511 = HEAP32[$510>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $512 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $513 = HEAP32[$512>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $514 = $511 ^ $513; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $515 = $514 >>> 20; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $516 = $509 | $515; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $517 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$517>>2] = $516; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $518 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $519 = HEAP32[$518>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $520 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $521 = HEAP32[$520>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $522 = (($519) + ($521))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $523 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$523>>2] = $522; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $524 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $525 = HEAP32[$524>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $526 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $527 = HEAP32[$526>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $528 = $525 ^ $527; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $529 = $528 << 8; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $530 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $531 = HEAP32[$530>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $532 = ((($x)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $533 = HEAP32[$532>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $534 = $531 ^ $533; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $535 = $534 >>> 24; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $536 = $529 | $535; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $537 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$537>>2] = $536; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $538 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $539 = HEAP32[$538>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $540 = ((($x)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $541 = HEAP32[$540>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $542 = (($539) + ($541))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $543 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$543>>2] = $542; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $544 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $545 = HEAP32[$544>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $546 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $547 = HEAP32[$546>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $548 = $545 ^ $547; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $549 = $548 << 7; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $550 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $551 = HEAP32[$550>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $552 = ((($x)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $553 = HEAP32[$552>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $554 = $551 ^ $553; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $555 = $554 >>> 25; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $556 = $549 | $555; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $557 = ((($x)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$557>>2] = $556; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $558 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $559 = HEAP32[$558>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $560 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $561 = HEAP32[$560>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $562 = (($559) + ($561))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $563 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$563>>2] = $562; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $564 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $565 = HEAP32[$564>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $566 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $567 = HEAP32[$566>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $568 = $565 ^ $567; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $569 = $568 << 16; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $570 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $571 = HEAP32[$570>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $572 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $573 = HEAP32[$572>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $574 = $571 ^ $573; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $575 = $574 >>> 16; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $576 = $569 | $575; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $577 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$577>>2] = $576; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $578 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $579 = HEAP32[$578>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $580 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $581 = HEAP32[$580>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $582 = (($579) + ($581))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $583 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$583>>2] = $582; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $584 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $585 = HEAP32[$584>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $586 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $587 = HEAP32[$586>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $588 = $585 ^ $587; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $589 = $588 << 12; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $590 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $591 = HEAP32[$590>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $592 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $593 = HEAP32[$592>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $594 = $591 ^ $593; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $595 = $594 >>> 20; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $596 = $589 | $595; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $597 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$597>>2] = $596; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $598 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $599 = HEAP32[$598>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $600 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $601 = HEAP32[$600>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $602 = (($599) + ($601))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $603 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$603>>2] = $602; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $604 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $605 = HEAP32[$604>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $606 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $607 = HEAP32[$606>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $608 = $605 ^ $607; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $609 = $608 << 8; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $610 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $611 = HEAP32[$610>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $612 = ((($x)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $613 = HEAP32[$612>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $614 = $611 ^ $613; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $615 = $614 >>> 24; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $616 = $609 | $615; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $617 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$617>>2] = $616; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $618 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $619 = HEAP32[$618>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $620 = ((($x)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $621 = HEAP32[$620>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $622 = (($619) + ($621))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $623 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$623>>2] = $622; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $624 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $625 = HEAP32[$624>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $626 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $627 = HEAP32[$626>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $628 = $625 ^ $627; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $629 = $628 << 7; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $630 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $631 = HEAP32[$630>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $632 = ((($x)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $633 = HEAP32[$632>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $634 = $631 ^ $633; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $635 = $634 >>> 25; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $636 = $629 | $635; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $637 = ((($x)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$637>>2] = $636; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $638 = $i; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $639 = (($638) - 2)|0; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = $639; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $i = 0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $640 = $i; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $641 = ($640|0)<(16); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($641)) {
   break;
  }
  $642 = $i; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $643 = (($x) + ($642<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $644 = HEAP32[$643>>2]|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $645 = $i; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $646 = $1; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $647 = (($646) + ($645<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $648 = HEAP32[$647>>2]|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $649 = (($644) + ($648))|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $650 = $i; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $651 = (($x) + ($650<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$651>>2] = $649; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $652 = $i; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $653 = (($652) + 1)|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = $653; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $i = 0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $654 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $655 = ($654|0)<(16); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($655)) {
   break;
  }
  $656 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $657 = (($x) + ($656<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $658 = HEAP32[$657>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $659 = $658&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $660 = $659&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $661 = $660 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $662 = $661&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $663 = $0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $664 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $665 = $664<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $666 = (($663) + ($665)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$666>>0] = $662; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $667 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $668 = (($x) + ($667<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $669 = HEAP32[$668>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $670 = $669 >>> 8; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $671 = $670&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $672 = $671&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $673 = $672 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $674 = $673&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $675 = $0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $676 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $677 = $676<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $678 = (($675) + ($677)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $679 = ((($678)) + 1|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$679>>0] = $674; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $680 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $681 = (($x) + ($680<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $682 = HEAP32[$681>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $683 = $682 >>> 16; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $684 = $683&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $685 = $684&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $686 = $685 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $687 = $686&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $688 = $0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $689 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $690 = $689<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $691 = (($688) + ($690)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $692 = ((($691)) + 2|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$692>>0] = $687; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $693 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $694 = (($x) + ($693<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $695 = HEAP32[$694>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $696 = $695 >>> 24; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $697 = $696&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $698 = $697&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $699 = $698 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $700 = $699&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $701 = $0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $702 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $703 = $702<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $704 = (($701) + ($703)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $705 = ((($704)) + 3|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$705>>0] = $700; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $706 = $i; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $707 = (($706) + 1)|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $i = $707; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 STACKTOP = sp;return; //@line 38 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _varlen_hash($out,$in,$0,$1) {
 $out = $out|0;
 $in = $in|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $2 = $out;
 $3 = $in;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = $2; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $10 = $3; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $11 = $4; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $12 = $11; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $13 = HEAP32[$12>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $14 = (($11) + 4)|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $15 = $14; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $16 = HEAP32[$15>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 (_crypto_hash_blake256_ref($9,$10,$13,$16)|0); //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 14 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _msg_hash($out,$in,$0,$1) {
 $out = $out|0;
 $in = $in|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $2 = $out;
 $3 = $in;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = $2; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $10 = $3; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $11 = $4; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $12 = $11; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $13 = HEAP32[$12>>2]|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $14 = (($11) + 4)|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $15 = $14; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $16 = HEAP32[$15>>2]|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 (_crypto_hash_blake512_ref($9,$10,$13,$16)|0); //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 21 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_2n_n($out,$in) {
 $out = $out|0;
 $in = $in|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $x = sp + 16|0;
 $0 = $out;
 $1 = $in;
 $i = 0; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $2 = $i; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $3 = ($2|0)<(32); //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $1; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $6 = (($5) + ($4)|0); //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = HEAP8[$6>>0]|0; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $8 = $i; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = (($x) + ($8)|0); //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$9>>0] = $7; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = $i; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = HEAP32[200>>2]|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $i; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = (($14) + 32)|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = (($x) + ($15)|0); //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$16>>0] = $13; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = $i; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = (($17) + 1)|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $18; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($x,$x); //@line 40 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $i = 0; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $19 = $i; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = ($19|0)<(32); //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($20)) {
   break;
  }
  $21 = $i; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = (($x) + ($21)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $23 = HEAP8[$22>>0]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = $23&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $25 = $i; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $26 = (($25) + 32)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $27 = $1; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $28 = (($27) + ($26)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $29 = HEAP8[$28>>0]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $30 = $29&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $31 = $24 ^ $30; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $32 = $31&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $33 = $i; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $34 = (($x) + ($33)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$34>>0] = $32; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $35 = $i; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $36 = (($35) + 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $36; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($x,$x); //@line 43 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $i = 0; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $37 = $i; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $38 = ($37|0)<(32); //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($38)) {
   break;
  }
  $39 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $40 = (($x) + ($39)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $41 = HEAP8[$40>>0]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $42 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $43 = $0; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $44 = (($43) + ($42)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$44>>0] = $41; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $45 = $i; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $46 = (($45) + 1)|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $46; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 STACKTOP = sp;return 0; //@line 47 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_2n_n_mask($out,$in,$mask) {
 $out = $out|0;
 $in = $in|0;
 $mask = $mask|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $buf = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $buf = sp + 16|0;
 $0 = $out;
 $1 = $in;
 $2 = $mask;
 $i = 0; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $3 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $4 = ($3|0)<(64); //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($4)) {
   break;
  }
  $5 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $6 = $1; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = (($6) + ($5)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $8 = HEAP8[$7>>0]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = $8&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = $2; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $13&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = $9 ^ $14; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = $15&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = (($buf) + ($17)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$18>>0] = $16; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = (($19) + 1)|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $20; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 $21 = $0; //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $22 = (_hash_2n_n($21,$buf)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return ($22|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_n_n($out,$in) {
 $out = $out|0;
 $in = $in|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $x = sp + 16|0;
 $0 = $out;
 $1 = $in;
 $i = 0; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $2 = $i; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $3 = ($2|0)<(32); //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $1; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $6 = (($5) + ($4)|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = HEAP8[$6>>0]|0; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $8 = $i; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = (($x) + ($8)|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$9>>0] = $7; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = $i; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = HEAP32[200>>2]|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $i; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = (($14) + 32)|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = (($x) + ($15)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$16>>0] = $13; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = $i; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = (($17) + 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $18; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($x,$x); //@line 73 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $i = 0; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $19 = $i; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = ($19|0)<(32); //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($20)) {
   break;
  }
  $21 = $i; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = (($x) + ($21)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $23 = HEAP8[$22>>0]|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = $i; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $25 = $0; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $26 = (($25) + ($24)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$26>>0] = $23; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $27 = $i; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $28 = (($27) + 1)|0; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $28; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 STACKTOP = sp;return 0; //@line 77 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_n_n_mask($out,$in,$mask) {
 $out = $out|0;
 $in = $in|0;
 $mask = $mask|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $buf = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $buf = sp + 16|0;
 $0 = $out;
 $1 = $in;
 $2 = $mask;
 $i = 0; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $3 = $i; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $4 = ($3|0)<(32); //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($4)) {
   break;
  }
  $5 = $i; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $6 = $1; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = (($6) + ($5)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $8 = HEAP8[$7>>0]|0; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = $8&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = $i; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = $2; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $13&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = $9 ^ $14; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = $15&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = $i; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = (($buf) + ($17)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$18>>0] = $16; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = $i; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = (($19) + 1)|0; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $i = $20; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 $21 = $0; //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $22 = (_hash_n_n($21,$buf)|0); //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return ($22|0); //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _horst_sign($sig,$pk,$sigbytes,$m,$0,$1,$seed,$masks,$m_hash) {
 $sig = $sig|0;
 $pk = $pk|0;
 $sigbytes = $sigbytes|0;
 $m = $m|0;
 $0 = $0|0;
 $1 = $1|0;
 $seed = $seed|0;
 $masks = $masks|0;
 $m_hash = $m_hash|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $idx = 0;
 var $j = 0, $k = 0, $offset_in = 0, $offset_out = 0, $sigpos = 0, $sk = 0, $tree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 6291504|0;
 $6 = sp + 16|0;
 $sk = sp + 4194344|0;
 $tree = sp + 72|0;
 $offset_in = sp + 8|0;
 $offset_out = sp;
 $2 = $sig;
 $3 = $pk;
 $4 = $sigbytes;
 $5 = $m;
 $10 = $6;
 $11 = $10;
 HEAP32[$11>>2] = $0;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $1;
 $7 = $seed;
 $8 = $masks;
 $9 = $m_hash;
 $sigpos = 0; //@line 22 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $14 = $7; //@line 26 "c_src/crypto_sign/sphincs256/ref/horst.c"
 _expand_seed($sk,$14); //@line 26 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $i = 0; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $15 = $i; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $16 = ($15|0)<(65536); //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($16)) {
   break;
  }
  $17 = $i; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = (65535 + ($17))|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $18<<5; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $20 = (($tree) + ($19)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $21 = $i; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $22 = $21<<5; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $23 = (($sk) + ($22)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_n_n($20,$23)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $24 = $i; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $25 = (($24) + 1)|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $i = $25; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $i = 0; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $26 = $i; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $27 = ($26|0)<(16); //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($27)) {
   break;
  }
  $28 = $i; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $29 = (16 - ($28))|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $30 = 1 << $29; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $31 = (($30) - 1)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $32 = ($31|0)<(0); //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $33 = $32 << 31 >> 31; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $34 = $offset_in; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $35 = $34; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$35>>2] = $31; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $36 = (($34) + 4)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $37 = $36; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$37>>2] = $33; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $38 = $i; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $39 = (16 - ($38))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $40 = (($39) - 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $41 = 1 << $40; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $42 = (($41) - 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $43 = ($42|0)<(0); //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $44 = $43 << 31 >> 31; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $45 = $offset_out; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $46 = $45; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$46>>2] = $42; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $47 = (($45) + 4)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $48 = $47; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$48>>2] = $44; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = 0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $49 = $j; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $50 = $i; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $51 = (16 - ($50))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $52 = (($51) - 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $53 = 1 << $52; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $54 = ($49|0)<($53|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($54)) {
    break;
   }
   $55 = $offset_out; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $56 = $55; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $57 = HEAP32[$56>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $58 = (($55) + 4)|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $59 = $58; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $60 = HEAP32[$59>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $61 = $j; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $62 = ($61|0)<(0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $63 = $62 << 31 >> 31; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $64 = (_i64Add(($57|0),($60|0),($61|0),($63|0))|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $65 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $66 = (___muldi3(($64|0),($65|0),32,0)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $67 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $68 = (($tree) + ($66)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $69 = $offset_in; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $70 = $69; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $71 = HEAP32[$70>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $72 = (($69) + 4)|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $73 = $72; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $74 = HEAP32[$73>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $75 = $j; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $76 = $75<<1; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $77 = ($76|0)<(0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $78 = $77 << 31 >> 31; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $79 = (_i64Add(($71|0),($74|0),($76|0),($78|0))|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $80 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $81 = (___muldi3(($79|0),($80|0),32,0)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $82 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $83 = (($tree) + ($81)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $84 = $8; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $85 = $i; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $86 = $85<<1; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $87 = $86<<5; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $88 = (($84) + ($87)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   (_hash_2n_n_mask($68,$83,$88)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $89 = $j; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $90 = (($89) + 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $j = $90; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $91 = $i; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $92 = (($91) + 1)|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $i = $92; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 2016; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $93 = $j; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $94 = ($93|0)<(4064); //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($94)) {
   break;
  }
  $95 = $j; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $96 = (($tree) + ($95)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $97 = HEAP8[$96>>0]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $98 = $sigpos; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $99 = (($98) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $sigpos = $99; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $100 = $2; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $101 = (($100) + ($98)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP8[$101>>0] = $97; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $102 = $j; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $103 = (($102) + 1)|0; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $103; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $i = 0; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $104 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $105 = ($104|0)<(32); //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($105)) {
   break;
  }
  $106 = $i; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $107 = $106<<1; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $108 = $9; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $109 = (($108) + ($107)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $110 = HEAP8[$109>>0]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $111 = $110&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $112 = $i; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $113 = $112<<1; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $114 = (($113) + 1)|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $115 = $9; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $116 = (($115) + ($114)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $117 = HEAP8[$116>>0]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $118 = $117&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $119 = $118 << 8; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $120 = (($111) + ($119))|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $idx = $120; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $k = 0; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $121 = $k; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $122 = ($121|0)<(32); //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $123 = $idx; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($122)) {
    break;
   }
   $124 = $123<<5; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $125 = $k; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $126 = (($124) + ($125))|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $127 = (($sk) + ($126)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $128 = HEAP8[$127>>0]|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $129 = $sigpos; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $130 = (($129) + 1)|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $sigpos = $130; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $131 = $2; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $132 = (($131) + ($129)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   HEAP8[$132>>0] = $128; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $133 = $k; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $134 = (($133) + 1)|0; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $k = $134; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $135 = (($123) + 65535)|0; //@line 62 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $idx = $135; //@line 62 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = 0; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $136 = $j; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $137 = ($136|0)<(10); //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($137)) {
    break;
   }
   $138 = $idx; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $139 = $138 & 1; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $140 = ($139|0)!=(0); //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $141 = $idx; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $142 = (($141) + 1)|0; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $143 = (($141) - 1)|0; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $144 = $140 ? $142 : $143; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $idx = $144; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $k = 0; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
   while(1) {
    $145 = $k; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $146 = ($145|0)<(32); //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $147 = $idx; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    if (!($146)) {
     break;
    }
    $148 = $147<<5; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $149 = $k; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $150 = (($148) + ($149))|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $151 = (($tree) + ($150)|0); //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $152 = HEAP8[$151>>0]|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $153 = $sigpos; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $154 = (($153) + 1)|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $sigpos = $154; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $155 = $2; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $156 = (($155) + ($153)|0); //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    HEAP8[$156>>0] = $152; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $157 = $k; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $158 = (($157) + 1)|0; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $k = $158; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
   }
   $159 = (($147) - 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $160 = (($159>>>0) / 2)&-1; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $idx = $160; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $161 = $j; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $162 = (($161) + 1)|0; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $j = $162; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $163 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $164 = (($163) + 1)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $i = $164; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $i = 0; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $165 = $i; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $166 = ($165|0)<(32); //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($166)) {
   break;
  }
  $167 = $i; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $168 = (($tree) + ($167)|0); //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $169 = HEAP8[$168>>0]|0; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $170 = $i; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $171 = $3; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $172 = (($171) + ($170)|0); //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP8[$172>>0] = $169; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $173 = $i; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $174 = (($173) + 1)|0; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $i = $174; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $175 = $4; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $176 = $175; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $177 = $176; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 HEAP32[$177>>2] = 13312; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $178 = (($176) + 4)|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $179 = $178; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 HEAP32[$179>>2] = 0; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return 0; //@line 76 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _horst_verify($pk,$sig,$m,$0,$1,$masks,$m_hash) {
 $pk = $pk|0;
 $sig = $sig|0;
 $m = $m|0;
 $0 = $0|0;
 $1 = $1|0;
 $masks = $masks|0;
 $m_hash = $m_hash|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $buffer = 0, $i = 0, $idx = 0, $j = 0, $k = 0, $level10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0;
 $6 = sp;
 $buffer = sp + 56|0;
 $3 = $pk;
 $4 = $sig;
 $5 = $m;
 $9 = $6;
 $10 = $9;
 HEAP32[$10>>2] = $0;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $1;
 $7 = $masks;
 $8 = $m_hash;
 $13 = $4; //@line 90 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $level10 = $13; //@line 90 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $14 = $4; //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $15 = ((($14)) + 2048|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $4 = $15; //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $i = 0; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
 L1: while(1) {
  $16 = $i; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $17 = ($16|0)<(32); //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($17)) {
   break;
  }
  $18 = $i; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $18<<1; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $20 = $8; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $21 = (($20) + ($19)|0); //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $22 = HEAP8[$21>>0]|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $23 = $22&255; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $24 = $i; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $25 = $24<<1; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $26 = (($25) + 1)|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $27 = $8; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $28 = (($27) + ($26)|0); //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $29 = HEAP8[$28>>0]|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $30 = $29&255; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $31 = $30 << 8; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $32 = (($23) + ($31))|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $idx = $32; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $33 = $idx; //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $34 = $33 & 1; //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $35 = ($34|0)!=(0); //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  L4: do {
   if ($35) {
    $49 = ((($buffer)) + 32|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $50 = $4; //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    (_hash_n_n($49,$50)|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $k = 0; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
    while(1) {
     $51 = $k; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $52 = ($51|0)<(32); //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     if (!($52)) {
      break L4;
     }
     $53 = $k; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $54 = (32 + ($53))|0; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $55 = $4; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $56 = (($55) + ($54)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $57 = HEAP8[$56>>0]|0; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $58 = $k; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $59 = (($buffer) + ($58)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     HEAP8[$59>>0] = $57; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $60 = $k; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $61 = (($60) + 1)|0; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $k = $61; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
    }
   } else {
    $36 = $4; //@line 103 "c_src/crypto_sign/sphincs256/ref/horst.c"
    (_hash_n_n($buffer,$36)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $k = 0; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
    while(1) {
     $37 = $k; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $38 = ($37|0)<(32); //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     if (!($38)) {
      break L4;
     }
     $39 = $k; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $40 = (32 + ($39))|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $41 = $4; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $42 = (($41) + ($40)|0); //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $43 = HEAP8[$42>>0]|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $44 = $k; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $45 = (32 + ($44))|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $46 = (($buffer) + ($45)|0); //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     HEAP8[$46>>0] = $43; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $47 = $k; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $48 = (($47) + 1)|0; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $k = $48; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
    }
   }
  } while(0);
  $62 = $4; //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $63 = ((($62)) + 64|0); //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $4 = $63; //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = 1; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $64 = $j; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $65 = ($64|0)<(10); //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $66 = $idx; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $67 = $66 >>> 1; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $idx = $67; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($65)) {
    break;
   }
   $68 = $idx; //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $69 = $68 & 1; //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $70 = ($69|0)!=(0); //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   L17: do {
    if ($70) {
     $88 = ((($buffer)) + 32|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $89 = $7; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $90 = $j; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $91 = (($90) - 1)|0; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $92 = $91<<1; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $93 = $92<<5; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $94 = (($89) + ($93)|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     (_hash_2n_n_mask($88,$buffer,$94)|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $k = 0; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
     while(1) {
      $95 = $k; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $96 = ($95|0)<(32); //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      if (!($96)) {
       break L17;
      }
      $97 = $k; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $98 = $4; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $99 = (($98) + ($97)|0); //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $100 = HEAP8[$99>>0]|0; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $101 = $k; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $102 = (($buffer) + ($101)|0); //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      HEAP8[$102>>0] = $100; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $103 = $k; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $104 = (($103) + 1)|0; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $k = $104; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
     }
    } else {
     $71 = $7; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $72 = $j; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $73 = (($72) - 1)|0; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $74 = $73<<1; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $75 = $74<<5; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $76 = (($71) + ($75)|0); //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     (_hash_2n_n_mask($buffer,$buffer,$76)|0); //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $k = 0; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
     while(1) {
      $77 = $k; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $78 = ($77|0)<(32); //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      if (!($78)) {
       break L17;
      }
      $79 = $k; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $80 = $4; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $81 = (($80) + ($79)|0); //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $82 = HEAP8[$81>>0]|0; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $83 = $k; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $84 = (32 + ($83))|0; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $85 = (($buffer) + ($84)|0); //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      HEAP8[$85>>0] = $82; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $86 = $k; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $87 = (($86) + 1)|0; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $k = $87; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
     }
    }
   } while(0);
   $105 = $4; //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $106 = ((($105)) + 32|0); //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $4 = $106; //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $107 = $j; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $108 = (($107) + 1)|0; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $j = $108; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $109 = $7; //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $110 = ((($109)) + 576|0); //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($buffer,$buffer,$110)|0); //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $k = 0; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $111 = $k; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $112 = ($111|0)<(32); //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($112)) {
    break;
   }
   $113 = $idx; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $114 = $113<<5; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $115 = $k; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $116 = (($114) + ($115))|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $117 = $level10; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $118 = (($117) + ($116)|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $119 = HEAP8[$118>>0]|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $120 = $119&255; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $121 = $k; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $122 = (($buffer) + ($121)|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $123 = HEAP8[$122>>0]|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $124 = $123&255; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $125 = ($120|0)!=($124|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if ($125) {
    label = 41;
    break L1;
   }
   $126 = $k; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $127 = (($126) + 1)|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $k = $127; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $128 = $i; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $129 = (($128) + 1)|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $i = $129; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 if ((label|0) == 41) {
  $k = 0; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $199 = $k; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $200 = ($199|0)<(32); //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($200)) {
    break;
   }
   $201 = $k; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $202 = $3; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $203 = (($202) + ($201)|0); //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   HEAP8[$203>>0] = 0; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $204 = $k; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $205 = (($204) + 1)|0; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $k = $205; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $2 = -1; //@line 166 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $206 = $2; //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
  STACKTOP = sp;return ($206|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 0; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $130 = $j; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $131 = ($130|0)<(32); //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($131)) {
   break;
  }
  $132 = $j; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $133 = $132<<5; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $134 = (($buffer) + ($133)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $135 = $level10; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $136 = $j; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $137 = $136<<1; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $138 = $137<<5; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $139 = (($135) + ($138)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $140 = $7; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $141 = ((($140)) + 640|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($134,$139,$141)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $142 = $j; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $143 = (($142) + 1)|0; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $143; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 0; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $144 = $j; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $145 = ($144|0)<(16); //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($145)) {
   break;
  }
  $146 = $j; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $147 = $146<<5; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $148 = (($buffer) + ($147)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $149 = $j; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $150 = $149<<1; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $151 = $150<<5; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $152 = (($buffer) + ($151)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $153 = $7; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $154 = ((($153)) + 704|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($148,$152,$154)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $155 = $j; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $156 = (($155) + 1)|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $156; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 0; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $157 = $j; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $158 = ($157|0)<(8); //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($158)) {
   break;
  }
  $159 = $j; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $160 = $159<<5; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $161 = (($buffer) + ($160)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $162 = $j; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $163 = $162<<1; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $164 = $163<<5; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $165 = (($buffer) + ($164)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $166 = $7; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $167 = ((($166)) + 768|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($161,$165,$167)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $168 = $j; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $169 = (($168) + 1)|0; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $169; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 0; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $170 = $j; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $171 = ($170|0)<(4); //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($171)) {
   break;
  }
  $172 = $j; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $173 = $172<<5; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $174 = (($buffer) + ($173)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $175 = $j; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $176 = $175<<1; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $177 = $176<<5; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $178 = (($buffer) + ($177)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $179 = $7; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $180 = ((($179)) + 832|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($174,$178,$180)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $181 = $j; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $182 = (($181) + 1)|0; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $182; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $j = 0; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $183 = $j; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $184 = ($183|0)<(2); //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($184)) {
   break;
  }
  $185 = $j; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $186 = $185<<5; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $187 = (($buffer) + ($186)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $188 = $j; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $189 = $188<<1; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $190 = $189<<5; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $191 = (($buffer) + ($190)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $192 = $7; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $193 = ((($192)) + 896|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($187,$191,$193)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $194 = $j; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $195 = (($194) + 1)|0; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $j = $195; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $196 = $3; //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $197 = $7; //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $198 = ((($197)) + 960|0); //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 (_hash_2n_n_mask($196,$buffer,$198)|0); //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $2 = 0; //@line 160 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $206 = $2; //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return ($206|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _expand_seed($outseeds,$inseed) {
 $outseeds = $outseeds|0;
 $inseed = $inseed|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $outseeds;
 $1 = $inseed;
 $2 = $0; //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $3 = $1; //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 _prg($2,2097152,0,$3); //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return; //@line 11 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _chacha_permute($out,$in) {
 $out = $out|0;
 $in = $in|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $x = sp + 8|0;
 $0 = $out;
 $1 = $in;
 $i = 0; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $2 = $i; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $3 = ($2|0)<(16); //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $5 = $4<<2; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $6 = (($5) + 3)|0; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $7 = $1; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $8 = (($7) + ($6)|0); //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $9 = HEAP8[$8>>0]|0; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $10 = $9&255; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $11 = $i; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $12 = (($x) + ($11<<2)|0); //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$12>>2] = $10; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $13 = $i; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $14 = (($x) + ($13<<2)|0); //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $15 = HEAP32[$14>>2]|0; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $16 = $15 << 8; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$14>>2] = $16; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $17 = $i; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $18 = $17<<2; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $19 = (($18) + 2)|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $20 = $1; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $21 = (($20) + ($19)|0); //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $22 = HEAP8[$21>>0]|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $23 = $22&255; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $24 = $i; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $25 = (($x) + ($24<<2)|0); //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $26 = HEAP32[$25>>2]|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $27 = $26 | $23; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$25>>2] = $27; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $28 = $i; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $29 = (($x) + ($28<<2)|0); //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $30 = HEAP32[$29>>2]|0; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $31 = $30 << 8; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$29>>2] = $31; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $32 = $i; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $33 = $32<<2; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $34 = (($33) + 1)|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $35 = $1; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $36 = (($35) + ($34)|0); //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $37 = HEAP8[$36>>0]|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $38 = $37&255; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $39 = $i; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $40 = (($x) + ($39<<2)|0); //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $41 = HEAP32[$40>>2]|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $42 = $41 | $38; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$40>>2] = $42; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $43 = $i; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $44 = (($x) + ($43<<2)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $45 = HEAP32[$44>>2]|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $46 = $45 << 8; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$44>>2] = $46; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $47 = $i; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $48 = $47<<2; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $49 = (($48) + 0)|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $50 = $1; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $51 = (($50) + ($49)|0); //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $52 = HEAP8[$51>>0]|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $53 = $52&255; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $54 = $i; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $55 = (($x) + ($54<<2)|0); //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $56 = HEAP32[$55>>2]|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $57 = $56 | $53; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$55>>2] = $57; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $58 = $i; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $59 = (($58) + 1)|0; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $i = $59; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 $i = 12; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $60 = $i; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $61 = ($60|0)>(0); //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($61)) {
   break;
  }
  $62 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $63 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $64 = HEAP32[$63>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $65 = (($62) + ($64))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$x>>2] = $65; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $66 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $67 = HEAP32[$66>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $68 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $69 = $67 ^ $68; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $70 = $69 << 16; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $71 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $72 = HEAP32[$71>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $73 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $74 = $72 ^ $73; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $75 = $74 >>> 16; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $76 = $70 | $75; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $77 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$77>>2] = $76; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $78 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $79 = HEAP32[$78>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $80 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $81 = HEAP32[$80>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $82 = (($79) + ($81))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $83 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$83>>2] = $82; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $84 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $85 = HEAP32[$84>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $86 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $87 = HEAP32[$86>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $88 = $85 ^ $87; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $89 = $88 << 12; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $90 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $91 = HEAP32[$90>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $92 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $93 = HEAP32[$92>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $94 = $91 ^ $93; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $95 = $94 >>> 20; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $96 = $89 | $95; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $97 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$97>>2] = $96; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $98 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $99 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $100 = HEAP32[$99>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $101 = (($98) + ($100))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$x>>2] = $101; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $102 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $103 = HEAP32[$102>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $104 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $105 = $103 ^ $104; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $106 = $105 << 8; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $107 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $108 = HEAP32[$107>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $109 = HEAP32[$x>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $110 = $108 ^ $109; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $111 = $110 >>> 24; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $112 = $106 | $111; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $113 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$113>>2] = $112; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $114 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $115 = HEAP32[$114>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $116 = ((($x)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $117 = HEAP32[$116>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $118 = (($115) + ($117))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $119 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$119>>2] = $118; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $120 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $121 = HEAP32[$120>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $122 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $123 = HEAP32[$122>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $124 = $121 ^ $123; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $125 = $124 << 7; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $126 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $127 = HEAP32[$126>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $128 = ((($x)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $129 = HEAP32[$128>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $130 = $127 ^ $129; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $131 = $130 >>> 25; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $132 = $125 | $131; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $133 = ((($x)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$133>>2] = $132; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $134 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $135 = HEAP32[$134>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $136 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $137 = HEAP32[$136>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $138 = (($135) + ($137))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $139 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$139>>2] = $138; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $140 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $141 = HEAP32[$140>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $142 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $143 = HEAP32[$142>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $144 = $141 ^ $143; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $145 = $144 << 16; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $146 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $147 = HEAP32[$146>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $148 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $149 = HEAP32[$148>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $150 = $147 ^ $149; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $151 = $150 >>> 16; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $152 = $145 | $151; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $153 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$153>>2] = $152; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $154 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $155 = HEAP32[$154>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $156 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $157 = HEAP32[$156>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $158 = (($155) + ($157))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $159 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$159>>2] = $158; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $160 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $161 = HEAP32[$160>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $162 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $163 = HEAP32[$162>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $164 = $161 ^ $163; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $165 = $164 << 12; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $166 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $167 = HEAP32[$166>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $168 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $169 = HEAP32[$168>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $170 = $167 ^ $169; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $171 = $170 >>> 20; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $172 = $165 | $171; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $173 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$173>>2] = $172; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $174 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $175 = HEAP32[$174>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $176 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $177 = HEAP32[$176>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $178 = (($175) + ($177))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $179 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$179>>2] = $178; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $180 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $181 = HEAP32[$180>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $182 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $183 = HEAP32[$182>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $184 = $181 ^ $183; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $185 = $184 << 8; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $186 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $187 = HEAP32[$186>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $188 = ((($x)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $189 = HEAP32[$188>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $190 = $187 ^ $189; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $191 = $190 >>> 24; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $192 = $185 | $191; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $193 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$193>>2] = $192; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $194 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $195 = HEAP32[$194>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $196 = ((($x)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $197 = HEAP32[$196>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $198 = (($195) + ($197))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $199 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$199>>2] = $198; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $200 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $201 = HEAP32[$200>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $202 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $203 = HEAP32[$202>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $204 = $201 ^ $203; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $205 = $204 << 7; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $206 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $207 = HEAP32[$206>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $208 = ((($x)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $209 = HEAP32[$208>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $210 = $207 ^ $209; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $211 = $210 >>> 25; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $212 = $205 | $211; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $213 = ((($x)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$213>>2] = $212; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $214 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $215 = HEAP32[$214>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $216 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $217 = HEAP32[$216>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $218 = (($215) + ($217))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $219 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$219>>2] = $218; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $220 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $221 = HEAP32[$220>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $222 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $223 = HEAP32[$222>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $224 = $221 ^ $223; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $225 = $224 << 16; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $226 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $227 = HEAP32[$226>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $228 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $229 = HEAP32[$228>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $230 = $227 ^ $229; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $231 = $230 >>> 16; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $232 = $225 | $231; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $233 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$233>>2] = $232; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $234 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $235 = HEAP32[$234>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $236 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $237 = HEAP32[$236>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $238 = (($235) + ($237))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $239 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$239>>2] = $238; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $240 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $241 = HEAP32[$240>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $242 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $243 = HEAP32[$242>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $244 = $241 ^ $243; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $245 = $244 << 12; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $246 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $247 = HEAP32[$246>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $248 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $249 = HEAP32[$248>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $250 = $247 ^ $249; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $251 = $250 >>> 20; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $252 = $245 | $251; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $253 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$253>>2] = $252; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $254 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $255 = HEAP32[$254>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $256 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $257 = HEAP32[$256>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $258 = (($255) + ($257))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $259 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$259>>2] = $258; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $260 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $261 = HEAP32[$260>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $262 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $263 = HEAP32[$262>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $264 = $261 ^ $263; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $265 = $264 << 8; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $266 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $267 = HEAP32[$266>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $268 = ((($x)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $269 = HEAP32[$268>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $270 = $267 ^ $269; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $271 = $270 >>> 24; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $272 = $265 | $271; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $273 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$273>>2] = $272; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $274 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $275 = HEAP32[$274>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $276 = ((($x)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $277 = HEAP32[$276>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $278 = (($275) + ($277))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $279 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$279>>2] = $278; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $280 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $281 = HEAP32[$280>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $282 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $283 = HEAP32[$282>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $284 = $281 ^ $283; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $285 = $284 << 7; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $286 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $287 = HEAP32[$286>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $288 = ((($x)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $289 = HEAP32[$288>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $290 = $287 ^ $289; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $291 = $290 >>> 25; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $292 = $285 | $291; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $293 = ((($x)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$293>>2] = $292; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $294 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $295 = HEAP32[$294>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $296 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $297 = HEAP32[$296>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $298 = (($295) + ($297))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $299 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$299>>2] = $298; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $300 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $301 = HEAP32[$300>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $302 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $303 = HEAP32[$302>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $304 = $301 ^ $303; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $305 = $304 << 16; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $306 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $307 = HEAP32[$306>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $308 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $309 = HEAP32[$308>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $310 = $307 ^ $309; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $311 = $310 >>> 16; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $312 = $305 | $311; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $313 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$313>>2] = $312; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $314 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $315 = HEAP32[$314>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $316 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $317 = HEAP32[$316>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $318 = (($315) + ($317))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $319 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$319>>2] = $318; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $320 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $321 = HEAP32[$320>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $322 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $323 = HEAP32[$322>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $324 = $321 ^ $323; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $325 = $324 << 12; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $326 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $327 = HEAP32[$326>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $328 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $329 = HEAP32[$328>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $330 = $327 ^ $329; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $331 = $330 >>> 20; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $332 = $325 | $331; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $333 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$333>>2] = $332; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $334 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $335 = HEAP32[$334>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $336 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $337 = HEAP32[$336>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $338 = (($335) + ($337))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $339 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$339>>2] = $338; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $340 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $341 = HEAP32[$340>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $342 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $343 = HEAP32[$342>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $344 = $341 ^ $343; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $345 = $344 << 8; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $346 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $347 = HEAP32[$346>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $348 = ((($x)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $349 = HEAP32[$348>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $350 = $347 ^ $349; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $351 = $350 >>> 24; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $352 = $345 | $351; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $353 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$353>>2] = $352; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $354 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $355 = HEAP32[$354>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $356 = ((($x)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $357 = HEAP32[$356>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $358 = (($355) + ($357))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $359 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$359>>2] = $358; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $360 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $361 = HEAP32[$360>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $362 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $363 = HEAP32[$362>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $364 = $361 ^ $363; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $365 = $364 << 7; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $366 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $367 = HEAP32[$366>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $368 = ((($x)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $369 = HEAP32[$368>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $370 = $367 ^ $369; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $371 = $370 >>> 25; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $372 = $365 | $371; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $373 = ((($x)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$373>>2] = $372; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $374 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $375 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $376 = HEAP32[$375>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $377 = (($374) + ($376))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$x>>2] = $377; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $378 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $379 = HEAP32[$378>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $380 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $381 = $379 ^ $380; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $382 = $381 << 16; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $383 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $384 = HEAP32[$383>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $385 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $386 = $384 ^ $385; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $387 = $386 >>> 16; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $388 = $382 | $387; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $389 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$389>>2] = $388; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $390 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $391 = HEAP32[$390>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $392 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $393 = HEAP32[$392>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $394 = (($391) + ($393))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $395 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$395>>2] = $394; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $396 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $397 = HEAP32[$396>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $398 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $399 = HEAP32[$398>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $400 = $397 ^ $399; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $401 = $400 << 12; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $402 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $403 = HEAP32[$402>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $404 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $405 = HEAP32[$404>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $406 = $403 ^ $405; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $407 = $406 >>> 20; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $408 = $401 | $407; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $409 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$409>>2] = $408; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $410 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $411 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $412 = HEAP32[$411>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $413 = (($410) + ($412))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$x>>2] = $413; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $414 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $415 = HEAP32[$414>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $416 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $417 = $415 ^ $416; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $418 = $417 << 8; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $419 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $420 = HEAP32[$419>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $421 = HEAP32[$x>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $422 = $420 ^ $421; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $423 = $422 >>> 24; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $424 = $418 | $423; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $425 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$425>>2] = $424; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $426 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $427 = HEAP32[$426>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $428 = ((($x)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $429 = HEAP32[$428>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $430 = (($427) + ($429))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $431 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$431>>2] = $430; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $432 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $433 = HEAP32[$432>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $434 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $435 = HEAP32[$434>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $436 = $433 ^ $435; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $437 = $436 << 7; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $438 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $439 = HEAP32[$438>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $440 = ((($x)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $441 = HEAP32[$440>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $442 = $439 ^ $441; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $443 = $442 >>> 25; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $444 = $437 | $443; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $445 = ((($x)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$445>>2] = $444; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $446 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $447 = HEAP32[$446>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $448 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $449 = HEAP32[$448>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $450 = (($447) + ($449))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $451 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$451>>2] = $450; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $452 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $453 = HEAP32[$452>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $454 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $455 = HEAP32[$454>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $456 = $453 ^ $455; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $457 = $456 << 16; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $458 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $459 = HEAP32[$458>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $460 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $461 = HEAP32[$460>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $462 = $459 ^ $461; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $463 = $462 >>> 16; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $464 = $457 | $463; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $465 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$465>>2] = $464; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $466 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $467 = HEAP32[$466>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $468 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $469 = HEAP32[$468>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $470 = (($467) + ($469))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $471 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$471>>2] = $470; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $472 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $473 = HEAP32[$472>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $474 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $475 = HEAP32[$474>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $476 = $473 ^ $475; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $477 = $476 << 12; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $478 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $479 = HEAP32[$478>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $480 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $481 = HEAP32[$480>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $482 = $479 ^ $481; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $483 = $482 >>> 20; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $484 = $477 | $483; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $485 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$485>>2] = $484; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $486 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $487 = HEAP32[$486>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $488 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $489 = HEAP32[$488>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $490 = (($487) + ($489))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $491 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$491>>2] = $490; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $492 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $493 = HEAP32[$492>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $494 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $495 = HEAP32[$494>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $496 = $493 ^ $495; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $497 = $496 << 8; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $498 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $499 = HEAP32[$498>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $500 = ((($x)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $501 = HEAP32[$500>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $502 = $499 ^ $501; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $503 = $502 >>> 24; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $504 = $497 | $503; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $505 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$505>>2] = $504; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $506 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $507 = HEAP32[$506>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $508 = ((($x)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $509 = HEAP32[$508>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $510 = (($507) + ($509))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $511 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$511>>2] = $510; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $512 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $513 = HEAP32[$512>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $514 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $515 = HEAP32[$514>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $516 = $513 ^ $515; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $517 = $516 << 7; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $518 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $519 = HEAP32[$518>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $520 = ((($x)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $521 = HEAP32[$520>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $522 = $519 ^ $521; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $523 = $522 >>> 25; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $524 = $517 | $523; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $525 = ((($x)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$525>>2] = $524; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $526 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $527 = HEAP32[$526>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $528 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $529 = HEAP32[$528>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $530 = (($527) + ($529))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $531 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$531>>2] = $530; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $532 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $533 = HEAP32[$532>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $534 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $535 = HEAP32[$534>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $536 = $533 ^ $535; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $537 = $536 << 16; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $538 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $539 = HEAP32[$538>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $540 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $541 = HEAP32[$540>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $542 = $539 ^ $541; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $543 = $542 >>> 16; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $544 = $537 | $543; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $545 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$545>>2] = $544; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $546 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $547 = HEAP32[$546>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $548 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $549 = HEAP32[$548>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $550 = (($547) + ($549))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $551 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$551>>2] = $550; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $552 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $553 = HEAP32[$552>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $554 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $555 = HEAP32[$554>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $556 = $553 ^ $555; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $557 = $556 << 12; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $558 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $559 = HEAP32[$558>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $560 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $561 = HEAP32[$560>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $562 = $559 ^ $561; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $563 = $562 >>> 20; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $564 = $557 | $563; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $565 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$565>>2] = $564; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $566 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $567 = HEAP32[$566>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $568 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $569 = HEAP32[$568>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $570 = (($567) + ($569))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $571 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$571>>2] = $570; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $572 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $573 = HEAP32[$572>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $574 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $575 = HEAP32[$574>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $576 = $573 ^ $575; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $577 = $576 << 8; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $578 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $579 = HEAP32[$578>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $580 = ((($x)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $581 = HEAP32[$580>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $582 = $579 ^ $581; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $583 = $582 >>> 24; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $584 = $577 | $583; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $585 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$585>>2] = $584; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $586 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $587 = HEAP32[$586>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $588 = ((($x)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $589 = HEAP32[$588>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $590 = (($587) + ($589))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $591 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$591>>2] = $590; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $592 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $593 = HEAP32[$592>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $594 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $595 = HEAP32[$594>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $596 = $593 ^ $595; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $597 = $596 << 7; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $598 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $599 = HEAP32[$598>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $600 = ((($x)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $601 = HEAP32[$600>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $602 = $599 ^ $601; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $603 = $602 >>> 25; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $604 = $597 | $603; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $605 = ((($x)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$605>>2] = $604; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $606 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $607 = HEAP32[$606>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $608 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $609 = HEAP32[$608>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $610 = (($607) + ($609))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $611 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$611>>2] = $610; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $612 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $613 = HEAP32[$612>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $614 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $615 = HEAP32[$614>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $616 = $613 ^ $615; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $617 = $616 << 16; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $618 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $619 = HEAP32[$618>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $620 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $621 = HEAP32[$620>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $622 = $619 ^ $621; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $623 = $622 >>> 16; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $624 = $617 | $623; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $625 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$625>>2] = $624; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $626 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $627 = HEAP32[$626>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $628 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $629 = HEAP32[$628>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $630 = (($627) + ($629))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $631 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$631>>2] = $630; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $632 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $633 = HEAP32[$632>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $634 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $635 = HEAP32[$634>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $636 = $633 ^ $635; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $637 = $636 << 12; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $638 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $639 = HEAP32[$638>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $640 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $641 = HEAP32[$640>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $642 = $639 ^ $641; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $643 = $642 >>> 20; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $644 = $637 | $643; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $645 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$645>>2] = $644; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $646 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $647 = HEAP32[$646>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $648 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $649 = HEAP32[$648>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $650 = (($647) + ($649))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $651 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$651>>2] = $650; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $652 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $653 = HEAP32[$652>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $654 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $655 = HEAP32[$654>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $656 = $653 ^ $655; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $657 = $656 << 8; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $658 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $659 = HEAP32[$658>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $660 = ((($x)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $661 = HEAP32[$660>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $662 = $659 ^ $661; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $663 = $662 >>> 24; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $664 = $657 | $663; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $665 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$665>>2] = $664; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $666 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $667 = HEAP32[$666>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $668 = ((($x)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $669 = HEAP32[$668>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $670 = (($667) + ($669))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $671 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$671>>2] = $670; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $672 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $673 = HEAP32[$672>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $674 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $675 = HEAP32[$674>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $676 = $673 ^ $675; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $677 = $676 << 7; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $678 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $679 = HEAP32[$678>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $680 = ((($x)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $681 = HEAP32[$680>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $682 = $679 ^ $681; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $683 = $682 >>> 25; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $684 = $677 | $683; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $685 = ((($x)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$685>>2] = $684; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $686 = $i; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $687 = (($686) - 2)|0; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $i = $687; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 $i = 0; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $688 = $i; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $689 = ($688|0)<(16); //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($689)) {
   break;
  }
  $690 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $691 = (($x) + ($690<<2)|0); //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $692 = HEAP32[$691>>2]|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $693 = $692 & 255; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $694 = $693&255; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $695 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $696 = $695<<2; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $697 = $0; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $698 = (($697) + ($696)|0); //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$698>>0] = $694; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $699 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $700 = (($x) + ($699<<2)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $701 = HEAP32[$700>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $702 = $701 >>> 8; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $703 = $702 & 255; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $704 = $703&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $705 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $706 = $705<<2; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $707 = (($706) + 1)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $708 = $0; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $709 = (($708) + ($707)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$709>>0] = $704; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $710 = $i; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $711 = (($x) + ($710<<2)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $712 = HEAP32[$711>>2]|0; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $713 = $712 >>> 16; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $714 = $713 & 255; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $715 = $714&255; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $716 = $i; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $717 = $716<<2; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $718 = (($717) + 2)|0; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $719 = $0; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $720 = (($719) + ($718)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$720>>0] = $715; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $721 = $i; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $722 = (($x) + ($721<<2)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $723 = HEAP32[$722>>2]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $724 = $723 >>> 24; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $725 = $724 & 255; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $726 = $725&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $727 = $i; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $728 = $727<<2; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $729 = (($728) + 3)|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $730 = $0; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $731 = (($730) + ($729)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$731>>0] = $726; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $732 = $i; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $733 = (($732) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $i = $733; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 STACKTOP = sp;return; //@line 59 "c_src/crypto_sign/sphincs256/ref/permute.c"
}
function _prg($r,$0,$1,$key) {
 $r = $r|0;
 $0 = $0|0;
 $1 = $1|0;
 $key = $key|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $2 = $r;
 $5 = $3;
 $6 = $5;
 HEAP32[$6>>2] = $0;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $4 = $key;
 $9 = $2; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $10 = $3; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $11 = $10; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $12 = HEAP32[$11>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $13 = (($10) + 4)|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $14 = $13; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $15 = HEAP32[$14>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $16 = $4; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 (_crypto_stream_chacha12_ref($9,$12,$15,2375,$16)|0); //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 STACKTOP = sp;return; //@line 14 "c_src/crypto_sign/sphincs256/ref/prg.c"
}
function _crypto_sign_sphincs_keypair($pk,$sk) {
 $pk = $pk|0;
 $sk = $sk|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $a = sp;
 $0 = $pk;
 $1 = $sk;
 $2 = $1; //@line 223 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _randombytes($2,1088,0); //@line 223 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $3 = $0; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $4 = $1; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = ((($4)) + 32|0); //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($3|0),($5|0),1024)|0; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$a>>2] = 11; //@line 227 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $6 = ((($a)) + 8|0); //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $6; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = $7; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$8>>2] = 0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = (($7) + 4)|0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $10 = $9; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$10>>2] = 0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = ((($a)) + 16|0); //@line 229 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$11>>2] = 0; //@line 229 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = $0; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = ((($12)) + 1024|0); //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = $1; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = $0; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _treehash($13,5,$14,$a,$15); //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return 0; //@line 233 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _crypto_sign_sphincs($sm,$smlen,$m,$mlen,$sk) {
 $sm = $sm|0;
 $smlen = $smlen|0;
 $m = $m|0;
 $mlen = $mlen|0;
 $sk = $sk|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R = 0, $a = 0, $a1 = 0, $horst_sigbytes = 0, $i = 0, $leafidx = 0, $m_h = 0, $masks = 0, $pk = 0, $rnd = 0, $root = 0, $scratch = 0, $seed = 0;
 var $tsk = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2448|0;
 $a = sp + 112|0;
 $i = sp + 104|0;
 $leafidx = sp + 96|0;
 $R = sp + 2408|0;
 $m_h = sp + 2344|0;
 $rnd = sp + 32|0;
 $horst_sigbytes = sp + 24|0;
 $root = sp + 2312|0;
 $seed = sp + 2280|0;
 $masks = sp + 1256|0;
 $tsk = sp + 168|0;
 $a1 = sp;
 $0 = $sm;
 $1 = $smlen;
 $2 = $m;
 $3 = $mlen;
 $4 = $sk;
 $5 = $i; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $6 = $5; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$6>>2] = 0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = (($5) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = $7; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$8>>2] = 0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $9 = $i; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $10 = $9; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $11 = HEAP32[$10>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = (($9) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $13 = $12; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $14 = HEAP32[$13>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $15 = ($14>>>0)<(0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $16 = ($11>>>0)<(1088); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = ($14|0)==(0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $18 = $17 & $16; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $19 = $15 | $18; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($19)) {
   break;
  }
  $20 = $i; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $21 = $20; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $22 = HEAP32[$21>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $23 = (($20) + 4)|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $24 = $23; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $25 = HEAP32[$24>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = $4; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $27 = (($26) + ($22)|0); //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $28 = HEAP8[$27>>0]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = $i; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = $29; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = HEAP32[$30>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = (($29) + 4)|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = $32; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $34 = HEAP32[$33>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = (($tsk) + ($31)|0); //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$35>>0] = $28; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = $i; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $37 = $36; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = HEAP32[$37>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = (($36) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = $39; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = HEAP32[$40>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = (_i64Add(($38|0),($41|0),1,0)|0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = tempRet0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = $i; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = $44; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$45>>2] = $42; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = (($44) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = $46; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$47>>2] = $43; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $48 = $0; //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $49 = ((($48)) + 41000|0); //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $50 = ((($49)) + -32|0); //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $scratch = $50; //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $51 = $3; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $52 = $i; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $53 = $52; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$53>>2] = $51; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $54 = (($52) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $55 = $54; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$55>>2] = 0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $56 = $i; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $57 = $56; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $58 = HEAP32[$57>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $59 = (($56) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = $59; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = HEAP32[$60>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $62 = ($61>>>0)>(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = ($58>>>0)>(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = ($61|0)==(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = $64 & $63; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = $62 | $65; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($66)) {
   break;
  }
  $67 = $i; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $68 = $67; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = HEAP32[$68>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $70 = (($67) + 4)|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = $70; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $72 = HEAP32[$71>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $73 = (_i64Subtract(($69|0),($72|0),1,0)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $74 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $75 = $2; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = (($75) + ($73)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = HEAP8[$76>>0]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = $i; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = $78; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = HEAP32[$79>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = (($78) + 4)|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = $81; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = HEAP32[$82>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = (_i64Add(32,0,($80|0),($83|0))|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $86 = (_i64Subtract(($84|0),($85|0),1,0)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $87 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $88 = $scratch; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = (($88) + ($86)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$89>>0] = $77; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = $i; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $91 = $90; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $92 = HEAP32[$91>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $93 = (($90) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $94 = $93; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $95 = HEAP32[$94>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = (_i64Add(($92|0),($95|0),-1,-1)|0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = tempRet0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = $i; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $99 = $98; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$99>>2] = $96; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $100 = (($98) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $101 = $100; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$101>>2] = $97; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $102 = $scratch; //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $103 = ((($tsk)) + 1088|0); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $104 = ((($103)) + -32|0); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$102; src=$104; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $105 = $scratch; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $106 = $3; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $107 = (32 + ($106))|0; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_crypto_hash_blake512_ref($rnd,$105,$107,0)|0); //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $108 = $scratch; //@line 269 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_zerobytes($108,32,0)|0); //@line 269 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $109 = $rnd; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $110 = $109; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $111 = HEAP32[$110>>2]|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $112 = (($109) + 4)|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $113 = $112; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $114 = HEAP32[$113>>2]|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $115 = $114 & 268435455; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $116 = $leafidx; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $117 = $116; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$117>>2] = $111; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $118 = (($116) + 4)|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $119 = $118; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$119>>2] = $115; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $120 = ((($rnd)) + 16|0); //@line 280 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$R; src=$120; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 280 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $121 = $0; //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $122 = ((($121)) + 41000|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $123 = ((($122)) + -32|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $124 = ((($123)) + -1056|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $scratch = $124; //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $125 = $scratch; //@line 286 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$125; src=$R; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 286 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$a1>>2] = 11; //@line 290 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $126 = ((($a1)) + 8|0); //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $127 = $126; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $128 = $127; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$128>>2] = 0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $129 = (($127) + 4)|0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $130 = $129; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$130>>2] = 0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $131 = ((($a1)) + 16|0); //@line 292 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$131>>2] = 0; //@line 292 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $132 = $scratch; //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $133 = ((($132)) + 32|0); //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $pk = $133; //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $134 = $pk; //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $135 = ((($tsk)) + 32|0); //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($134|0),($135|0),1024)|0; //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $136 = $pk; //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $137 = ((($136)) + 1024|0); //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $138 = $pk; //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _treehash($137,5,$tsk,$a1,$138); //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $139 = $scratch; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $140 = $3; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $141 = (($140) + 32)|0; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $142 = (($141) + 1056)|0; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_msg_hash($m_h,$139,$142,0)|0); //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$a>>2] = 12; //@line 305 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $143 = $leafidx; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $144 = $143; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $145 = HEAP32[$144>>2]|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $146 = (($143) + 4)|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $147 = $146; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $148 = HEAP32[$147>>2]|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $149 = $145 & 31; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $150 = ((($a)) + 16|0); //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$150>>2] = $149; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $151 = $leafidx; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $152 = $151; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $153 = HEAP32[$152>>2]|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $154 = (($151) + 4)|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $155 = $154; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $156 = HEAP32[$155>>2]|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $157 = (_bitshift64Lshr(($153|0),($156|0),5)|0); //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $158 = tempRet0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $159 = ((($a)) + 8|0); //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $160 = $159; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $161 = $160; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$161>>2] = $157; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $162 = (($160) + 4)|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $163 = $162; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$163>>2] = $158; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $164 = $1; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $165 = $164; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $166 = $165; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$166>>2] = 0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $167 = (($165) + 4)|0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $168 = $167; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$168>>2] = 0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $169 = $i; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $170 = $169; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$170>>2] = 0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $171 = (($169) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $172 = $171; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$172>>2] = 0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $173 = $i; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $174 = $173; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $175 = HEAP32[$174>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $176 = (($173) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $177 = $176; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $178 = HEAP32[$177>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $179 = ($178>>>0)<(0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $180 = ($175>>>0)<(32); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $181 = ($178|0)==(0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $182 = $181 & $180; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $183 = $179 | $182; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($183)) {
   break;
  }
  $184 = $i; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $185 = $184; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $186 = HEAP32[$185>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $187 = (($184) + 4)|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $188 = $187; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $189 = HEAP32[$188>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $190 = (($R) + ($186)|0); //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $191 = HEAP8[$190>>0]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $192 = $i; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $193 = $192; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $194 = HEAP32[$193>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $195 = (($192) + 4)|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $196 = $195; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $197 = HEAP32[$196>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $198 = $0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $199 = (($198) + ($194)|0); //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$199>>0] = $191; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $200 = $i; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $201 = $200; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $202 = HEAP32[$201>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $203 = (($200) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $204 = $203; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $205 = HEAP32[$204>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $206 = (_i64Add(($202|0),($205|0),1,0)|0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $207 = tempRet0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $208 = $i; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $209 = $208; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$209>>2] = $206; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $210 = (($208) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $211 = $210; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$211>>2] = $207; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $212 = $0; //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $213 = ((($212)) + 32|0); //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $0 = $213; //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $214 = $1; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $215 = $214; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $216 = $215; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $217 = HEAP32[$216>>2]|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $218 = (($215) + 4)|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $219 = $218; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $220 = HEAP32[$219>>2]|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $221 = (_i64Add(($217|0),($220|0),32,0)|0); //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $222 = tempRet0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $223 = $214; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $224 = $223; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$224>>2] = $221; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $225 = (($223) + 4)|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $226 = $225; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$226>>2] = $222; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $227 = ((($tsk)) + 32|0); //@line 317 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($masks|0),($227|0),1024)|0; //@line 317 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $228 = $i; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $229 = $228; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$229>>2] = 0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $230 = (($228) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $231 = $230; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$231>>2] = 0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $232 = $i; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $233 = $232; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $234 = HEAP32[$233>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $235 = (($232) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $236 = $235; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $237 = HEAP32[$236>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $238 = ($237>>>0)<(0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $239 = ($234>>>0)<(8); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $240 = ($237|0)==(0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $241 = $240 & $239; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $242 = $238 | $241; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($242)) {
   break;
  }
  $243 = $leafidx; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $244 = $243; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $245 = HEAP32[$244>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $246 = (($243) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $247 = $246; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $248 = HEAP32[$247>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $249 = $i; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $250 = $249; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $251 = HEAP32[$250>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $252 = (($249) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $253 = $252; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $254 = HEAP32[$253>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $255 = (___muldi3(8,0,($251|0),($254|0))|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $256 = tempRet0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $257 = (_bitshift64Lshr(($245|0),($248|0),($255|0))|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $258 = tempRet0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $259 = $257 & 255; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $260 = $259&255; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $261 = $i; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $262 = $261; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $263 = HEAP32[$262>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $264 = (($261) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $265 = $264; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $266 = HEAP32[$265>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $267 = $0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $268 = (($267) + ($263)|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$268>>0] = $260; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $269 = $i; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $270 = $269; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $271 = HEAP32[$270>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $272 = (($269) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $273 = $272; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $274 = HEAP32[$273>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $275 = (_i64Add(($271|0),($274|0),1,0)|0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $276 = tempRet0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $277 = $i; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $278 = $277; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$278>>2] = $275; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $279 = (($277) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $280 = $279; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$280>>2] = $276; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $281 = $0; //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $282 = ((($281)) + 8|0); //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $0 = $282; //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $283 = $1; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $284 = $283; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $285 = $284; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $286 = HEAP32[$285>>2]|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $287 = (($284) + 4)|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $288 = $287; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $289 = HEAP32[$288>>2]|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $290 = (_i64Add(($286|0),($289|0),8,0)|0); //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $291 = tempRet0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $292 = $283; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $293 = $292; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$293>>2] = $290; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $294 = (($292) + 4)|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $295 = $294; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$295>>2] = $291; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _get_seed($seed,$tsk,$a); //@line 324 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $296 = $0; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $297 = $2; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $298 = $3; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_horst_sign($296,$root,$horst_sigbytes,$297,$298,0,$seed,$masks,$m_h)|0); //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $299 = $horst_sigbytes; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $300 = $299; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $301 = HEAP32[$300>>2]|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $302 = (($299) + 4)|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $303 = $302; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $304 = HEAP32[$303>>2]|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $305 = $0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $306 = (($305) + ($301)|0); //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $0 = $306; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $307 = $horst_sigbytes; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $308 = $307; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $309 = HEAP32[$308>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $310 = (($307) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $311 = $310; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $312 = HEAP32[$311>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $313 = $1; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $314 = $313; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $315 = $314; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $316 = HEAP32[$315>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $317 = (($314) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $318 = $317; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $319 = HEAP32[$318>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $320 = (_i64Add(($316|0),($319|0),($309|0),($312|0))|0); //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $321 = tempRet0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $322 = $313; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $323 = $322; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$323>>2] = $320; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $324 = (($322) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $325 = $324; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$325>>2] = $321; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $326 = $i; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $327 = $326; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$327>>2] = 0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $328 = (($326) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $329 = $328; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$329>>2] = 0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $330 = $i; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $331 = $330; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $332 = HEAP32[$331>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $333 = (($330) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $334 = $333; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $335 = HEAP32[$334>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $336 = ($335>>>0)<(0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $337 = ($332>>>0)<(12); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $338 = ($335|0)==(0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $339 = $338 & $337; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $340 = $336 | $339; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($340)) {
   break;
  }
  $341 = $i; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $342 = $341; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $343 = HEAP32[$342>>2]|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $344 = (($341) + 4)|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $345 = $344; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $346 = HEAP32[$345>>2]|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$a>>2] = $343; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _get_seed($seed,$tsk,$a); //@line 334 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $347 = $0; //@line 335 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_sign($347,$root,$seed,$masks); //@line 335 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $348 = $0; //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $349 = ((($348)) + 2144|0); //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $0 = $349; //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $350 = $1; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $351 = $350; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $352 = $351; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $353 = HEAP32[$352>>2]|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $354 = (($351) + 4)|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $355 = $354; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $356 = HEAP32[$355>>2]|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $357 = (_i64Add(($353|0),($356|0),2144,0)|0); //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $358 = tempRet0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $359 = $350; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $360 = $359; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$360>>2] = $357; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $361 = (($359) + 4)|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $362 = $361; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$362>>2] = $358; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $363 = $0; //@line 339 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _compute_authpath_wots($root,$363,$a,$tsk,$masks,5); //@line 339 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $364 = $0; //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $365 = ((($364)) + 160|0); //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $0 = $365; //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $366 = $1; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $367 = $366; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $368 = $367; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $369 = HEAP32[$368>>2]|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $370 = (($367) + 4)|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $371 = $370; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $372 = HEAP32[$371>>2]|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $373 = (_i64Add(($369|0),($372|0),160,0)|0); //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $374 = tempRet0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $375 = $366; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $376 = $375; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$376>>2] = $373; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $377 = (($375) + 4)|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $378 = $377; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$378>>2] = $374; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $379 = ((($a)) + 8|0); //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $380 = $379; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $381 = $380; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $382 = HEAP32[$381>>2]|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $383 = (($380) + 4)|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $384 = $383; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $385 = HEAP32[$384>>2]|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $386 = $382 & 31; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $387 = ((($a)) + 16|0); //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$387>>2] = $386; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $388 = ((($a)) + 8|0); //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $389 = $388; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $390 = $389; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $391 = HEAP32[$390>>2]|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $392 = (($389) + 4)|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $393 = $392; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $394 = HEAP32[$393>>2]|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $395 = (_bitshift64Lshr(($391|0),($394|0),5)|0); //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $396 = tempRet0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $397 = $388; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $398 = $397; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$398>>2] = $395; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $399 = (($397) + 4)|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $400 = $399; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$400>>2] = $396; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $401 = $i; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $402 = $401; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $403 = HEAP32[$402>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $404 = (($401) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $405 = $404; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $406 = HEAP32[$405>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $407 = (_i64Add(($403|0),($406|0),1,0)|0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $408 = tempRet0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $409 = $i; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $410 = $409; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$410>>2] = $407; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $411 = (($409) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $412 = $411; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$412>>2] = $408; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 (_zerobytes($tsk,1088,0)|0); //@line 347 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $413 = $3; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $414 = $1; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $415 = $414; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $416 = $415; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $417 = HEAP32[$416>>2]|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $418 = (($415) + 4)|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $419 = $418; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $420 = HEAP32[$419>>2]|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $421 = (_i64Add(($417|0),($420|0),($413|0),0)|0); //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $422 = tempRet0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $423 = $414; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $424 = $423; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$424>>2] = $421; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $425 = (($423) + 4)|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $426 = $425; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$426>>2] = $422; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return 0; //@line 351 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _crypto_sign_sphincs_open($m,$mlen,$sm,$smlen,$pk) {
 $m = $m|0;
 $mlen = $mlen|0;
 $sm = $sm|0;
 $smlen = $smlen|0;
 $pk = $pk|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R = 0, $i = 0, $leafidx = 0, $len = 0, $m_h = 0;
 var $pkhash = 0, $root = 0, $scratch = 0, $sig = 0, $sigp = 0, $tpk = 0, $wots_pk = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 44416|0;
 $i = sp + 8|0;
 $leafidx = sp;
 $wots_pk = sp + 42272|0;
 $pkhash = sp + 42240|0;
 $root = sp + 42208|0;
 $sig = sp + 1208|0;
 $tpk = sp + 152|0;
 $m_h = sp + 88|0;
 $R = sp + 56|0;
 $1 = $m;
 $2 = $mlen;
 $3 = $sm;
 $4 = $smlen;
 $5 = $pk;
 $6 = $leafidx; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $6; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$7>>2] = 0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = (($6) + 4)|0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $8; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$9>>2] = 0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $10 = $4; //@line 367 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = ($10>>>0)<(41000); //@line 367 "c_src/crypto_sign/sphincs256/ref/sign.c"
 if ($11) {
  $0 = -1; //@line 368 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $414 = $0; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($414|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $12 = $i; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = $12; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$13>>2] = 0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = (($12) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = $14; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$15>>2] = 0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $16 = $i; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = $16; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $18 = HEAP32[$17>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $19 = (($16) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $20 = $19; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $21 = HEAP32[$20>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $22 = ($21>>>0)<(0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $23 = ($18>>>0)<(1056); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $24 = ($21|0)==(0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $25 = $24 & $23; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = $22 | $25; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($26)) {
   break;
  }
  $27 = $i; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $28 = $27; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = HEAP32[$28>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = (($27) + 4)|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = $30; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = HEAP32[$31>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = $5; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $34 = (($33) + ($29)|0); //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = HEAP8[$34>>0]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = $i; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $37 = $36; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = HEAP32[$37>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = (($36) + 4)|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = $39; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = HEAP32[$40>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = (($tpk) + ($38)|0); //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$42>>0] = $35; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = $i; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = $43; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = HEAP32[$44>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = (($43) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = $46; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $48 = HEAP32[$47>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $49 = (_i64Add(($45|0),($48|0),1,0)|0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $50 = tempRet0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $51 = $i; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $52 = $51; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$52>>2] = $49; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $53 = (($51) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $54 = $53; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$54>>2] = $50; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $55 = $i; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $56 = $55; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$56>>2] = 0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $57 = (($55) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $58 = $57; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$58>>2] = 0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $59 = $i; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = $59; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = HEAP32[$60>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $62 = (($59) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = $62; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = HEAP32[$63>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = ($64>>>0)<(0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = ($61>>>0)<(32); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $67 = ($64|0)==(0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $68 = $67 & $66; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = $65 | $68; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($69)) {
   break;
  }
  $70 = $i; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = $70; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $72 = HEAP32[$71>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $73 = (($70) + 4)|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $74 = $73; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $75 = HEAP32[$74>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = $3; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = (($76) + ($72)|0); //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = HEAP8[$77>>0]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = $i; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = $79; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = HEAP32[$80>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = (($79) + 4)|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = $82; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = HEAP32[$83>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = (($R) + ($81)|0); //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$85>>0] = $78; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $86 = $i; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $87 = $86; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $88 = HEAP32[$87>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = (($86) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = $89; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $91 = HEAP32[$90>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $92 = (_i64Add(($88|0),($91|0),1,0)|0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $93 = tempRet0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $94 = $i; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $95 = $94; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$95>>2] = $92; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = (($94) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = $96; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$97>>2] = $93; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $98 = $4; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $99 = (($98) - 41000)|0; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $len = $99; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $100 = $1; //@line 384 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $scratch = $100; //@line 384 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $101 = $3; //@line 386 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($sig|0),($101|0),41000)|0; //@line 386 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $102 = $scratch; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $103 = ((($102)) + 32|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $104 = ((($103)) + 1056|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $105 = $3; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $106 = ((($105)) + 41000|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $107 = $len; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($104|0),($106|0),($107|0))|0; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $108 = $scratch; //@line 391 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$108; src=$R; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 391 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $109 = $scratch; //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $110 = ((($109)) + 32|0); //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($110|0),($tpk|0),1056)|0; //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $111 = $scratch; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $112 = $len; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $113 = (($112) + 32)|0; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $114 = (($113) + 1056)|0; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $115 = ($114|0)<(0); //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $116 = $115 << 31 >> 31; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_msg_hash($m_h,$111,$114,$116)|0); //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $sigp = $sig; //@line 398 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $117 = $sigp; //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $118 = ((($117)) + 32|0); //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $sigp = $118; //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $119 = $4; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $120 = (($119) - 32)|0; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $4 = $120; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $121 = $i; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $122 = $121; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$122>>2] = 0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $123 = (($121) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $124 = $123; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$124>>2] = 0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $125 = $i; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $126 = $125; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $127 = HEAP32[$126>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $128 = (($125) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $129 = $128; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $130 = HEAP32[$129>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $131 = ($130>>>0)<(0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $132 = ($127>>>0)<(8); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $133 = ($130|0)==(0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $134 = $133 & $132; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $135 = $131 | $134; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($135)) {
   break;
  }
  $136 = $i; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $137 = $136; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $138 = HEAP32[$137>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $139 = (($136) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $140 = $139; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $141 = HEAP32[$140>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $142 = $sigp; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $143 = (($142) + ($138)|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $144 = HEAP8[$143>>0]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $145 = $144&255; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $146 = $i; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $147 = $146; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $148 = HEAP32[$147>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $149 = (($146) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $150 = $149; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $151 = HEAP32[$150>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $152 = (___muldi3(8,0,($148|0),($151|0))|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $153 = tempRet0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $154 = (_bitshift64Shl(($145|0),0,($152|0))|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $155 = tempRet0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $156 = $leafidx; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $157 = $156; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $158 = HEAP32[$157>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $159 = (($156) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $160 = $159; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $161 = HEAP32[$160>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $162 = $158 ^ $154; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $163 = $161 ^ $155; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $164 = $leafidx; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $165 = $164; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$165>>2] = $162; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $166 = (($164) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $167 = $166; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$167>>2] = $163; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $168 = $i; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $169 = $168; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $170 = HEAP32[$169>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $171 = (($168) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $172 = $171; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $173 = HEAP32[$172>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $174 = (_i64Add(($170|0),($173|0),1,0)|0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $175 = tempRet0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $176 = $i; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $177 = $176; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$177>>2] = $174; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $178 = (($176) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $179 = $178; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$179>>2] = $175; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $180 = $sigp; //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $181 = ((($180)) + 8|0); //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $182 = $sigp; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $183 = ((($182)) + 41000|0); //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $184 = ((($183)) + -32|0); //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $185 = $4; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $186 = (($185) - 41000)|0; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $187 = (($186) - 32)|0; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_horst_verify($root,$181,$184,$187,0,$tpk,$m_h)|0); //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $188 = $sigp; //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $189 = ((($188)) + 8|0); //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $sigp = $189; //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $190 = $4; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $191 = (($190) - 8)|0; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $4 = $191; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $192 = $sigp; //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $193 = ((($192)) + 13312|0); //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $sigp = $193; //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $194 = $4; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $195 = (($194) - 13312)|0; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $4 = $195; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $196 = $i; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $197 = $196; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$197>>2] = 0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $198 = (($196) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $199 = $198; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$199>>2] = 0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $200 = $i; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $201 = $200; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $202 = HEAP32[$201>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $203 = (($200) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $204 = $203; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $205 = HEAP32[$204>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $206 = ($205>>>0)<(0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $207 = ($202>>>0)<(12); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $208 = ($205|0)==(0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $209 = $208 & $207; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $210 = $206 | $209; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($210)) {
   break;
  }
  $211 = $sigp; //@line 419 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_verify($wots_pk,$211,$root,$tpk); //@line 419 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $212 = $sigp; //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $213 = ((($212)) + 2144|0); //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $sigp = $213; //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $214 = $4; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $215 = (($214) - 2144)|0; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $4 = $215; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _l_tree($pkhash,$wots_pk,$tpk); //@line 424 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $216 = $leafidx; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $217 = $216; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $218 = HEAP32[$217>>2]|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $219 = (($216) + 4)|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $220 = $219; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $221 = HEAP32[$220>>2]|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $222 = $218 & 31; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $223 = $sigp; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _validate_authpath($root,$pkhash,$222,$223,$tpk,5); //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $224 = $leafidx; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $225 = $224; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $226 = HEAP32[$225>>2]|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $227 = (($224) + 4)|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $228 = $227; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $229 = HEAP32[$228>>2]|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $230 = (_bitshift64Lshr(($226|0),($229|0),5)|0); //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $231 = tempRet0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $232 = $leafidx; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $233 = $232; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$233>>2] = $230; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $234 = (($232) + 4)|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $235 = $234; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$235>>2] = $231; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $236 = $sigp; //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $237 = ((($236)) + 160|0); //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $sigp = $237; //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $238 = $4; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $239 = (($238) - 160)|0; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $4 = $239; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $240 = $i; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $241 = $240; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $242 = HEAP32[$241>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $243 = (($240) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $244 = $243; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $245 = HEAP32[$244>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $246 = (_i64Add(($242|0),($245|0),1,0)|0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $247 = tempRet0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $248 = $i; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $249 = $248; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$249>>2] = $246; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $250 = (($248) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $251 = $250; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$251>>2] = $247; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $252 = $i; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $253 = $252; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$253>>2] = 0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $254 = (($252) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $255 = $254; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$255>>2] = 0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $256 = $i; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $257 = $256; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $258 = HEAP32[$257>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $259 = (($256) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $260 = $259; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $261 = HEAP32[$260>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $262 = ($261>>>0)<(0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $263 = ($258>>>0)<(32); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $264 = ($261|0)==(0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $265 = $264 & $263; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $266 = $262 | $265; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($266)) {
   label = 19;
   break;
  }
  $267 = $i; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $268 = $267; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $269 = HEAP32[$268>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $270 = (($267) + 4)|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $271 = $270; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $272 = HEAP32[$271>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $273 = (($root) + ($269)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $274 = HEAP8[$273>>0]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $275 = $274&255; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $276 = $i; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $277 = $276; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $278 = HEAP32[$277>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $279 = (($276) + 4)|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $280 = $279; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $281 = HEAP32[$280>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $282 = (_i64Add(($278|0),($281|0),1024,0)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $283 = tempRet0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $284 = (($tpk) + ($282)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $285 = HEAP8[$284>>0]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $286 = $285&255; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $287 = ($275|0)!=($286|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if ($287) {
   label = 23;
   break;
  }
  $288 = $i; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $289 = $288; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $290 = HEAP32[$289>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $291 = (($288) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $292 = $291; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $293 = HEAP32[$292>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $294 = (_i64Add(($290|0),($293|0),1,0)|0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $295 = tempRet0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $296 = $i; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $297 = $296; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$297>>2] = $294; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $298 = (($296) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $299 = $298; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$299>>2] = $295; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 if ((label|0) == 19) {
  $300 = $4; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $301 = $2; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $302 = $301; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $303 = $302; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$303>>2] = $300; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $304 = (($302) + 4)|0; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $305 = $304; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$305>>2] = 0; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $306 = $i; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $307 = $306; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$307>>2] = 0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $308 = (($306) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $309 = $308; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$309>>2] = 0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $310 = $i; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $311 = $310; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $312 = HEAP32[$311>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $313 = (($310) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $314 = $313; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $315 = HEAP32[$314>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $316 = $2; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $317 = $316; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $318 = $317; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $319 = HEAP32[$318>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $320 = (($317) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $321 = $320; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $322 = HEAP32[$321>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $323 = ($315>>>0)<($322>>>0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $324 = ($312>>>0)<($319>>>0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $325 = ($315|0)==($322|0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $326 = $325 & $324; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $327 = $323 | $326; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($327)) {
    break;
   }
   $328 = $i; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $329 = $328; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $330 = HEAP32[$329>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $331 = (($328) + 4)|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $332 = $331; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $333 = HEAP32[$332>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $334 = (_i64Add(($330|0),($333|0),32,0)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $335 = tempRet0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $336 = (_i64Add(($334|0),($335|0),1056,0)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $337 = tempRet0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $338 = $1; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $339 = (($338) + ($336)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $340 = HEAP8[$339>>0]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $341 = $i; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $342 = $341; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $343 = HEAP32[$342>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $344 = (($341) + 4)|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $345 = $344; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $346 = HEAP32[$345>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $347 = $1; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $348 = (($347) + ($343)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP8[$348>>0] = $340; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $349 = $i; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $350 = $349; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $351 = HEAP32[$350>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $352 = (($349) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $353 = $352; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $354 = HEAP32[$353>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $355 = (_i64Add(($351|0),($354|0),1,0)|0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $356 = tempRet0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $357 = $i; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $358 = $357; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$358>>2] = $355; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $359 = (($357) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $360 = $359; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$360>>2] = $356; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $0 = 0; //@line 440 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $414 = $0; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($414|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 else if ((label|0) == 23) {
  $361 = $4; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $362 = $2; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $363 = $362; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $364 = $363; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$364>>2] = $361; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $365 = (($363) + 4)|0; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $366 = $365; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$366>>2] = 0; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $367 = $i; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $368 = $367; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$368>>2] = 0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $369 = (($367) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $370 = $369; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$370>>2] = 0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $371 = $i; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $372 = $371; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $373 = HEAP32[$372>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $374 = (($371) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $375 = $374; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $376 = HEAP32[$375>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $377 = $2; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $378 = $377; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $379 = $378; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $380 = HEAP32[$379>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $381 = (($378) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $382 = $381; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $383 = HEAP32[$382>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $384 = ($376>>>0)<($383>>>0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $385 = ($373>>>0)<($380>>>0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $386 = ($376|0)==($383|0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $387 = $386 & $385; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $388 = $384 | $387; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($388)) {
    break;
   }
   $389 = $i; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $390 = $389; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $391 = HEAP32[$390>>2]|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $392 = (($389) + 4)|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $393 = $392; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $394 = HEAP32[$393>>2]|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $395 = $1; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $396 = (($395) + ($391)|0); //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP8[$396>>0] = 0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $397 = $i; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $398 = $397; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $399 = HEAP32[$398>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $400 = (($397) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $401 = $400; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $402 = HEAP32[$401>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $403 = (_i64Add(($399|0),($402|0),1,0)|0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $404 = tempRet0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $405 = $i; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $406 = $405; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$406>>2] = $403; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $407 = (($405) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $408 = $407; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$408>>2] = $404; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $409 = $2; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $410 = $409; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $411 = $410; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$411>>2] = -1; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $412 = (($410) + 4)|0; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $413 = $412; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$413>>2] = -1; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $0 = -1; //@line 448 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $414 = $0; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($414|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 return (0)|0;
}
function _treehash($node,$height,$sk,$leaf,$masks) {
 $node = $node|0;
 $height = $height|0;
 $sk = $sk|0;
 $leaf = $leaf|0;
 $masks = $masks|0;
 var $$alloca_mul = 0, $$alloca_mul7 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $a = 0, $i = 0, $lastnode = 0, $maskoffset = 0, $stackoffset = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $a = sp;
 $0 = $node;
 $1 = $height;
 $2 = $sk;
 $3 = $leaf;
 $4 = $masks;
 $6 = $3; //@line 100 "c_src/crypto_sign/sphincs256/ref/sign.c"
 ;HEAP32[$a>>2]=HEAP32[$6>>2]|0;HEAP32[$a+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$a+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$a+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$a+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$a+20>>2]=HEAP32[$6+20>>2]|0; //@line 100 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $1; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = (($7) + 1)|0; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $8<<5; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $10 = (_llvm_stacksave()|0); //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = $10; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $$alloca_mul = $9; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = $1; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = (($12) + 1)|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $$alloca_mul7 = $13<<2; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0;; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $stackoffset = 0; //@line 104 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $maskoffset = 0; //@line 105 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = ((($a)) + 16|0); //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $16 = HEAP32[$15>>2]|0; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $1; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $18 = 1 << $17; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $19 = (($16) + ($18))|0; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $lastnode = $19; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $20 = ((($a)) + 16|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $21 = HEAP32[$20>>2]|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $22 = $lastnode; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $23 = ($21|0)<($22|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($23)) {
   break;
  }
  $24 = $stackoffset; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $25 = $24<<5; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = (($11) + ($25)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $27 = $4; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $28 = $2; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _gen_leaf_wots($26,$27,$28,$a); //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = $stackoffset; //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = (($14) + ($29<<2)|0); //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$30>>2] = 0; //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = $stackoffset; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = (($31) + 1)|0; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $stackoffset = $32; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $33 = $stackoffset; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $34 = ($33>>>0)>(1); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($34)) {
    break;
   }
   $35 = $stackoffset; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $36 = (($35) - 1)|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $37 = (($14) + ($36<<2)|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $38 = HEAP32[$37>>2]|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $39 = $stackoffset; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $40 = (($39) - 2)|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $41 = (($14) + ($40<<2)|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $42 = HEAP32[$41>>2]|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $43 = ($38|0)==($42|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($43)) {
    break;
   }
   $44 = $stackoffset; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $45 = (($44) - 1)|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $46 = (($14) + ($45<<2)|0); //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $47 = HEAP32[$46>>2]|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $48 = (($47) + 7)|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $49 = $48<<1; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $50 = $49<<5; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $maskoffset = $50; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $51 = $stackoffset; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $52 = (($51) - 2)|0; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $53 = $52<<5; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $54 = (($11) + ($53)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $55 = $stackoffset; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $56 = (($55) - 2)|0; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $57 = $56<<5; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $58 = (($11) + ($57)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $59 = $4; //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $60 = $maskoffset; //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $61 = (($59) + ($60)|0); //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($54,$58,$61)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $62 = $stackoffset; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $63 = (($62) - 2)|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $64 = (($14) + ($63<<2)|0); //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $65 = HEAP32[$64>>2]|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $66 = (($65) + 1)|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$64>>2] = $66; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $67 = $stackoffset; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $68 = (($67) + -1)|0; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $stackoffset = $68; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $69 = ((($a)) + 16|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $70 = HEAP32[$69>>2]|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = (($70) + 1)|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$69>>2] = $71; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $i = 0; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $72 = $i; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $73 = ($72|0)<(32); //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($73)) {
   break;
  }
  $74 = $i; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $75 = (($11) + ($74)|0); //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = HEAP8[$75>>0]|0; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = $i; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = $0; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = (($78) + ($77)|0); //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$79>>0] = $76; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = $i; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = (($80) + 1)|0; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $81; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $82 = $5; //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _llvm_stackrestore(($82|0)); //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _get_seed($seed,$sk,$a) {
 $seed = $seed|0;
 $sk = $sk|0;
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $buffer = 0, $i = 0, $t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $buffer = sp + 24|0;
 $t = sp;
 $0 = $seed;
 $1 = $sk;
 $2 = $a;
 $i = 0; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $3 = $i; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $4 = ($3|0)<(32); //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($4)) {
   break;
  }
  $5 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $6 = $1; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $7 = (($6) + ($5)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $8 = HEAP8[$7>>0]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $9 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $10 = (($buffer) + ($9)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$10>>0] = $8; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $11 = $i; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = (($11) + 1)|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $12; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $13 = $2; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = HEAP32[$13>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = ($14|0)<(0); //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $16 = $15 << 31 >> 31; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $t; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $18 = $17; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$18>>2] = $14; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $19 = (($17) + 4)|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $20 = $19; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$20>>2] = $16; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $21 = $2; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = ((($21)) + 8|0); //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $23 = $22; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $24 = $23; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $25 = HEAP32[$24>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $26 = (($23) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $27 = $26; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $28 = HEAP32[$27>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $29 = (_bitshift64Shl(($25|0),($28|0),4)|0); //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $30 = tempRet0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $31 = $t; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $32 = $31; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $33 = HEAP32[$32>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $34 = (($31) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $35 = $34; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $36 = HEAP32[$35>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $37 = $33 | $29; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $38 = $36 | $30; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $39 = $t; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $40 = $39; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$40>>2] = $37; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $41 = (($39) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $42 = $41; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$42>>2] = $38; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $43 = $2; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $44 = ((($43)) + 16|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $45 = HEAP32[$44>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $46 = ($45|0)<(0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $47 = $46 << 31 >> 31; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $48 = (_bitshift64Shl(($45|0),($47|0),59)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $49 = tempRet0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $50 = $t; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $51 = $50; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $52 = HEAP32[$51>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $53 = (($50) + 4)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $54 = $53; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $55 = HEAP32[$54>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $56 = $52 | $48; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $57 = $55 | $49; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $58 = $t; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $59 = $58; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$59>>2] = $56; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $60 = (($58) + 4)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $61 = $60; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$61>>2] = $57; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $i = 0; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $62 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = ($62|0)<(8); //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($63)) {
   break;
  }
  $64 = $t; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = $64; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = HEAP32[$65>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $67 = (($64) + 4)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $68 = $67; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = HEAP32[$68>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $70 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = $70<<3; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $72 = (_bitshift64Lshr(($66|0),($69|0),($71|0))|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $73 = tempRet0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $74 = $72 & 255; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $75 = $74&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = $i; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = (32 + ($76))|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = (($buffer) + ($77)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$78>>0] = $75; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = $i; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = (($79) + 1)|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $80; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $81 = $0; //@line 60 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_varlen_hash($81,$buffer,40,0)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 61 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _compute_authpath_wots($root,$authpath,$a,$sk,$masks,$height) {
 $root = $root|0;
 $authpath = $authpath|0;
 $a = $a|0;
 $sk = $sk|0;
 $masks = $masks|0;
 $height = $height|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $idx = 0, $j = 0, $level = 0, $pk = 0, $seed = 0, $ta = 0, $tree = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 71744|0;
 $ta = sp;
 $tree = sp + 69696|0;
 $seed = sp + 68672|0;
 $pk = sp + 64|0;
 $0 = $root;
 $1 = $authpath;
 $2 = $a;
 $3 = $sk;
 $4 = $masks;
 $5 = $height;
 $6 = $2; //@line 174 "c_src/crypto_sign/sphincs256/ref/sign.c"
 ;HEAP32[$ta>>2]=HEAP32[$6>>2]|0;HEAP32[$ta+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$ta+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$ta+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$ta+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$ta+20>>2]=HEAP32[$6+20>>2]|0; //@line 174 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = ((($ta)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$7>>2] = 0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $8 = ((($ta)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $9 = HEAP32[$8>>2]|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $10 = ($9|0)<(32); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($10)) {
   break;
  }
  $11 = ((($ta)) + 16|0); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = HEAP32[$11>>2]|0; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $13 = $12<<5; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $14 = (($seed) + ($13)|0); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $15 = $3; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _get_seed($14,$15,$ta); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $16 = ((($ta)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = HEAP32[$16>>2]|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $18 = (($17) + 1)|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$16>>2] = $18; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $19 = ((($ta)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$19>>2] = 0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $20 = ((($ta)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $21 = HEAP32[$20>>2]|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $22 = ($21|0)<(32); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($22)) {
   break;
  }
  $23 = ((($ta)) + 16|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $24 = HEAP32[$23>>2]|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $25 = ($24*67)|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = $25<<5; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $27 = (($pk) + ($26)|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $28 = ((($ta)) + 16|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = HEAP32[$28>>2]|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = $29<<5; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = (($seed) + ($30)|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = $4; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_pkgen($27,$31,$32); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = ((($ta)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $34 = HEAP32[$33>>2]|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = (($34) + 1)|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$33>>2] = $35; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $36 = ((($ta)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$36>>2] = 0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $37 = ((($ta)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = HEAP32[$37>>2]|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = ($38|0)<(32); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($39)) {
   break;
  }
  $40 = ((($tree)) + 1024|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = ((($ta)) + 16|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = HEAP32[$41>>2]|0; //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = $42<<5; //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = (($40) + ($43)|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = ((($ta)) + 16|0); //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = HEAP32[$45>>2]|0; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = ($46*67)|0; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $48 = $47<<5; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $49 = (($pk) + ($48)|0); //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $50 = $4; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _l_tree($44,$49,$50); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $51 = ((($ta)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $52 = HEAP32[$51>>2]|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $53 = (($52) + 1)|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$51>>2] = $53; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $level = 0; //@line 191 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $i = 32; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $54 = $i; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $55 = ($54|0)>(0); //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($55)) {
   break;
  }
  $j = 0; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $56 = $j; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $57 = $i; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $58 = ($56|0)<($57|0); //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($58)) {
    break;
   }
   $59 = $i; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $60 = $59 >> 1; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $61 = $60<<5; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $62 = (($tree) + ($61)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $63 = $j; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $64 = $63 >> 1; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $65 = $64<<5; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $66 = (($62) + ($65)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $67 = $i; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $68 = $67<<5; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $69 = (($tree) + ($68)|0); //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $70 = $j; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $71 = $70<<5; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $72 = (($69) + ($71)|0); //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $73 = $4; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $74 = $level; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $75 = (7 + ($74))|0; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $76 = $75<<1; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $77 = $76<<5; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $78 = (($73) + ($77)|0); //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($66,$72,$78)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $79 = $j; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $80 = (($79) + 2)|0; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $j = $80; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $81 = $level; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = (($81) + 1)|0; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $level = $82; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = $i; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = $83 >> 1; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $84; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $85 = $2; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $86 = ((($85)) + 16|0); //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $87 = HEAP32[$86>>2]|0; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $idx = $87; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $i = 0; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $88 = $i; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = $5; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = ($88>>>0)<($89>>>0); //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($90)) {
   break;
  }
  $91 = $1; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $92 = $i; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $93 = $92<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $94 = (($91) + ($93)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $95 = $i; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = 32 >> $95; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = $96<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = (($tree) + ($97)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $99 = $idx; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $100 = $i; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $101 = $99 >> $100; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $102 = $101 ^ 1; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $103 = $102<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $104 = (($98) + ($103)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  dest=$94; src=$104; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $105 = $i; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $106 = (($105) + 1)|0; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $106; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $107 = $0; //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $108 = ((($tree)) + 32|0); //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$107; src=$108; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 213 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _l_tree($leaf,$wots_pk,$masks) {
 $leaf = $leaf|0;
 $wots_pk = $wots_pk|0;
 $masks = $masks|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0, $l = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = $leaf;
 $1 = $wots_pk;
 $2 = $masks;
 $l = 67; //@line 66 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $j = 0; //@line 67 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $i = 0; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $3 = $i; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $4 = ($3|0)<(7); //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($4)) {
   break;
  }
  $j = 0; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $5 = $j; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $6 = $l; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $7 = $6 >> 1; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $8 = ($5|0)<($7|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($8)) {
    break;
   }
   $9 = $1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $10 = $j; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $11 = $10<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $12 = (($9) + ($11)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $13 = $1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $14 = $j; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $15 = $14<<1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $16 = $15<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $17 = (($13) + ($16)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $18 = $2; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $19 = $i; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $20 = $19<<1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $21 = $20<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $22 = (($18) + ($21)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($12,$17,$22)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $23 = $j; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $24 = (($23) + 1)|0; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $j = $24; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $25 = $l; //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = $25 & 1; //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $27 = ($26|0)!=(0); //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if ($27) {
   $28 = $1; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $29 = $l; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $30 = $29 >> 1; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $31 = $30<<5; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $32 = (($28) + ($31)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $33 = $1; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $34 = $l; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $35 = (($34) - 1)|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $36 = $35<<5; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $37 = (($33) + ($36)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   dest=$32; src=$37; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $38 = $l; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $39 = $38 >> 1; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $40 = (($39) + 1)|0; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $l = $40; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
  } else {
   $41 = $l; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $42 = $41 >> 1; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $l = $42; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $43 = $i; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = (($43) + 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $44; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $45 = $0; //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $46 = $1; //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$45; src=$46; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 82 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _validate_authpath($root,$leaf,$leafidx,$authpath,$masks,$height) {
 $root = $root|0;
 $leaf = $leaf|0;
 $leafidx = $leafidx|0;
 $authpath = $authpath|0;
 $masks = $masks|0;
 $height = $height|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $buffer = 0, $i = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $buffer = sp + 32|0;
 $0 = $root;
 $1 = $leaf;
 $2 = $leafidx;
 $3 = $authpath;
 $4 = $masks;
 $5 = $height;
 $6 = $2; //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $6 & 1; //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = ($7|0)!=(0); //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $j = 0; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
 L1: do {
  if ($8) {
   while(1) {
    $9 = $j; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $10 = ($9|0)<(32); //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($10)) {
     break;
    }
    $11 = $j; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $12 = $1; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = (($12) + ($11)|0); //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $14 = HEAP8[$13>>0]|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $15 = $j; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $16 = (32 + ($15))|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $17 = (($buffer) + ($16)|0); //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$17>>0] = $14; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $18 = $j; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $19 = (($18) + 1)|0; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = $19; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
   $j = 0; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
   while(1) {
    $20 = $j; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $21 = ($20|0)<(32); //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($21)) {
     break L1;
    }
    $22 = $j; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $23 = $3; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $24 = (($23) + ($22)|0); //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $25 = HEAP8[$24>>0]|0; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $26 = $j; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $27 = (($buffer) + ($26)|0); //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$27>>0] = $25; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $28 = $j; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $29 = (($28) + 1)|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = $29; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
  } else {
   while(1) {
    $30 = $j; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $31 = ($30|0)<(32); //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($31)) {
     break;
    }
    $32 = $j; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $33 = $1; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $34 = (($33) + ($32)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $35 = HEAP8[$34>>0]|0; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $36 = $j; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $37 = (($buffer) + ($36)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$37>>0] = $35; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $38 = $j; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $39 = (($38) + 1)|0; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = $39; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
   $j = 0; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
   while(1) {
    $40 = $j; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $41 = ($40|0)<(32); //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($41)) {
     break L1;
    }
    $42 = $j; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $43 = $3; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $44 = (($43) + ($42)|0); //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $45 = HEAP8[$44>>0]|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $46 = $j; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $47 = (32 + ($46))|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $48 = (($buffer) + ($47)|0); //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$48>>0] = $45; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $49 = $j; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $50 = (($49) + 1)|0; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = $50; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
  }
 } while(0);
 $51 = $3; //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $52 = ((($51)) + 32|0); //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $3 = $52; //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $i = 0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $53 = $i; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $54 = $5; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $55 = (($54) - 1)|0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $56 = ($53>>>0)<($55>>>0); //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($56)) {
   break;
  }
  $57 = $2; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $58 = $57 >>> 1; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $2 = $58; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $59 = $2; //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = $59 & 1; //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = ($60|0)!=(0); //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  L20: do {
   if ($61) {
    $62 = ((($buffer)) + 32|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $63 = $4; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $64 = $i; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $65 = (7 + ($64))|0; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $66 = $65<<1; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $67 = $66<<5; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $68 = (($63) + ($67)|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    (_hash_2n_n_mask($62,$buffer,$68)|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = 0; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
    while(1) {
     $69 = $j; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $70 = ($69|0)<(32); //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     if (!($70)) {
      break L20;
     }
     $71 = $j; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $72 = $3; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $73 = (($72) + ($71)|0); //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $74 = HEAP8[$73>>0]|0; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $75 = $j; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $76 = (($buffer) + ($75)|0); //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     HEAP8[$76>>0] = $74; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $77 = $j; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $78 = (($77) + 1)|0; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $j = $78; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
    }
   } else {
    $79 = $4; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $80 = $i; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $81 = (7 + ($80))|0; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $82 = $81<<1; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $83 = $82<<5; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $84 = (($79) + ($83)|0); //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    (_hash_2n_n_mask($buffer,$buffer,$84)|0); //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $j = 0; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
    while(1) {
     $85 = $j; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $86 = ($85|0)<(32); //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     if (!($86)) {
      break L20;
     }
     $87 = $j; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $88 = $3; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $89 = (($88) + ($87)|0); //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $90 = HEAP8[$89>>0]|0; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $91 = $j; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $92 = (($91) + 32)|0; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $93 = (($buffer) + ($92)|0); //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     HEAP8[$93>>0] = $90; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $94 = $j; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $95 = (($94) + 1)|0; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $j = $95; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
    }
   }
  } while(0);
  $96 = $3; //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = ((($96)) + 32|0); //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $3 = $97; //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = $i; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $99 = (($98) + 1)|0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $i = $99; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $100 = $0; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $101 = $4; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $102 = $5; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $103 = (7 + ($102))|0; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $104 = (($103) - 1)|0; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $105 = $104<<1; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $106 = $105<<5; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $107 = (($101) + ($106)|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_hash_2n_n_mask($100,$buffer,$107)|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 168 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _gen_leaf_wots($leaf,$masks,$sk,$a) {
 $leaf = $leaf|0;
 $masks = $masks|0;
 $sk = $sk|0;
 $a = $a|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $pk = 0, $seed = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2192|0;
 $seed = sp + 2160|0;
 $pk = sp + 16|0;
 $0 = $leaf;
 $1 = $masks;
 $2 = $sk;
 $3 = $a;
 $4 = $2; //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = $3; //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _get_seed($seed,$4,$5); //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $6 = $1; //@line 91 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _wots_pkgen($pk,$seed,$6); //@line 91 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $0; //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = $1; //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _l_tree($7,$pk,$8); //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 94 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _wots_pkgen($pk,$sk,$masks) {
 $pk = $pk|0;
 $sk = $sk|0;
 $masks = $masks|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $pk;
 $1 = $sk;
 $2 = $masks;
 $3 = $0; //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $4 = $1; //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _expand_seed19($3,$4); //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $i = 0; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $5 = $i; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $6 = ($5|0)<(67); //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($6)) {
   break;
  }
  $7 = $0; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $8 = $i; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $8<<5; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = (($7) + ($9)|0); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $11 = $0; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = $i; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $12<<5; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($11) + ($13)|0); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $2; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($10,$14,$15,15); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = $i; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = (($16) + 1)|0; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $17; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 29 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _wots_sign($sig,$msg,$sk,$masks) {
 $sig = $sig|0;
 $msg = $msg|0;
 $sk = $sk|0;
 $masks = $masks|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $basew = 0, $c = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $basew = sp + 8|0;
 $0 = $sig;
 $1 = $msg;
 $2 = $sk;
 $3 = $masks;
 $c = 0; //@line 34 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $i = 0; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $4 = $i; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $5 = ($4|0)<(64); //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($5)) {
   break;
  }
  $6 = $i; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $7 = (($6|0) / 2)&-1; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $8 = $1; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = (($8) + ($7)|0); //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = HEAP8[$9>>0]|0; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $11 = $10&255; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = $11 & 15; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $i; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($basew) + ($13<<2)|0); //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$14>>2] = $12; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $i; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = (($15|0) / 2)&-1; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = $1; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = (($17) + ($16)|0); //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = HEAP8[$18>>0]|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $19&255; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $21 = $20 >> 4; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $i; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = (($22) + 1)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = (($basew) + ($23<<2)|0); //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$24>>2] = $21; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = $i; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = (($basew) + ($25<<2)|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $27 = HEAP32[$26>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = (15 - ($27))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $29 = $c; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $30 = (($29) + ($28))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $30; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $31 = $i; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $32 = (($31) + 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $33 = (($basew) + ($32<<2)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $34 = HEAP32[$33>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $35 = (15 - ($34))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $36 = $c; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $37 = (($36) + ($35))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $37; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $38 = $i; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $39 = (($38) + 2)|0; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $39; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 while(1) {
  $40 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $41 = ($40|0)<(67); //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($41)) {
   break;
  }
  $42 = $c; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $43 = $42 & 15; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $44 = $i; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $45 = (($basew) + ($44<<2)|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$45>>2] = $43; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $46 = $c; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $47 = $46 >> 4; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $47; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $48 = $i; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $49 = (($48) + 1)|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $49; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $50 = $0; //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $51 = $2; //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _expand_seed19($50,$51); //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $i = 0; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $52 = $i; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $53 = ($52|0)<(67); //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($53)) {
   break;
  }
  $54 = $0; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $55 = $i; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $56 = $55<<5; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $57 = (($54) + ($56)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $58 = $0; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $59 = $i; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $60 = $59<<5; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $61 = (($58) + ($60)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $62 = $3; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $63 = $i; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $64 = (($basew) + ($63<<2)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $65 = HEAP32[$64>>2]|0; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($57,$61,$62,$65); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $66 = $i; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $67 = (($66) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $67; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 81 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _wots_verify($pk,$sig,$msg,$masks) {
 $pk = $pk|0;
 $sig = $sig|0;
 $msg = $msg|0;
 $masks = $masks|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $basew = 0, $c = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $basew = sp + 8|0;
 $0 = $pk;
 $1 = $sig;
 $2 = $msg;
 $3 = $masks;
 $c = 0; //@line 85 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $i = 0; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $4 = $i; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $5 = ($4|0)<(64); //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($5)) {
   break;
  }
  $6 = $i; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $7 = (($6|0) / 2)&-1; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $8 = $2; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = (($8) + ($7)|0); //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = HEAP8[$9>>0]|0; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $11 = $10&255; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = $11 & 15; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $i; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($basew) + ($13<<2)|0); //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$14>>2] = $12; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $i; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = (($15|0) / 2)&-1; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = $2; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = (($17) + ($16)|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = HEAP8[$18>>0]|0; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $19&255; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $21 = $20 >> 4; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $i; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = (($22) + 1)|0; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = (($basew) + ($23<<2)|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$24>>2] = $21; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = $i; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = (($basew) + ($25<<2)|0); //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $27 = HEAP32[$26>>2]|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = (15 - ($27))|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $29 = $c; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $30 = (($29) + ($28))|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $30; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $31 = $i; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $32 = (($31) + 1)|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $33 = (($basew) + ($32<<2)|0); //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $34 = HEAP32[$33>>2]|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $35 = (15 - ($34))|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $36 = $c; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $37 = (($36) + ($35))|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $37; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $38 = $i; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $39 = (($38) + 2)|0; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $39; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 while(1) {
  $40 = $i; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $41 = ($40|0)<(67); //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($41)) {
   break;
  }
  $42 = $c; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $43 = $42 & 15; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $44 = $i; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $45 = (($basew) + ($44<<2)|0); //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$45>>2] = $43; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $46 = $c; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $47 = $46 >> 4; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $c = $47; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $48 = $i; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $49 = (($48) + 1)|0; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $49; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $i = 0; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $50 = $i; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $51 = ($50|0)<(67); //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($51)) {
   break;
  }
  $52 = $0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $53 = $i; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $54 = $53<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $55 = (($52) + ($54)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $56 = $1; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $57 = $i; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $58 = $57<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $59 = (($56) + ($58)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $60 = $3; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $61 = $i; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $62 = (($basew) + ($61<<2)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $63 = HEAP32[$62>>2]|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $64 = $63<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $65 = (($60) + ($64)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $66 = $i; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $67 = (($basew) + ($66<<2)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $68 = HEAP32[$67>>2]|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $69 = (15 - ($68))|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($55,$59,$65,$69); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $70 = $i; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $71 = (($70) + 1)|0; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $71; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 130 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _expand_seed19($outseeds,$inseed) {
 $outseeds = $outseeds|0;
 $inseed = $inseed|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = $outseeds;
 $1 = $inseed;
 $2 = $0; //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $3 = $1; //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _prg($2,2144,0,$3); //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 STACKTOP = sp;return; //@line 9 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _gen_chain($out,$seed,$masks,$chainlen) {
 $out = $out|0;
 $seed = $seed|0;
 $masks = $masks|0;
 $chainlen = $chainlen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = $out;
 $1 = $seed;
 $2 = $masks;
 $3 = $chainlen;
 $j = 0; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $4 = $j; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $5 = ($4|0)<(32); //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($5)) {
   break;
  }
  $6 = $j; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $7 = $1; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $8 = (($7) + ($6)|0); //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = HEAP8[$8>>0]|0; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $j; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $11 = $0; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = (($11) + ($10)|0); //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP8[$12>>0] = $9; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $j; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($13) + 1)|0; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $j = $14; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $i = 0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $15 = $i; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = $3; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = ($15|0)<($16|0); //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = $i; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = ($18|0)<(16); //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $17 ? $19 : 0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($20)) {
   break;
  }
  $21 = $0; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $0; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = $2; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = $i; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = $24<<5; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = (($23) + ($25)|0); //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  (_hash_n_n_mask($21,$22,$26)|0); //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $27 = $i; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = (($27) + 1)|0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $i = $28; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 20 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _zerobytes($r,$0,$1) {
 $r = $r|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $2 = $r;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $2; //@line 5 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 $p = $8; //@line 5 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 while(1) {
  $9 = $3; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $10 = $9; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $11 = HEAP32[$10>>2]|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $12 = (($9) + 4)|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $13 = $12; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $14 = HEAP32[$13>>2]|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $15 = (_i64Add(($11|0),($14|0),-1,-1)|0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $16 = tempRet0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $17 = $3; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $18 = $17; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP32[$18>>2] = $15; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $19 = (($17) + 4)|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $20 = $19; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP32[$20>>2] = $16; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $21 = ($11|0)!=(0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $22 = ($14|0)!=(0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $23 = $21 | $22; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  if (!($23)) {
   break;
  }
  $24 = $p; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $25 = ((($24)) + 1|0); //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $p = $25; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP8[$24>>0] = 0; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 }
 $26 = $2; //@line 8 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 STACKTOP = sp;return ($26|0); //@line 8 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
}
function _sphincsjs_public_key_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1056; //@line 5 "sphincs.c"
}
function _sphincsjs_secret_key_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1088; //@line 9 "sphincs.c"
}
function _sphincsjs_signature_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 41000; //@line 13 "sphincs.c"
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[204>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 248;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 60|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[252>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (292 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (292 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[252>>2] = $22;
     } else {
      $23 = HEAP32[(268)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(260)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (292 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (292 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[252>>2] = $74;
       $89 = $34;
      } else {
       $75 = HEAP32[(268)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(260)>>2]|0;
        $89 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $88 = ($89|0)==(0);
     if (!($88)) {
      $90 = HEAP32[(272)>>2]|0;
      $91 = $89 >>> 3;
      $92 = $91 << 1;
      $93 = (292 + ($92<<2)|0);
      $94 = HEAP32[252>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[252>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (292 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (292 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(268)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(260)>>2] = $81;
     HEAP32[(272)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(256)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (556 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(268)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (556 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(256)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(256)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(268)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(268)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(268)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(260)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(272)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (292 + ($229<<2)|0);
       $231 = HEAP32[252>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[252>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (292 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (292 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(268)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(260)>>2] = $rsize$0$i$lcssa;
      HEAP32[(272)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(256)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (556 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (556 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(260)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(268)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (556 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(256)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(256)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(268)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(268)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(268)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (292 + ($424<<2)|0);
          $426 = HEAP32[252>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[252>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (292 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (292 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(268)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (556 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(256)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(256)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(268)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(268)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(260)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(272)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(272)>>2] = $514;
   HEAP32[(260)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(260)>>2] = 0;
   HEAP32[(272)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(264)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(264)>>2] = $528;
  $529 = HEAP32[(276)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(276)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[724>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(732)>>2] = $538;
    HEAP32[(728)>>2] = $538;
    HEAP32[(736)>>2] = -1;
    HEAP32[(740)>>2] = -1;
    HEAP32[(744)>>2] = 0;
    HEAP32[(696)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[724>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(732)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(692)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(684)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(696)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(276)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (700);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(264)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(728)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(684)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(692)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(732)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(696)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(696)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(684)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(684)>>2] = $632;
  $633 = HEAP32[(688)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(688)>>2] = $632;
  }
  $635 = HEAP32[(276)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(268)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(268)>>2] = $tbase$255$i;
    }
    HEAP32[(700)>>2] = $tbase$255$i;
    HEAP32[(704)>>2] = $tsize$254$i;
    HEAP32[(712)>>2] = 0;
    $640 = HEAP32[724>>2]|0;
    HEAP32[(288)>>2] = $640;
    HEAP32[(284)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (292 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (292 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (292 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(276)>>2] = $654;
    HEAP32[(264)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(740)>>2]|0;
    HEAP32[(280)>>2] = $659;
   } else {
    $sp$084$i = (700);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(264)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(276)>>2] = $684;
       HEAP32[(264)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(740)>>2]|0;
       HEAP32[(280)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(268)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(268)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (700);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (700);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(264)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(264)>>2] = $730;
        HEAP32[(276)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(272)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(260)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(260)>>2] = $736;
         HEAP32[(272)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L332: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (292 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[252>>2]|0;
            $763 = $762 & $761;
            HEAP32[252>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (556 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(256)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(256)>>2] = $806;
             break L332;
            } else {
             $807 = HEAP32[(268)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L332;
             }
            }
           } while(0);
           $814 = HEAP32[(268)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(268)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (292 + ($840<<2)|0);
         $842 = HEAP32[252>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[252>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (292 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (292 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(268)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (556 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(256)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(256)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L418: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(268)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(268)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (700);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(276)>>2] = $953;
    HEAP32[(264)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(740)>>2]|0;
    HEAP32[(280)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(700)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(700)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(700)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(700)+12>>2]|0;
    HEAP32[(700)>>2] = $tbase$255$i;
    HEAP32[(704)>>2] = $tsize$254$i;
    HEAP32[(712)>>2] = 0;
    HEAP32[(708)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (292 + ($977<<2)|0);
      $979 = HEAP32[252>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[252>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (292 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (292 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(268)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (556 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(256)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(256)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(268)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(268)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(264)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(264)>>2] = $1062;
   $1063 = HEAP32[(276)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(276)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(268)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(272)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(260)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (292 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[252>>2]|0;
     $36 = $35 & $34;
     HEAP32[252>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (556 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(256)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(256)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(268)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(268)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(268)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(276)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(264)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(264)>>2] = $120;
   HEAP32[(276)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(272)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(272)>>2] = 0;
   HEAP32[(260)>>2] = 0;
   return;
  }
  $125 = HEAP32[(272)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(260)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(260)>>2] = $128;
   HEAP32[(272)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (292 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(268)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[252>>2]|0;
     $152 = $151 & $150;
     HEAP32[252>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(268)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(268)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(268)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (556 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(256)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(256)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(268)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(268)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(268)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(272)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(260)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (292 + ($233<<2)|0);
  $235 = HEAP32[252>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[252>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (292 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (292 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(268)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (556 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(256)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(256)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(268)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(268)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(284)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(284)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (708);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(284)>>2] = -1;
 return;
}
function runPostSets() {
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  


// EMSCRIPTEN_END_FUNCS


  return { _crypto_sign_sphincs_open: _crypto_sign_sphincs_open, _i64Subtract: _i64Subtract, _free: _free, _crypto_sign_sphincs: _crypto_sign_sphincs, _i64Add: _i64Add, _crypto_sign_sphincs_keypair: _crypto_sign_sphincs_keypair, _sphincsjs_public_key_bytes: _sphincsjs_public_key_bytes, _memset: _memset, _sphincsjs_secret_key_bytes: _sphincsjs_secret_key_bytes, _malloc: _malloc, _memcpy: _memcpy, _bitshift64Lshr: _bitshift64Lshr, _sphincsjs_signature_bytes: _sphincsjs_signature_bytes, _randombytes_stir: _randombytes_stir, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0 };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var _crypto_sign_sphincs_open = Module["_crypto_sign_sphincs_open"] = asm["_crypto_sign_sphincs_open"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _crypto_sign_sphincs = Module["_crypto_sign_sphincs"] = asm["_crypto_sign_sphincs"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _crypto_sign_sphincs_keypair = Module["_crypto_sign_sphincs_keypair"] = asm["_crypto_sign_sphincs_keypair"];
var _sphincsjs_public_key_bytes = Module["_sphincsjs_public_key_bytes"] = asm["_sphincsjs_public_key_bytes"];
var _memset = Module["_memset"] = asm["_memset"];
var _sphincsjs_secret_key_bytes = Module["_sphincsjs_secret_key_bytes"] = asm["_sphincsjs_secret_key_bytes"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _sphincsjs_signature_bytes = Module["_sphincsjs_signature_bytes"] = asm["_sphincsjs_signature_bytes"];
var _randombytes_stir = Module["_randombytes_stir"] = asm["_randombytes_stir"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_i64Add","_i64Subtract","_memset","_bitshift64Lshr","_bitshift64Shl","_memcpy","_bitshift64Ashr","_llvm_cttz_i32"]


;

function dataReturn (returnValue, result) {
	if (returnValue === 0) {
		return result;
	}
	else {
		throw new Error('SPHINCS error: ' + returnValue);
	}
}

function dataResult (buffer, bytes) {
	return new Uint8Array(
		new Uint8Array(Module.HEAPU8.buffer, buffer, bytes)
	);
}

function dataFree (buffer) {
	try {
		Module._free(buffer);
	}
	catch (_) {}
}


Module._randombytes_stir();


var sphincs	= {
	publicKeyLength: Module._sphincsjs_public_key_bytes(),
	privateKeyLength: Module._sphincsjs_secret_key_bytes(),
	signatureLength: Module._sphincsjs_signature_bytes(),

	keyPair: function () {
		var publicKeyBuffer		= Module._malloc(sphincs.publicKeyLength);
		var privateKeyBuffer	= Module._malloc(sphincs.privateKeyLength);

		try {
			var returnValue	= Module._crypto_sign_sphincs_keypair(
				publicKeyBuffer,
				privateKeyBuffer
			);

			return dataReturn(returnValue, {
				publicKey: dataResult(publicKeyBuffer, sphincs.publicKeyLength),
				privateKey: dataResult(privateKeyBuffer, sphincs.privateKeyLength)
			});
		}
		finally {
			dataFree(publicKeyBuffer);
			dataFree(privateKeyBuffer);
		}
	},

	sign: function (message, privateKey) {
		var signedLength		= message.length + sphincs.signatureLength;

		var signedBuffer		= Module._malloc(signedLength);
		var messageBuffer		= Module._malloc(message.length);
		var privateKeyBuffer	= Module._malloc(sphincs.privateKeyLength);

		Module.writeArrayToMemory(message, messageBuffer);
		Module.writeArrayToMemory(privateKey, privateKeyBuffer);

		try {
			var returnValue	= Module._crypto_sign_sphincs(
				signedBuffer,
				0,
				messageBuffer,
				message.length,
				privateKeyBuffer
			);

			return dataReturn(returnValue, dataResult(signedBuffer, signedLength));
		}
		finally {
			dataFree(signedBuffer);
			dataFree(messageBuffer);
			dataFree(privateKeyBuffer);
		}
	},

	signDetached: function (message, privateKey) {
		return new Uint8Array(
			sphincs.sign(message, privateKey).buffer,
			0,
			sphincs.signatureLength
		);
	},

	open: function (signed, publicKey) {
		var openedLength	= signed.length - sphincs.signatureLength;

		var openedBuffer	= Module._malloc(openedLength);
		var signedBuffer	= Module._malloc(signed.length);
		var publicKeyBuffer	= Module._malloc(sphincs.publicKeyLength);

		Module.writeArrayToMemory(signed, signedBuffer);
		Module.writeArrayToMemory(publicKey, publicKeyBuffer);

		try {
			var returnValue	= Module._crypto_sign_sphincs_open(
				openedBuffer,
				0,
				signedBuffer,
				signed.length,
				publicKeyBuffer
			);

			return dataReturn(returnValue, dataResult(openedBuffer, openedLength));
		}
		finally {
			dataFree(openedBuffer);
			dataFree(signedBuffer);
			dataFree(publicKeyBuffer);
		}
	},

	verifyDetached: function (signature, message, publicKey) {
		var signed	= new Uint8Array(sphincs.signatureLength + message.length);
		signed.set(signature);
		signed.set(message, sphincs.signatureLength);

		try {
			sphincs.open(signed, publicKey);
			return true; 
		}
		catch (_) {
			return false;
		}
		finally {
			dataFree(signed);
		}
	}
};



return sphincs;

}());

self.sphincs	= sphincs;

//# sourceMappingURL=sphincs.debug.js.map