var sphincs = (function () { 

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  abort('NO_DYNAMIC_EXECUTION=1 was set, cannot eval');
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 1*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-1)/1] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    abort('NO_DYNAMIC_EXECUTION=1 was set, cannot eval');
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  // NO_DYNAMIC_EXECUTION is on, so we can't use the fast version of cwrap.
  // Fall back to returning a bound version of ccall.
  cwrap = function cwrap(ident, returnType, argTypes) {
    return function() {
      return ccall(ident, returnType, argTypes, arguments);
    }
  }
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var s = func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 8388608;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var WASM_PAGE_SIZE = 64 * 1024;

var totalMemory = WASM_PAGE_SIZE;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024;
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);    
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;





// === Body ===

var ASM_CONSTS = [function() { { return Module.getRandomValue(); } },
 function() { { if (Module.getRandomValue === undefined) { try { var window_ = "object" === typeof window ? window : self, crypto_ = typeof window_.crypto !== "undefined" ? window_.crypto : window_.msCrypto, randomValuesStandard = function() { var buf = new Uint32Array(1); crypto_.getRandomValues(buf); return buf[0] >>> 0; }; randomValuesStandard(); Module.getRandomValue = randomValuesStandard; } catch (e) { try { var crypto = require('crypto'), randomValueNodeJS = function() { var buf = crypto.randomBytes(4); return (buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3]) >>> 0; }; randomValueNodeJS(); Module.getRandomValue = randomValueNodeJS; } catch (e) { throw 'No secure random number generator found'; } } } } }];

function _emscripten_asm_const_i(code) {
 return ASM_CONSTS[code]();
}

function _emscripten_asm_const_v(code) {
 return ASM_CONSTS[code]();
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 2384;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([211,8,163,133,136,106,63,36,68,115,112,3,46,138,25,19,208,49,159,41,34,56,9,164,137,108,78,236,152,250,46,8,119,19,208,56,230,33,40,69,108,12,233,52,207,102,84,190,221,80,124,201,183,41,172,192,23,9,71,181,181,213,132,63,27,251,121,137,217,213,22,146,172,181,223,152,166,11,49,209,183,223,26,208,219,114,253,47,150,126,38,106,237,175,225,184,153,127,44,241,69,144,124,186,247,108,145,179,71,153,161,36,22,252,142,133,226,242,1,8,105,78,87,113,216,32,105,99,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,6,7,0,0,123,32,114,101,116,117,114,110,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,40,41,59,32,125,0,123,32,105,102,32,40,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,61,61,32,117,110,100,101,102,105,110,101,100,41,32,123,32,116,114,121,32,123,32,118,97,114,32,119,105,110,100,111,119,95,32,61,32,34,111,98,106,101,99,116,34,32,61,61,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,63,32,119,105,110,100,111,119,32,58,32,115,101,108,102,44,32,99,114,121,112,116,111,95,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,119,105,110,100,111,119,95,46,99,114,121,112,116,111,32,58,32,119,105,110,100,111,119,95,46,109,115,67,114,121,112,116,111,44,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,49,41,59,32,99,114,121,112,116,111,95,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,98,117,102,41,59,32,114,101,116,117,114,110,32,98,117,102,91,48,93,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,115,83,116,97,110,100,97,114,100,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,114,121,32,123,32,118,97,114,32,99,114,121,112,116,111,32,61,32,114,101,113,117,105,114,101,40,39,99,114,121,112,116,111,39,41,44,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,32,118,97,114,32,98,117,102,32,61,32,99,114,121,112,116,111,46,114,97,110,100,111,109,66,121,116,101,115,40,52,41,59,32,114,101,116,117,114,110,32,40,98,117,102,91,48,93,32,60,60,32,50,52,32,124,32,98,117,102,91,49,93,32,60,60,32,49,54,32,124,32,98,117,102,91,50,93,32,60,60,32,56,32,124,32,98,117,102,91,51,93,41,32,62,62,62,32,48,59,32,125,59,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,40,41,59,32,77,111,100,117,108,101,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,32,61,32,114,97,110,100,111,109,86,97,108,117,101,78,111,100,101,74,83,59,32,125,32,99,97,116,99,104,32,40,101,41,32,123,32,116,104,114,111,119,32,39,78,111,32,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,32,102,111,117,110,100,39,59,32,125,32,125,32,125,32,125,0,98,117,102,95,108,101,110,32,60,61,32,83,73,90,69,95,77,65,88,0,108,105,98,115,111,100,105,117,109,47,115,114,99,47,108,105,98,115,111,100,105,117,109,47,114,97,110,100,111,109,98,121,116,101,115,47,114,97,110,100,111,109,98,121,116,101,115,46,99,0,114,97,110,100,111,109,98,121,116,101,115,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,120,112,97,110,100,32,49,54,45,98,121,116,101,32,107,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107,101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,116,111,32,54,52,45,98,121,116,101,32,115,116,97,116,101,33,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _emscripten_asm_const=true;

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    } 
  Module["_sbrk"] = _sbrk;

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___uremdi3"] = ___uremdi3;

  var _emscripten_asm_const_int=true;

   
  Module["_pthread_self"] = _pthread_self;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory



Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "_emscripten_asm_const_i": _emscripten_asm_const_i, "_abort": _abort, "___setErrNo": ___setErrNo, "_llvm_stacksave": _llvm_stacksave, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_asm_const_v": _emscripten_asm_const_v, "_llvm_stackrestore": _llvm_stackrestore, "___assert_fail": ___assert_fail, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var _emscripten_asm_const_i=env._emscripten_asm_const_i;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var _llvm_stacksave=env._llvm_stacksave;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_asm_const_v=env._emscripten_asm_const_v;
  var _llvm_stackrestore=env._llvm_stackrestore;
  var ___assert_fail=env.___assert_fail;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _randombytes_random() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = _emscripten_asm_const_i(0)|0; //@line 70 "libsodium/src/libsodium/randombytes/randombytes.c"
 return ($0|0); //@line 70 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_stir() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _emscripten_asm_const_v(1); //@line 85 "libsodium/src/libsodium/randombytes/randombytes.c"
 return; //@line 113 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_buf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 151 "libsodium/src/libsodium/randombytes/randombytes.c"
 $4 = $6; //@line 151 "libsodium/src/libsodium/randombytes/randombytes.c"
 $5 = 0; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
 while(1) {
  $7 = $5; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
  $8 = $3; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
  $9 = ($7>>>0)<($8>>>0); //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
  if (!($9)) {
   break;
  }
  $10 = (_randombytes_random()|0); //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  $11 = $10&255; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  $12 = $5; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  $13 = $4; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  $14 = (($13) + ($12)|0); //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  HEAP8[$14>>0] = $11; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
  $15 = $5; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
  $16 = (($15) + 1)|0; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
  $5 = $16; //@line 154 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
 STACKTOP = sp;return; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $4; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $10 = $9; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $11 = HEAP32[$10>>2]|0; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $12 = (($9) + 4)|0; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $13 = $12; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $14 = HEAP32[$13>>2]|0; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $15 = ($14>>>0)<(0); //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $16 = ($11>>>0)<=(4294967295); //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $17 = ($14|0)==(0); //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $18 = $17 & $16; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 $19 = $15 | $18; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 if ($19) {
  $20 = $3; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $21 = $4; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $22 = $21; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $23 = HEAP32[$22>>2]|0; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $24 = (($21) + 4)|0; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $25 = $24; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  $26 = HEAP32[$25>>2]|0; //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  _randombytes_buf($20,$23); //@line 173 "libsodium/src/libsodium/randombytes/randombytes.c"
  STACKTOP = sp;return; //@line 174 "libsodium/src/libsodium/randombytes/randombytes.c"
 } else {
  ___assert_fail((947|0),(967|0),172,(1017|0)); //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
  // unreachable; //@line 172 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
}
function _blake256_compress($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0;
 var $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0;
 var $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0;
 var $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0;
 var $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0;
 var $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0;
 var $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0;
 var $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0;
 var $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0;
 var $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0;
 var $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0;
 var $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0;
 var $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0;
 var $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0;
 var $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0;
 var $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0;
 var $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $4 = sp + 72|0;
 $5 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $6 = 0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $7 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $8 = ($7>>>0)<(16); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($8)) {
   break;
  }
  $9 = $3; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $10 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $11 = $10<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $12 = (($9) + ($11)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $14 = $13&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $15 = $14 << 24; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $16 = $3; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $17 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $18 = $17<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $19 = (($16) + ($18)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $20 = ((($19)) + 1|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $21 = HEAP8[$20>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $22 = $21&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $23 = $22 << 16; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $24 = $15 | $23; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $25 = $3; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $26 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $27 = $26<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $28 = (($25) + ($27)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $29 = ((($28)) + 2|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $30 = HEAP8[$29>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $31 = $30&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $32 = $31 << 8; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $33 = $24 | $32; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $34 = $3; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $35 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $36 = $35<<2; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $37 = (($34) + ($36)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $38 = ((($37)) + 3|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $39 = HEAP8[$38>>0]|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $40 = $39&255; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $41 = $33 | $40; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $42 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $43 = (($5) + ($42<<2)|0); //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$43>>2] = $41; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $44 = $6; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $45 = (($44) + 1)|0; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $45; //@line 70 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $6 = 0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $46 = $6; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $47 = ($46>>>0)<(8); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($47)) {
   break;
  }
  $48 = $6; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $49 = $2; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $50 = (($49) + ($48<<2)|0); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $51 = HEAP32[$50>>2]|0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $52 = $6; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $53 = (($4) + ($52<<2)|0); //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$53>>2] = $51; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $54 = $6; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $55 = (($54) + 1)|0; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $55; //@line 71 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $56 = $2; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $57 = ((($56)) + 32|0); //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $58 = HEAP32[$57>>2]|0; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $59 = $58 ^ 608135816; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $60 = ((($4)) + 32|0); //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$60>>2] = $59; //@line 72 "c_src/crypto_hash/blake256/ref/hash.c"
 $61 = $2; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $62 = ((($61)) + 32|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $63 = ((($62)) + 4|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $64 = HEAP32[$63>>2]|0; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $65 = $64 ^ -2052912941; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $66 = ((($4)) + 36|0); //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$66>>2] = $65; //@line 73 "c_src/crypto_hash/blake256/ref/hash.c"
 $67 = $2; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $68 = ((($67)) + 32|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $69 = ((($68)) + 8|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $70 = HEAP32[$69>>2]|0; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $71 = $70 ^ 320440878; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $72 = ((($4)) + 40|0); //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$72>>2] = $71; //@line 74 "c_src/crypto_hash/blake256/ref/hash.c"
 $73 = $2; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $74 = ((($73)) + 32|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $75 = ((($74)) + 12|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $76 = HEAP32[$75>>2]|0; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $77 = $76 ^ 57701188; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $78 = ((($4)) + 44|0); //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$78>>2] = $77; //@line 75 "c_src/crypto_hash/blake256/ref/hash.c"
 $79 = ((($4)) + 48|0); //@line 76 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$79>>2] = -1542899678; //@line 76 "c_src/crypto_hash/blake256/ref/hash.c"
 $80 = ((($4)) + 52|0); //@line 77 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$80>>2] = 698298832; //@line 77 "c_src/crypto_hash/blake256/ref/hash.c"
 $81 = ((($4)) + 56|0); //@line 78 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$81>>2] = 137296536; //@line 78 "c_src/crypto_hash/blake256/ref/hash.c"
 $82 = ((($4)) + 60|0); //@line 79 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$82>>2] = -330404727; //@line 79 "c_src/crypto_hash/blake256/ref/hash.c"
 $83 = $2; //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $84 = ((($83)) + 60|0); //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $85 = HEAP32[$84>>2]|0; //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 $86 = ($85|0)==(0); //@line 80 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($86) {
  $87 = $2; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $88 = ((($87)) + 48|0); //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $89 = HEAP32[$88>>2]|0; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $90 = ((($4)) + 48|0); //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $91 = HEAP32[$90>>2]|0; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $92 = $91 ^ $89; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$90>>2] = $92; //@line 81 "c_src/crypto_hash/blake256/ref/hash.c"
  $93 = $2; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $94 = ((($93)) + 48|0); //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $95 = HEAP32[$94>>2]|0; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $96 = ((($4)) + 52|0); //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $97 = HEAP32[$96>>2]|0; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $98 = $97 ^ $95; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$96>>2] = $98; //@line 82 "c_src/crypto_hash/blake256/ref/hash.c"
  $99 = $2; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $100 = ((($99)) + 48|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $101 = ((($100)) + 4|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $102 = HEAP32[$101>>2]|0; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $103 = ((($4)) + 56|0); //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $104 = HEAP32[$103>>2]|0; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $105 = $104 ^ $102; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$103>>2] = $105; //@line 83 "c_src/crypto_hash/blake256/ref/hash.c"
  $106 = $2; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $107 = ((($106)) + 48|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $108 = ((($107)) + 4|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $109 = HEAP32[$108>>2]|0; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $110 = ((($4)) + 60|0); //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $111 = HEAP32[$110>>2]|0; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  $112 = $111 ^ $109; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$110>>2] = $112; //@line 84 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $6 = 0; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $113 = $6; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $114 = ($113>>>0)<(14); //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($114)) {
   break;
  }
  $115 = $6; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $116 = (1029 + ($115<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $117 = HEAP8[$116>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $118 = $117&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $119 = (($5) + ($118<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $120 = HEAP32[$119>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $121 = $6; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $122 = (1029 + ($121<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $123 = ((($122)) + 1|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $124 = HEAP8[$123>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $125 = $124&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $126 = (136 + ($125<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $127 = HEAP32[$126>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $128 = $120 ^ $127; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $129 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $130 = HEAP32[$129>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $131 = (($128) + ($130))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $132 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $133 = (($132) + ($131))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$4>>2] = $133; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $134 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $135 = HEAP32[$134>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $136 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $137 = $135 ^ $136; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $138 = $137 << 16; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $139 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $140 = HEAP32[$139>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $141 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $142 = $140 ^ $141; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $143 = $142 >>> 16; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $144 = $138 | $143; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $145 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$145>>2] = $144; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $146 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $147 = HEAP32[$146>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $148 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $149 = HEAP32[$148>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $150 = (($149) + ($147))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$148>>2] = $150; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $151 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $152 = HEAP32[$151>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $153 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $154 = HEAP32[$153>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $155 = $152 ^ $154; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $156 = $155 << 20; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $157 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $158 = HEAP32[$157>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $159 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $160 = HEAP32[$159>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $161 = $158 ^ $160; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $162 = $161 >>> 12; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $163 = $156 | $162; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $164 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$164>>2] = $163; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $165 = $6; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $166 = (1029 + ($165<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $167 = ((($166)) + 1|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $168 = HEAP8[$167>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $169 = $168&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $170 = (($5) + ($169<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $171 = HEAP32[$170>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $172 = $6; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $173 = (1029 + ($172<<4)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $174 = HEAP8[$173>>0]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $175 = $174&255; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $176 = (136 + ($175<<2)|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $177 = HEAP32[$176>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $178 = $171 ^ $177; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $179 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $180 = HEAP32[$179>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $181 = (($178) + ($180))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $182 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $183 = (($182) + ($181))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$4>>2] = $183; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $184 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $185 = HEAP32[$184>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $186 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $187 = $185 ^ $186; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $188 = $187 << 24; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $189 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $190 = HEAP32[$189>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $191 = HEAP32[$4>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $192 = $190 ^ $191; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $193 = $192 >>> 8; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $194 = $188 | $193; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $195 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$195>>2] = $194; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $196 = ((($4)) + 48|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $197 = HEAP32[$196>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $198 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $199 = HEAP32[$198>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $200 = (($199) + ($197))|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$198>>2] = $200; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $201 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $202 = HEAP32[$201>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $203 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $204 = HEAP32[$203>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $205 = $202 ^ $204; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $206 = $205 << 25; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $207 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $208 = HEAP32[$207>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $209 = ((($4)) + 32|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $210 = HEAP32[$209>>2]|0; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $211 = $208 ^ $210; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $212 = $211 >>> 7; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $213 = $206 | $212; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $214 = ((($4)) + 16|0); //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$214>>2] = $213; //@line 88 "c_src/crypto_hash/blake256/ref/hash.c"
  $215 = $6; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $216 = (1029 + ($215<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $217 = ((($216)) + 2|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $218 = HEAP8[$217>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $219 = $218&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $220 = (($5) + ($219<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $221 = HEAP32[$220>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $222 = $6; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $223 = (1029 + ($222<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $224 = ((($223)) + 3|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $225 = HEAP8[$224>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $226 = $225&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $227 = (136 + ($226<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $228 = HEAP32[$227>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $229 = $221 ^ $228; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $230 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $231 = HEAP32[$230>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $232 = (($229) + ($231))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $233 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $234 = HEAP32[$233>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $235 = (($234) + ($232))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$233>>2] = $235; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $236 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $237 = HEAP32[$236>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $238 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $239 = HEAP32[$238>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $240 = $237 ^ $239; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $241 = $240 << 16; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $242 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $243 = HEAP32[$242>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $244 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $245 = HEAP32[$244>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $246 = $243 ^ $245; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $247 = $246 >>> 16; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $248 = $241 | $247; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $249 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$249>>2] = $248; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $250 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $251 = HEAP32[$250>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $252 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $253 = HEAP32[$252>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $254 = (($253) + ($251))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$252>>2] = $254; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $255 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $256 = HEAP32[$255>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $257 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $258 = HEAP32[$257>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $259 = $256 ^ $258; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $260 = $259 << 20; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $261 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $262 = HEAP32[$261>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $263 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $264 = HEAP32[$263>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $265 = $262 ^ $264; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $266 = $265 >>> 12; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $267 = $260 | $266; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $268 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$268>>2] = $267; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $269 = $6; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $270 = (1029 + ($269<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $271 = ((($270)) + 3|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $272 = HEAP8[$271>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $273 = $272&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $274 = (($5) + ($273<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $275 = HEAP32[$274>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $276 = $6; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $277 = (1029 + ($276<<4)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $278 = ((($277)) + 2|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $279 = HEAP8[$278>>0]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $280 = $279&255; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $281 = (136 + ($280<<2)|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $282 = HEAP32[$281>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $283 = $275 ^ $282; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $284 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $285 = HEAP32[$284>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $286 = (($283) + ($285))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $287 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $288 = HEAP32[$287>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $289 = (($288) + ($286))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$287>>2] = $289; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $290 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $291 = HEAP32[$290>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $292 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $293 = HEAP32[$292>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $294 = $291 ^ $293; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $295 = $294 << 24; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $296 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $297 = HEAP32[$296>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $298 = ((($4)) + 4|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $299 = HEAP32[$298>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $300 = $297 ^ $299; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $301 = $300 >>> 8; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $302 = $295 | $301; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $303 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$303>>2] = $302; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $304 = ((($4)) + 52|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $305 = HEAP32[$304>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $306 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $307 = HEAP32[$306>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $308 = (($307) + ($305))|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$306>>2] = $308; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $309 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $310 = HEAP32[$309>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $311 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $312 = HEAP32[$311>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $313 = $310 ^ $312; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $314 = $313 << 25; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $315 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $316 = HEAP32[$315>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $317 = ((($4)) + 36|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $318 = HEAP32[$317>>2]|0; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $319 = $316 ^ $318; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $320 = $319 >>> 7; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $321 = $314 | $320; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $322 = ((($4)) + 20|0); //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$322>>2] = $321; //@line 89 "c_src/crypto_hash/blake256/ref/hash.c"
  $323 = $6; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $324 = (1029 + ($323<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $325 = ((($324)) + 4|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $326 = HEAP8[$325>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $327 = $326&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $328 = (($5) + ($327<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $329 = HEAP32[$328>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $330 = $6; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $331 = (1029 + ($330<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $332 = ((($331)) + 5|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $333 = HEAP8[$332>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $334 = $333&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $335 = (136 + ($334<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $336 = HEAP32[$335>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $337 = $329 ^ $336; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $338 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $339 = HEAP32[$338>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $340 = (($337) + ($339))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $341 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $342 = HEAP32[$341>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $343 = (($342) + ($340))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$341>>2] = $343; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $344 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $345 = HEAP32[$344>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $346 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $347 = HEAP32[$346>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $348 = $345 ^ $347; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $349 = $348 << 16; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $350 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $351 = HEAP32[$350>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $352 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $353 = HEAP32[$352>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $354 = $351 ^ $353; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $355 = $354 >>> 16; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $356 = $349 | $355; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $357 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$357>>2] = $356; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $358 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $359 = HEAP32[$358>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $360 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $361 = HEAP32[$360>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $362 = (($361) + ($359))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$360>>2] = $362; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $363 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $364 = HEAP32[$363>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $365 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $366 = HEAP32[$365>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $367 = $364 ^ $366; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $368 = $367 << 20; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $369 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $370 = HEAP32[$369>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $371 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $372 = HEAP32[$371>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $373 = $370 ^ $372; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $374 = $373 >>> 12; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $375 = $368 | $374; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $376 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$376>>2] = $375; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $377 = $6; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $378 = (1029 + ($377<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $379 = ((($378)) + 5|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $380 = HEAP8[$379>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $381 = $380&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $382 = (($5) + ($381<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $383 = HEAP32[$382>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $384 = $6; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $385 = (1029 + ($384<<4)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $386 = ((($385)) + 4|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $387 = HEAP8[$386>>0]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $388 = $387&255; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $389 = (136 + ($388<<2)|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $390 = HEAP32[$389>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $391 = $383 ^ $390; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $392 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $393 = HEAP32[$392>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $394 = (($391) + ($393))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $395 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $396 = HEAP32[$395>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $397 = (($396) + ($394))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$395>>2] = $397; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $398 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $399 = HEAP32[$398>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $400 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $401 = HEAP32[$400>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $402 = $399 ^ $401; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $403 = $402 << 24; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $404 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $405 = HEAP32[$404>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $406 = ((($4)) + 8|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $407 = HEAP32[$406>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $408 = $405 ^ $407; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $409 = $408 >>> 8; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $410 = $403 | $409; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $411 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$411>>2] = $410; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $412 = ((($4)) + 56|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $413 = HEAP32[$412>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $414 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $415 = HEAP32[$414>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $416 = (($415) + ($413))|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$414>>2] = $416; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $417 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $418 = HEAP32[$417>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $419 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $420 = HEAP32[$419>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $421 = $418 ^ $420; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $422 = $421 << 25; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $423 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $424 = HEAP32[$423>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $425 = ((($4)) + 40|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $426 = HEAP32[$425>>2]|0; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $427 = $424 ^ $426; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $428 = $427 >>> 7; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $429 = $422 | $428; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $430 = ((($4)) + 24|0); //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$430>>2] = $429; //@line 90 "c_src/crypto_hash/blake256/ref/hash.c"
  $431 = $6; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $432 = (1029 + ($431<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $433 = ((($432)) + 6|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $434 = HEAP8[$433>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $435 = $434&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $436 = (($5) + ($435<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $437 = HEAP32[$436>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $438 = $6; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $439 = (1029 + ($438<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $440 = ((($439)) + 7|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $441 = HEAP8[$440>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $442 = $441&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $443 = (136 + ($442<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $444 = HEAP32[$443>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $445 = $437 ^ $444; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $446 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $447 = HEAP32[$446>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $448 = (($445) + ($447))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $449 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $450 = HEAP32[$449>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $451 = (($450) + ($448))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$449>>2] = $451; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $452 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $453 = HEAP32[$452>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $454 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $455 = HEAP32[$454>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $456 = $453 ^ $455; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $457 = $456 << 16; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $458 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $459 = HEAP32[$458>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $460 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $461 = HEAP32[$460>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $462 = $459 ^ $461; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $463 = $462 >>> 16; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $464 = $457 | $463; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $465 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$465>>2] = $464; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $466 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $467 = HEAP32[$466>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $468 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $469 = HEAP32[$468>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $470 = (($469) + ($467))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$468>>2] = $470; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $471 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $472 = HEAP32[$471>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $473 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $474 = HEAP32[$473>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $475 = $472 ^ $474; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $476 = $475 << 20; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $477 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $478 = HEAP32[$477>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $479 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $480 = HEAP32[$479>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $481 = $478 ^ $480; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $482 = $481 >>> 12; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $483 = $476 | $482; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $484 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$484>>2] = $483; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $485 = $6; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $486 = (1029 + ($485<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $487 = ((($486)) + 7|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $488 = HEAP8[$487>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $489 = $488&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $490 = (($5) + ($489<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $491 = HEAP32[$490>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $492 = $6; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $493 = (1029 + ($492<<4)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $494 = ((($493)) + 6|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $495 = HEAP8[$494>>0]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $496 = $495&255; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $497 = (136 + ($496<<2)|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $498 = HEAP32[$497>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $499 = $491 ^ $498; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $500 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $501 = HEAP32[$500>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $502 = (($499) + ($501))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $503 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $504 = HEAP32[$503>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $505 = (($504) + ($502))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$503>>2] = $505; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $506 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $507 = HEAP32[$506>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $508 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $509 = HEAP32[$508>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $510 = $507 ^ $509; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $511 = $510 << 24; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $512 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $513 = HEAP32[$512>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $514 = ((($4)) + 12|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $515 = HEAP32[$514>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $516 = $513 ^ $515; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $517 = $516 >>> 8; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $518 = $511 | $517; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $519 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$519>>2] = $518; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $520 = ((($4)) + 60|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $521 = HEAP32[$520>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $522 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $523 = HEAP32[$522>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $524 = (($523) + ($521))|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$522>>2] = $524; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $525 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $526 = HEAP32[$525>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $527 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $528 = HEAP32[$527>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $529 = $526 ^ $528; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $530 = $529 << 25; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $531 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $532 = HEAP32[$531>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $533 = ((($4)) + 44|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $534 = HEAP32[$533>>2]|0; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $535 = $532 ^ $534; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $536 = $535 >>> 7; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $537 = $530 | $536; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $538 = ((($4)) + 28|0); //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$538>>2] = $537; //@line 91 "c_src/crypto_hash/blake256/ref/hash.c"
  $539 = $6; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $540 = (1029 + ($539<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $541 = ((($540)) + 14|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $542 = HEAP8[$541>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $543 = $542&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $544 = (($5) + ($543<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $545 = HEAP32[$544>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $546 = $6; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $547 = (1029 + ($546<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $548 = ((($547)) + 15|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $549 = HEAP8[$548>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $550 = $549&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $551 = (136 + ($550<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $552 = HEAP32[$551>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $553 = $545 ^ $552; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $554 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $555 = HEAP32[$554>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $556 = (($553) + ($555))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $557 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $558 = HEAP32[$557>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $559 = (($558) + ($556))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$557>>2] = $559; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $560 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $561 = HEAP32[$560>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $562 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $563 = HEAP32[$562>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $564 = $561 ^ $563; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $565 = $564 << 16; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $566 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $567 = HEAP32[$566>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $568 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $569 = HEAP32[$568>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $570 = $567 ^ $569; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $571 = $570 >>> 16; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $572 = $565 | $571; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $573 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$573>>2] = $572; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $574 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $575 = HEAP32[$574>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $576 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $577 = HEAP32[$576>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $578 = (($577) + ($575))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$576>>2] = $578; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $579 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $580 = HEAP32[$579>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $581 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $582 = HEAP32[$581>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $583 = $580 ^ $582; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $584 = $583 << 20; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $585 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $586 = HEAP32[$585>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $587 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $588 = HEAP32[$587>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $589 = $586 ^ $588; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $590 = $589 >>> 12; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $591 = $584 | $590; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $592 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$592>>2] = $591; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $593 = $6; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $594 = (1029 + ($593<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $595 = ((($594)) + 15|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $596 = HEAP8[$595>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $597 = $596&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $598 = (($5) + ($597<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $599 = HEAP32[$598>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $600 = $6; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $601 = (1029 + ($600<<4)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $602 = ((($601)) + 14|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $603 = HEAP8[$602>>0]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $604 = $603&255; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $605 = (136 + ($604<<2)|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $606 = HEAP32[$605>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $607 = $599 ^ $606; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $608 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $609 = HEAP32[$608>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $610 = (($607) + ($609))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $611 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $612 = HEAP32[$611>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $613 = (($612) + ($610))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$611>>2] = $613; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $614 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $615 = HEAP32[$614>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $616 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $617 = HEAP32[$616>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $618 = $615 ^ $617; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $619 = $618 << 24; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $620 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $621 = HEAP32[$620>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $622 = ((($4)) + 12|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $623 = HEAP32[$622>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $624 = $621 ^ $623; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $625 = $624 >>> 8; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $626 = $619 | $625; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $627 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$627>>2] = $626; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $628 = ((($4)) + 56|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $629 = HEAP32[$628>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $630 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $631 = HEAP32[$630>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $632 = (($631) + ($629))|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$630>>2] = $632; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $633 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $634 = HEAP32[$633>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $635 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $636 = HEAP32[$635>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $637 = $634 ^ $636; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $638 = $637 << 25; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $639 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $640 = HEAP32[$639>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $641 = ((($4)) + 36|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $642 = HEAP32[$641>>2]|0; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $643 = $640 ^ $642; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $644 = $643 >>> 7; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $645 = $638 | $644; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $646 = ((($4)) + 16|0); //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$646>>2] = $645; //@line 92 "c_src/crypto_hash/blake256/ref/hash.c"
  $647 = $6; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $648 = (1029 + ($647<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $649 = ((($648)) + 12|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $650 = HEAP8[$649>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $651 = $650&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $652 = (($5) + ($651<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $653 = HEAP32[$652>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $654 = $6; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $655 = (1029 + ($654<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $656 = ((($655)) + 13|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $657 = HEAP8[$656>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $658 = $657&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $659 = (136 + ($658<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $660 = HEAP32[$659>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $661 = $653 ^ $660; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $662 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $663 = HEAP32[$662>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $664 = (($661) + ($663))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $665 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $666 = HEAP32[$665>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $667 = (($666) + ($664))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$665>>2] = $667; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $668 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $669 = HEAP32[$668>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $670 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $671 = HEAP32[$670>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $672 = $669 ^ $671; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $673 = $672 << 16; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $674 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $675 = HEAP32[$674>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $676 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $677 = HEAP32[$676>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $678 = $675 ^ $677; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $679 = $678 >>> 16; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $680 = $673 | $679; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $681 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$681>>2] = $680; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $682 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $683 = HEAP32[$682>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $684 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $685 = HEAP32[$684>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $686 = (($685) + ($683))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$684>>2] = $686; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $687 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $688 = HEAP32[$687>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $689 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $690 = HEAP32[$689>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $691 = $688 ^ $690; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $692 = $691 << 20; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $693 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $694 = HEAP32[$693>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $695 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $696 = HEAP32[$695>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $697 = $694 ^ $696; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $698 = $697 >>> 12; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $699 = $692 | $698; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $700 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$700>>2] = $699; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $701 = $6; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $702 = (1029 + ($701<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $703 = ((($702)) + 13|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $704 = HEAP8[$703>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $705 = $704&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $706 = (($5) + ($705<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $707 = HEAP32[$706>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $708 = $6; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $709 = (1029 + ($708<<4)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $710 = ((($709)) + 12|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $711 = HEAP8[$710>>0]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $712 = $711&255; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $713 = (136 + ($712<<2)|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $714 = HEAP32[$713>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $715 = $707 ^ $714; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $716 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $717 = HEAP32[$716>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $718 = (($715) + ($717))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $719 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $720 = HEAP32[$719>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $721 = (($720) + ($718))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$719>>2] = $721; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $722 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $723 = HEAP32[$722>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $724 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $725 = HEAP32[$724>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $726 = $723 ^ $725; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $727 = $726 << 24; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $728 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $729 = HEAP32[$728>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $730 = ((($4)) + 8|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $731 = HEAP32[$730>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $732 = $729 ^ $731; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $733 = $732 >>> 8; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $734 = $727 | $733; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $735 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$735>>2] = $734; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $736 = ((($4)) + 52|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $737 = HEAP32[$736>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $738 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $739 = HEAP32[$738>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $740 = (($739) + ($737))|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$738>>2] = $740; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $741 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $742 = HEAP32[$741>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $743 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $744 = HEAP32[$743>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $745 = $742 ^ $744; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $746 = $745 << 25; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $747 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $748 = HEAP32[$747>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $749 = ((($4)) + 32|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $750 = HEAP32[$749>>2]|0; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $751 = $748 ^ $750; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $752 = $751 >>> 7; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $753 = $746 | $752; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $754 = ((($4)) + 28|0); //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$754>>2] = $753; //@line 93 "c_src/crypto_hash/blake256/ref/hash.c"
  $755 = $6; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $756 = (1029 + ($755<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $757 = ((($756)) + 8|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $758 = HEAP8[$757>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $759 = $758&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $760 = (($5) + ($759<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $761 = HEAP32[$760>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $762 = $6; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $763 = (1029 + ($762<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $764 = ((($763)) + 9|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $765 = HEAP8[$764>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $766 = $765&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $767 = (136 + ($766<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $768 = HEAP32[$767>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $769 = $761 ^ $768; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $770 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $771 = HEAP32[$770>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $772 = (($769) + ($771))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $773 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $774 = (($773) + ($772))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$4>>2] = $774; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $775 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $776 = HEAP32[$775>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $777 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $778 = $776 ^ $777; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $779 = $778 << 16; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $780 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $781 = HEAP32[$780>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $782 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $783 = $781 ^ $782; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $784 = $783 >>> 16; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $785 = $779 | $784; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $786 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$786>>2] = $785; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $787 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $788 = HEAP32[$787>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $789 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $790 = HEAP32[$789>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $791 = (($790) + ($788))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$789>>2] = $791; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $792 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $793 = HEAP32[$792>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $794 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $795 = HEAP32[$794>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $796 = $793 ^ $795; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $797 = $796 << 20; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $798 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $799 = HEAP32[$798>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $800 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $801 = HEAP32[$800>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $802 = $799 ^ $801; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $803 = $802 >>> 12; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $804 = $797 | $803; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $805 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$805>>2] = $804; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $806 = $6; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $807 = (1029 + ($806<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $808 = ((($807)) + 9|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $809 = HEAP8[$808>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $810 = $809&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $811 = (($5) + ($810<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $812 = HEAP32[$811>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $813 = $6; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $814 = (1029 + ($813<<4)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $815 = ((($814)) + 8|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $816 = HEAP8[$815>>0]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $817 = $816&255; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $818 = (136 + ($817<<2)|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $819 = HEAP32[$818>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $820 = $812 ^ $819; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $821 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $822 = HEAP32[$821>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $823 = (($820) + ($822))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $824 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $825 = (($824) + ($823))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$4>>2] = $825; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $826 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $827 = HEAP32[$826>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $828 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $829 = $827 ^ $828; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $830 = $829 << 24; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $831 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $832 = HEAP32[$831>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $833 = HEAP32[$4>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $834 = $832 ^ $833; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $835 = $834 >>> 8; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $836 = $830 | $835; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $837 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$837>>2] = $836; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $838 = ((($4)) + 60|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $839 = HEAP32[$838>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $840 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $841 = HEAP32[$840>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $842 = (($841) + ($839))|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$840>>2] = $842; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $843 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $844 = HEAP32[$843>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $845 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $846 = HEAP32[$845>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $847 = $844 ^ $846; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $848 = $847 << 25; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $849 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $850 = HEAP32[$849>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $851 = ((($4)) + 40|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $852 = HEAP32[$851>>2]|0; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $853 = $850 ^ $852; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $854 = $853 >>> 7; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $855 = $848 | $854; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $856 = ((($4)) + 20|0); //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$856>>2] = $855; //@line 94 "c_src/crypto_hash/blake256/ref/hash.c"
  $857 = $6; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $858 = (1029 + ($857<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $859 = ((($858)) + 10|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $860 = HEAP8[$859>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $861 = $860&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $862 = (($5) + ($861<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $863 = HEAP32[$862>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $864 = $6; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $865 = (1029 + ($864<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $866 = ((($865)) + 11|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $867 = HEAP8[$866>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $868 = $867&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $869 = (136 + ($868<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $870 = HEAP32[$869>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $871 = $863 ^ $870; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $872 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $873 = HEAP32[$872>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $874 = (($871) + ($873))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $875 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $876 = HEAP32[$875>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $877 = (($876) + ($874))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$875>>2] = $877; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $878 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $879 = HEAP32[$878>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $880 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $881 = HEAP32[$880>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $882 = $879 ^ $881; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $883 = $882 << 16; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $884 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $885 = HEAP32[$884>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $886 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $887 = HEAP32[$886>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $888 = $885 ^ $887; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $889 = $888 >>> 16; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $890 = $883 | $889; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $891 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$891>>2] = $890; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $892 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $893 = HEAP32[$892>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $894 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $895 = HEAP32[$894>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $896 = (($895) + ($893))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$894>>2] = $896; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $897 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $898 = HEAP32[$897>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $899 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $900 = HEAP32[$899>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $901 = $898 ^ $900; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $902 = $901 << 20; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $903 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $904 = HEAP32[$903>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $905 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $906 = HEAP32[$905>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $907 = $904 ^ $906; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $908 = $907 >>> 12; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $909 = $902 | $908; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $910 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$910>>2] = $909; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $911 = $6; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $912 = (1029 + ($911<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $913 = ((($912)) + 11|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $914 = HEAP8[$913>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $915 = $914&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $916 = (($5) + ($915<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $917 = HEAP32[$916>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $918 = $6; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $919 = (1029 + ($918<<4)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $920 = ((($919)) + 10|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $921 = HEAP8[$920>>0]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $922 = $921&255; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $923 = (136 + ($922<<2)|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $924 = HEAP32[$923>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $925 = $917 ^ $924; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $926 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $927 = HEAP32[$926>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $928 = (($925) + ($927))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $929 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $930 = HEAP32[$929>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $931 = (($930) + ($928))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$929>>2] = $931; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $932 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $933 = HEAP32[$932>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $934 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $935 = HEAP32[$934>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $936 = $933 ^ $935; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $937 = $936 << 24; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $938 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $939 = HEAP32[$938>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $940 = ((($4)) + 4|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $941 = HEAP32[$940>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $942 = $939 ^ $941; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $943 = $942 >>> 8; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $944 = $937 | $943; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $945 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$945>>2] = $944; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $946 = ((($4)) + 48|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $947 = HEAP32[$946>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $948 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $949 = HEAP32[$948>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $950 = (($949) + ($947))|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$948>>2] = $950; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $951 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $952 = HEAP32[$951>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $953 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $954 = HEAP32[$953>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $955 = $952 ^ $954; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $956 = $955 << 25; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $957 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $958 = HEAP32[$957>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $959 = ((($4)) + 44|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $960 = HEAP32[$959>>2]|0; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $961 = $958 ^ $960; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $962 = $961 >>> 7; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $963 = $956 | $962; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $964 = ((($4)) + 24|0); //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$964>>2] = $963; //@line 95 "c_src/crypto_hash/blake256/ref/hash.c"
  $965 = $6; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $966 = (($965) + 1)|0; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $966; //@line 87 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $6 = 0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $967 = $6; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $968 = ($967>>>0)<(16); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($968)) {
   break;
  }
  $969 = $6; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $970 = (($4) + ($969<<2)|0); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $971 = HEAP32[$970>>2]|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $972 = $6; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $973 = (($972>>>0) % 8)&-1; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $974 = $2; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $975 = (($974) + ($973<<2)|0); //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $976 = HEAP32[$975>>2]|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $977 = $976 ^ $971; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$975>>2] = $977; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $978 = $6; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $979 = (($978) + 1)|0; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $979; //@line 98 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $6 = 0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
 while(1) {
  $980 = $6; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $981 = ($980>>>0)<(8); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($981)) {
   break;
  }
  $982 = $6; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $983 = (($982>>>0) % 4)&-1; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $984 = $2; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $985 = ((($984)) + 32|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $986 = (($985) + ($983<<2)|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $987 = HEAP32[$986>>2]|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $988 = $6; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $989 = $2; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $990 = (($989) + ($988<<2)|0); //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $991 = HEAP32[$990>>2]|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $992 = $991 ^ $987; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$990>>2] = $992; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $993 = $6; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $994 = (($993) + 1)|0; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
  $6 = $994; //@line 99 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 STACKTOP = sp;return; //@line 100 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake256_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = $0;
 $2 = $1; //@line 105 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$2>>2] = 1779033703; //@line 105 "c_src/crypto_hash/blake256/ref/hash.c"
 $3 = $1; //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 $4 = ((($3)) + 4|0); //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$4>>2] = -1150833019; //@line 106 "c_src/crypto_hash/blake256/ref/hash.c"
 $5 = $1; //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 $6 = ((($5)) + 8|0); //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$6>>2] = 1013904242; //@line 107 "c_src/crypto_hash/blake256/ref/hash.c"
 $7 = $1; //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 $8 = ((($7)) + 12|0); //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$8>>2] = -1521486534; //@line 108 "c_src/crypto_hash/blake256/ref/hash.c"
 $9 = $1; //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = ((($9)) + 16|0); //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$10>>2] = 1359893119; //@line 109 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = $1; //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = ((($11)) + 20|0); //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$12>>2] = -1694144372; //@line 110 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = $1; //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = ((($13)) + 24|0); //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$14>>2] = 528734635; //@line 111 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = $1; //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = ((($15)) + 28|0); //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$16>>2] = 1541459225; //@line 112 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = $1; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = ((($17)) + 60|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$18>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $19 = $1; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $20 = ((($19)) + 56|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$20>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $21 = $1; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $22 = ((($21)) + 48|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $23 = ((($22)) + 4|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$23>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $24 = $1; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $25 = ((($24)) + 48|0); //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$25>>2] = 0; //@line 113 "c_src/crypto_hash/blake256/ref/hash.c"
 $26 = $1; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $27 = ((($26)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $28 = ((($27)) + 12|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$28>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $29 = $1; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $30 = ((($29)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $31 = ((($30)) + 8|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$31>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $32 = $1; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $33 = ((($32)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $34 = ((($33)) + 4|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$34>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $35 = $1; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 $36 = ((($35)) + 32|0); //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$36>>2] = 0; //@line 114 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return; //@line 115 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake256_update($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $6 = sp;
 $4 = $0;
 $5 = $1;
 $9 = $6;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $3;
 $13 = $4; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = ((($13)) + 56|0); //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = $15 >> 3; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $7 = $16; //@line 120 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = $7; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = (64 - ($17))|0; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $8 = $18; //@line 121 "c_src/crypto_hash/blake256/ref/hash.c"
 $19 = $7; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
 $20 = ($19|0)!=(0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($20) {
  $21 = $6; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $22 = $21; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $23 = HEAP32[$22>>2]|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $24 = (($21) + 4)|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $25 = $24; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $26 = HEAP32[$25>>2]|0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $27 = (_bitshift64Lshr(($23|0),($26|0),3)|0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $28 = tempRet0; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $29 = $27 & 63; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $30 = $8; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $31 = ($30|0)<(0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $32 = $31 << 31 >> 31; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $33 = (0)>($32>>>0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $34 = ($29>>>0)>=($30>>>0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $35 = (0)==($32|0); //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $36 = $35 & $34; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  $37 = $33 | $36; //@line 123 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($37) {
   $38 = $4; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $39 = ((($38)) + 64|0); //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $40 = $7; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $41 = (($39) + ($40)|0); //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $42 = $5; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $43 = $8; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   _memcpy(($41|0),($42|0),($43|0))|0; //@line 124 "c_src/crypto_hash/blake256/ref/hash.c"
   $44 = $4; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $45 = ((($44)) + 48|0); //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $46 = HEAP32[$45>>2]|0; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $47 = (($46) + 512)|0; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$45>>2] = $47; //@line 125 "c_src/crypto_hash/blake256/ref/hash.c"
   $48 = $4; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $49 = ((($48)) + 48|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $50 = HEAP32[$49>>2]|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   $51 = ($50|0)==(0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   if ($51) {
    $52 = $4; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $53 = ((($52)) + 48|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $54 = ((($53)) + 4|0); //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $55 = HEAP32[$54>>2]|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    $56 = (($55) + 1)|0; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
    HEAP32[$54>>2] = $56; //@line 126 "c_src/crypto_hash/blake256/ref/hash.c"
   }
   $57 = $4; //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $58 = $4; //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $59 = ((($58)) + 64|0); //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_compress($57,$59); //@line 127 "c_src/crypto_hash/blake256/ref/hash.c"
   $60 = $8; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $61 = $5; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $62 = (($61) + ($60)|0); //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $5 = $62; //@line 128 "c_src/crypto_hash/blake256/ref/hash.c"
   $63 = $8; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $64 = $63 << 3; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $65 = ($64|0)<(0); //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $66 = $65 << 31 >> 31; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $67 = $6; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $68 = $67; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $69 = HEAP32[$68>>2]|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $70 = (($67) + 4)|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $71 = $70; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $72 = HEAP32[$71>>2]|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $73 = (_i64Subtract(($69|0),($72|0),($64|0),($66|0))|0); //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $74 = tempRet0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $75 = $6; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $76 = $75; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$76>>2] = $73; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $77 = (($75) + 4)|0; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $78 = $77; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$78>>2] = $74; //@line 129 "c_src/crypto_hash/blake256/ref/hash.c"
   $7 = 0; //@line 130 "c_src/crypto_hash/blake256/ref/hash.c"
  }
 }
 while(1) {
  $79 = $6; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $80 = $79; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $81 = HEAP32[$80>>2]|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $82 = (($79) + 4)|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $83 = $82; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $84 = HEAP32[$83>>2]|0; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $85 = ($84>>>0)>(0); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $86 = ($81>>>0)>=(512); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $87 = ($84|0)==(0); //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $88 = $87 & $86; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  $89 = $85 | $88; //@line 133 "c_src/crypto_hash/blake256/ref/hash.c"
  if (!($89)) {
   break;
  }
  $90 = $4; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $91 = ((($90)) + 48|0); //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $92 = HEAP32[$91>>2]|0; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $93 = (($92) + 512)|0; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$91>>2] = $93; //@line 134 "c_src/crypto_hash/blake256/ref/hash.c"
  $94 = $4; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $95 = ((($94)) + 48|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $96 = HEAP32[$95>>2]|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  $97 = ($96|0)==(0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($97) {
   $98 = $4; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $99 = ((($98)) + 48|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $100 = ((($99)) + 4|0); //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $101 = HEAP32[$100>>2]|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   $102 = (($101) + 1)|0; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$100>>2] = $102; //@line 135 "c_src/crypto_hash/blake256/ref/hash.c"
  }
  $103 = $4; //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  $104 = $5; //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_compress($103,$104); //@line 136 "c_src/crypto_hash/blake256/ref/hash.c"
  $105 = $5; //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $106 = ((($105)) + 64|0); //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $5 = $106; //@line 137 "c_src/crypto_hash/blake256/ref/hash.c"
  $107 = $6; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $108 = $107; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $109 = HEAP32[$108>>2]|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $110 = (($107) + 4)|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $111 = $110; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $112 = HEAP32[$111>>2]|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $113 = (_i64Subtract(($109|0),($112|0),512,0)|0); //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $114 = tempRet0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $115 = $6; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $116 = $115; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$116>>2] = $113; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $117 = (($115) + 4)|0; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  $118 = $117; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$118>>2] = $114; //@line 138 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $119 = $6; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $120 = $119; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $121 = HEAP32[$120>>2]|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $122 = (($119) + 4)|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $123 = $122; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $124 = HEAP32[$123>>2]|0; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $125 = ($124>>>0)>(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $126 = ($121>>>0)>(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $127 = ($124|0)==(0); //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $128 = $127 & $126; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $129 = $125 | $128; //@line 141 "c_src/crypto_hash/blake256/ref/hash.c"
 $130 = $4; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($129) {
  $131 = ((($130)) + 64|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $132 = $7; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $133 = (($131) + ($132)|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $134 = $5; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $135 = $6; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $136 = $135; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $137 = HEAP32[$136>>2]|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $138 = (($135) + 4)|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $139 = $138; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $140 = HEAP32[$139>>2]|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $141 = (_bitshift64Lshr(($137|0),($140|0),3)|0); //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $142 = tempRet0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  _memcpy(($133|0),($134|0),($141|0))|0; //@line 142 "c_src/crypto_hash/blake256/ref/hash.c"
  $143 = $7; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $144 = $143 << 3; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $145 = ($144|0)<(0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $146 = $145 << 31 >> 31; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $147 = $6; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $148 = $147; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $149 = HEAP32[$148>>2]|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $150 = (($147) + 4)|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $151 = $150; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $152 = HEAP32[$151>>2]|0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $153 = (_i64Add(($144|0),($146|0),($149|0),($152|0))|0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $154 = tempRet0; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $155 = $4; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  $156 = ((($155)) + 56|0); //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$156>>2] = $153; //@line 143 "c_src/crypto_hash/blake256/ref/hash.c"
  STACKTOP = sp;return; //@line 146 "c_src/crypto_hash/blake256/ref/hash.c"
 } else {
  $157 = ((($130)) + 56|0); //@line 145 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$157>>2] = 0; //@line 145 "c_src/crypto_hash/blake256/ref/hash.c"
  STACKTOP = sp;return; //@line 146 "c_src/crypto_hash/blake256/ref/hash.c"
 }
}
function _blake256_final($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 17|0;
 $6 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 HEAP8[$5>>0] = 1; //@line 151 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$6>>0] = -127; //@line 151 "c_src/crypto_hash/blake256/ref/hash.c"
 $9 = $2; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $10 = ((($9)) + 48|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $11 = HEAP32[$10>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = $2; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = ((($12)) + 56|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = HEAP32[$13>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = (($11) + ($14))|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $7 = $15; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = $2; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = ((($16)) + 48|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = ((($17)) + 4|0); //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $19 = HEAP32[$18>>2]|0; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $8 = $19; //@line 152 "c_src/crypto_hash/blake256/ref/hash.c"
 $20 = $7; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $21 = $2; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $22 = ((($21)) + 56|0); //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $23 = HEAP32[$22>>2]|0; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 $24 = ($20>>>0)<($23>>>0); //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($24) {
  $25 = $8; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
  $26 = (($25) + 1)|0; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
  $8 = $26; //@line 153 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $27 = $8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $28 = $27 >>> 24; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $29 = $28&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$4>>0] = $29; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $30 = $8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $31 = $30 >>> 16; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $32 = $31&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $33 = ((($4)) + 1|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$33>>0] = $32; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $34 = $8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $35 = $34 >>> 8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $36 = $35&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $37 = ((($4)) + 2|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$37>>0] = $36; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $38 = $8; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $39 = $38&255; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $40 = ((($4)) + 3|0); //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$40>>0] = $39; //@line 154 "c_src/crypto_hash/blake256/ref/hash.c"
 $41 = $7; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $42 = $41 >>> 24; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $43 = $42&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $44 = ((($4)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$44>>0] = $43; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $45 = $7; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $46 = $45 >>> 16; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $47 = $46&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $48 = ((($4)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $49 = ((($48)) + 1|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$49>>0] = $47; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $50 = $7; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $51 = $50 >>> 8; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $52 = $51&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $53 = ((($4)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $54 = ((($53)) + 2|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$54>>0] = $52; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $55 = $7; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $56 = $55&255; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $57 = ((($4)) + 4|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $58 = ((($57)) + 3|0); //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$58>>0] = $56; //@line 155 "c_src/crypto_hash/blake256/ref/hash.c"
 $59 = $2; //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $60 = ((($59)) + 56|0); //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $61 = HEAP32[$60>>2]|0; //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $62 = ($61|0)==(440); //@line 157 "c_src/crypto_hash/blake256/ref/hash.c"
 $63 = $2; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
 if ($62) {
  $64 = ((($63)) + 48|0); //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $65 = HEAP32[$64>>2]|0; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $66 = (($65) - 8)|0; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$64>>2] = $66; //@line 158 "c_src/crypto_hash/blake256/ref/hash.c"
  $67 = $2; //@line 159 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_update($67,$6,8,0); //@line 159 "c_src/crypto_hash/blake256/ref/hash.c"
 } else {
  $68 = ((($63)) + 56|0); //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $69 = HEAP32[$68>>2]|0; //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $70 = ($69|0)<(440); //@line 162 "c_src/crypto_hash/blake256/ref/hash.c"
  $71 = $2; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  $72 = ((($71)) + 56|0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  $73 = HEAP32[$72>>2]|0; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
  if ($70) {
   $74 = ($73|0)!=(0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
   if (!($74)) {
    $75 = $2; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
    $76 = ((($75)) + 60|0); //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
    HEAP32[$76>>2] = 1; //@line 163 "c_src/crypto_hash/blake256/ref/hash.c"
   }
   $77 = $2; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $78 = ((($77)) + 56|0); //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $79 = HEAP32[$78>>2]|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $80 = (440 - ($79))|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $81 = $2; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $82 = ((($81)) + 48|0); //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $83 = HEAP32[$82>>2]|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $84 = (($83) - ($80))|0; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$82>>2] = $84; //@line 164 "c_src/crypto_hash/blake256/ref/hash.c"
   $85 = $2; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $86 = $2; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $87 = ((($86)) + 56|0); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $88 = HEAP32[$87>>2]|0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $89 = (440 - ($88))|0; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $90 = ($89|0)<(0); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   $91 = $90 << 31 >> 31; //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($85,1253,$89,$91); //@line 165 "c_src/crypto_hash/blake256/ref/hash.c"
  } else {
   $92 = (512 - ($73))|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $93 = $2; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $94 = ((($93)) + 48|0); //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $95 = HEAP32[$94>>2]|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $96 = (($95) - ($92))|0; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$94>>2] = $96; //@line 168 "c_src/crypto_hash/blake256/ref/hash.c"
   $97 = $2; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $98 = $2; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $99 = ((($98)) + 56|0); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $100 = HEAP32[$99>>2]|0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $101 = (512 - ($100))|0; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $102 = ($101|0)<(0); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $103 = $102 << 31 >> 31; //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($97,1253,$101,$103); //@line 169 "c_src/crypto_hash/blake256/ref/hash.c"
   $104 = $2; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $105 = ((($104)) + 48|0); //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $106 = HEAP32[$105>>2]|0; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $107 = (($106) - 440)|0; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$105>>2] = $107; //@line 170 "c_src/crypto_hash/blake256/ref/hash.c"
   $108 = $2; //@line 171 "c_src/crypto_hash/blake256/ref/hash.c"
   _blake256_update($108,(1254),440,0); //@line 171 "c_src/crypto_hash/blake256/ref/hash.c"
   $109 = $2; //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
   $110 = ((($109)) + 60|0); //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
   HEAP32[$110>>2] = 1; //@line 172 "c_src/crypto_hash/blake256/ref/hash.c"
  }
  $111 = $2; //@line 174 "c_src/crypto_hash/blake256/ref/hash.c"
  _blake256_update($111,$5,8,0); //@line 174 "c_src/crypto_hash/blake256/ref/hash.c"
  $112 = $2; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $113 = ((($112)) + 48|0); //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $114 = HEAP32[$113>>2]|0; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  $115 = (($114) - 8)|0; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
  HEAP32[$113>>2] = $115; //@line 175 "c_src/crypto_hash/blake256/ref/hash.c"
 }
 $116 = $2; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $117 = ((($116)) + 48|0); //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $118 = HEAP32[$117>>2]|0; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $119 = (($118) - 64)|0; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP32[$117>>2] = $119; //@line 177 "c_src/crypto_hash/blake256/ref/hash.c"
 $120 = $2; //@line 178 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_update($120,$4,64,0); //@line 178 "c_src/crypto_hash/blake256/ref/hash.c"
 $121 = $2; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $122 = HEAP32[$121>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $123 = $122 >>> 24; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $124 = $123&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $125 = $3; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$125>>0] = $124; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $126 = $2; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $127 = HEAP32[$126>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $128 = $127 >>> 16; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $129 = $128&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $130 = $3; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $131 = ((($130)) + 1|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$131>>0] = $129; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $132 = $2; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $133 = HEAP32[$132>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $134 = $133 >>> 8; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $135 = $134&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $136 = $3; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $137 = ((($136)) + 2|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$137>>0] = $135; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $138 = $2; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $139 = HEAP32[$138>>2]|0; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $140 = $139&255; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $141 = $3; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $142 = ((($141)) + 3|0); //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$142>>0] = $140; //@line 180 "c_src/crypto_hash/blake256/ref/hash.c"
 $143 = $2; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $144 = ((($143)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $145 = HEAP32[$144>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $146 = $145 >>> 24; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $147 = $146&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $148 = $3; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $149 = ((($148)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$149>>0] = $147; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $150 = $2; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $151 = ((($150)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $152 = HEAP32[$151>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $153 = $152 >>> 16; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $154 = $153&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $155 = $3; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $156 = ((($155)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $157 = ((($156)) + 1|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$157>>0] = $154; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $158 = $2; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $159 = ((($158)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $160 = HEAP32[$159>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $161 = $160 >>> 8; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $162 = $161&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $163 = $3; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $164 = ((($163)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $165 = ((($164)) + 2|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$165>>0] = $162; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $166 = $2; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $167 = ((($166)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $168 = HEAP32[$167>>2]|0; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $169 = $168&255; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $170 = $3; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $171 = ((($170)) + 4|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $172 = ((($171)) + 3|0); //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$172>>0] = $169; //@line 181 "c_src/crypto_hash/blake256/ref/hash.c"
 $173 = $2; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $174 = ((($173)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $175 = HEAP32[$174>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $176 = $175 >>> 24; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $177 = $176&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $178 = $3; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $179 = ((($178)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$179>>0] = $177; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $180 = $2; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $181 = ((($180)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $182 = HEAP32[$181>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $183 = $182 >>> 16; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $184 = $183&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $185 = $3; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $186 = ((($185)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $187 = ((($186)) + 1|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$187>>0] = $184; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $188 = $2; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $189 = ((($188)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $190 = HEAP32[$189>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $191 = $190 >>> 8; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $192 = $191&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $193 = $3; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $194 = ((($193)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $195 = ((($194)) + 2|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$195>>0] = $192; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $196 = $2; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $197 = ((($196)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $198 = HEAP32[$197>>2]|0; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $199 = $198&255; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $200 = $3; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $201 = ((($200)) + 8|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $202 = ((($201)) + 3|0); //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$202>>0] = $199; //@line 182 "c_src/crypto_hash/blake256/ref/hash.c"
 $203 = $2; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $204 = ((($203)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $205 = HEAP32[$204>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $206 = $205 >>> 24; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $207 = $206&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $208 = $3; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $209 = ((($208)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$209>>0] = $207; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $210 = $2; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $211 = ((($210)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $212 = HEAP32[$211>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $213 = $212 >>> 16; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $214 = $213&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $215 = $3; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $216 = ((($215)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $217 = ((($216)) + 1|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$217>>0] = $214; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $218 = $2; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $219 = ((($218)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $220 = HEAP32[$219>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $221 = $220 >>> 8; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $222 = $221&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $223 = $3; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $224 = ((($223)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $225 = ((($224)) + 2|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$225>>0] = $222; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $226 = $2; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $227 = ((($226)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $228 = HEAP32[$227>>2]|0; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $229 = $228&255; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $230 = $3; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $231 = ((($230)) + 12|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $232 = ((($231)) + 3|0); //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$232>>0] = $229; //@line 183 "c_src/crypto_hash/blake256/ref/hash.c"
 $233 = $2; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $234 = ((($233)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $235 = HEAP32[$234>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $236 = $235 >>> 24; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $237 = $236&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $238 = $3; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $239 = ((($238)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$239>>0] = $237; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $240 = $2; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $241 = ((($240)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $242 = HEAP32[$241>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $243 = $242 >>> 16; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $244 = $243&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $245 = $3; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $246 = ((($245)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $247 = ((($246)) + 1|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$247>>0] = $244; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $248 = $2; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $249 = ((($248)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $250 = HEAP32[$249>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $251 = $250 >>> 8; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $252 = $251&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $253 = $3; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $254 = ((($253)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $255 = ((($254)) + 2|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$255>>0] = $252; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $256 = $2; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $257 = ((($256)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $258 = HEAP32[$257>>2]|0; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $259 = $258&255; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $260 = $3; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $261 = ((($260)) + 16|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $262 = ((($261)) + 3|0); //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$262>>0] = $259; //@line 184 "c_src/crypto_hash/blake256/ref/hash.c"
 $263 = $2; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $264 = ((($263)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $265 = HEAP32[$264>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $266 = $265 >>> 24; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $267 = $266&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $268 = $3; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $269 = ((($268)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$269>>0] = $267; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $270 = $2; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $271 = ((($270)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $272 = HEAP32[$271>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $273 = $272 >>> 16; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $274 = $273&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $275 = $3; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $276 = ((($275)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $277 = ((($276)) + 1|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$277>>0] = $274; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $278 = $2; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $279 = ((($278)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $280 = HEAP32[$279>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $281 = $280 >>> 8; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $282 = $281&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $283 = $3; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $284 = ((($283)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $285 = ((($284)) + 2|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$285>>0] = $282; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $286 = $2; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $287 = ((($286)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $288 = HEAP32[$287>>2]|0; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $289 = $288&255; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $290 = $3; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $291 = ((($290)) + 20|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $292 = ((($291)) + 3|0); //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$292>>0] = $289; //@line 185 "c_src/crypto_hash/blake256/ref/hash.c"
 $293 = $2; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $294 = ((($293)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $295 = HEAP32[$294>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $296 = $295 >>> 24; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $297 = $296&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $298 = $3; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $299 = ((($298)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$299>>0] = $297; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $300 = $2; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $301 = ((($300)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $302 = HEAP32[$301>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $303 = $302 >>> 16; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $304 = $303&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $305 = $3; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $306 = ((($305)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $307 = ((($306)) + 1|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$307>>0] = $304; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $308 = $2; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $309 = ((($308)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $310 = HEAP32[$309>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $311 = $310 >>> 8; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $312 = $311&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $313 = $3; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $314 = ((($313)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $315 = ((($314)) + 2|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$315>>0] = $312; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $316 = $2; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $317 = ((($316)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $318 = HEAP32[$317>>2]|0; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $319 = $318&255; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $320 = $3; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $321 = ((($320)) + 24|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $322 = ((($321)) + 3|0); //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$322>>0] = $319; //@line 186 "c_src/crypto_hash/blake256/ref/hash.c"
 $323 = $2; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $324 = ((($323)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $325 = HEAP32[$324>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $326 = $325 >>> 24; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $327 = $326&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $328 = $3; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $329 = ((($328)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$329>>0] = $327; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $330 = $2; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $331 = ((($330)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $332 = HEAP32[$331>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $333 = $332 >>> 16; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $334 = $333&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $335 = $3; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $336 = ((($335)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $337 = ((($336)) + 1|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$337>>0] = $334; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $338 = $2; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $339 = ((($338)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $340 = HEAP32[$339>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $341 = $340 >>> 8; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $342 = $341&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $343 = $3; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $344 = ((($343)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $345 = ((($344)) + 2|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$345>>0] = $342; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $346 = $2; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $347 = ((($346)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $348 = HEAP32[$347>>2]|0; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $349 = $348&255; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $350 = $3; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $351 = ((($350)) + 28|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 $352 = ((($351)) + 3|0); //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 HEAP8[$352>>0] = $349; //@line 187 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return; //@line 188 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _crypto_hash_blake256_ref($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $6 = sp;
 $7 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $8 = $6;
 $9 = $8;
 HEAP32[$9>>2] = $2;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $3;
 _blake256_init($7); //@line 194 "c_src/crypto_hash/blake256/ref/hash.c"
 $12 = $5; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $13 = $6; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $14 = $13; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $16 = (($13) + 4)|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $17 = $16; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $18 = HEAP32[$17>>2]|0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $19 = (___muldi3(($15|0),($18|0),8,0)|0); //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $20 = tempRet0; //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_update($7,$12,$19,$20); //@line 195 "c_src/crypto_hash/blake256/ref/hash.c"
 $21 = $4; //@line 196 "c_src/crypto_hash/blake256/ref/hash.c"
 _blake256_final($7,$21); //@line 196 "c_src/crypto_hash/blake256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 197 "c_src/crypto_hash/blake256/ref/hash.c"
}
function _blake512_compress($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0;
 var $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0;
 var $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0;
 var $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0;
 var $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0;
 var $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0;
 var $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0;
 var $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0;
 var $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0;
 var $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0;
 var $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0;
 var $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0;
 var $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0;
 var $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0;
 var $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0;
 var $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0;
 var $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0;
 var $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0;
 var $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0;
 var $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0;
 var $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0;
 var $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0;
 var $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0;
 var $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0;
 var $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0;
 var $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0;
 var $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0;
 var $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0;
 var $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0;
 var $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0;
 var $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0;
 var $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0;
 var $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0;
 var $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0;
 var $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0;
 var $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0;
 var $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0;
 var $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0;
 var $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0;
 var $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0;
 var $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0;
 var $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0;
 var $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0;
 var $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0;
 var $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0;
 var $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0;
 var $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0;
 var $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0;
 var $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0;
 var $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0;
 var $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0;
 var $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0;
 var $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0;
 var $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0;
 var $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0;
 var $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0;
 var $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0, $2889 = 0, $289 = 0;
 var $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0, $2906 = 0, $2907 = 0;
 var $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0;
 var $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0;
 var $2944 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0;
 var $2962 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0;
 var $2980 = 0, $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $2998 = 0;
 var $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0;
 var $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0;
 var $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0;
 var $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0;
 var $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0, $3086 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $4 = sp + 136|0;
 $5 = sp + 8|0;
 $6 = sp;
 $2 = $0;
 $3 = $1;
 $7 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $8 = $7; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$8>>2] = 0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = (($7) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = $9; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$10>>2] = 0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $11 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $12 = $11; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $13 = HEAP32[$12>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $14 = (($11) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $15 = $14; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $16 = HEAP32[$15>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $17 = ($16>>>0)<(0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $18 = ($13>>>0)<(16); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $19 = ($16|0)==(0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $20 = $19 & $18; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $21 = $17 | $20; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($21)) {
   break;
  }
  $22 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $23 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $24 = $23; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $25 = HEAP32[$24>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $26 = (($23) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $27 = $26; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $28 = HEAP32[$27>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $29 = (___muldi3(($25|0),($28|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $30 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $31 = (($22) + ($29)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $32 = HEAP8[$31>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $33 = $32&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $34 = $33 << 24; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $35 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $36 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $37 = $36; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $38 = HEAP32[$37>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $39 = (($36) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $40 = $39; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $41 = HEAP32[$40>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $42 = (___muldi3(($38|0),($41|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $43 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $44 = (($35) + ($42)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $45 = ((($44)) + 1|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $46 = HEAP8[$45>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $47 = $46&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $48 = $47 << 16; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $49 = $34 | $48; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $50 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $51 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $52 = $51; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $53 = HEAP32[$52>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $54 = (($51) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $55 = $54; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $56 = HEAP32[$55>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $57 = (___muldi3(($53|0),($56|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $58 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $59 = (($50) + ($57)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $60 = ((($59)) + 2|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $61 = HEAP8[$60>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $62 = $61&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $63 = $62 << 8; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $64 = $49 | $63; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $65 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $66 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $67 = $66; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $68 = HEAP32[$67>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $69 = (($66) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $70 = $69; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $71 = HEAP32[$70>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $72 = (___muldi3(($68|0),($71|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $73 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $74 = (($65) + ($72)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $75 = ((($74)) + 3|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $76 = HEAP8[$75>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $77 = $76&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $78 = $64 | $77; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $79 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $80 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $81 = $80; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $82 = HEAP32[$81>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $83 = (($80) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $84 = $83; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $85 = HEAP32[$84>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $86 = (___muldi3(($82|0),($85|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $87 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $88 = (($79) + ($86)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $89 = ((($88)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $90 = HEAP8[$89>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $91 = $90&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $92 = $91 << 24; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $93 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $94 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $95 = $94; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $96 = HEAP32[$95>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $97 = (($94) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $98 = $97; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $99 = HEAP32[$98>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $100 = (___muldi3(($96|0),($99|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $101 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $102 = (($93) + ($100)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $103 = ((($102)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $104 = ((($103)) + 1|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $105 = HEAP8[$104>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $106 = $105&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $107 = $106 << 16; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $108 = $92 | $107; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $109 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $110 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $111 = $110; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $112 = HEAP32[$111>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $113 = (($110) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $114 = $113; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $115 = HEAP32[$114>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $116 = (___muldi3(($112|0),($115|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $117 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $118 = (($109) + ($116)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $119 = ((($118)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $120 = ((($119)) + 2|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $121 = HEAP8[$120>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $122 = $121&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $123 = $122 << 8; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $124 = $108 | $123; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $125 = $3; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $126 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $127 = $126; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $128 = HEAP32[$127>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $129 = (($126) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $130 = $129; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $131 = HEAP32[$130>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $132 = (___muldi3(($128|0),($131|0),8,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $133 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $134 = (($125) + ($132)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $135 = ((($134)) + 4|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $136 = ((($135)) + 3|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $137 = HEAP8[$136>>0]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $138 = $137&255; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $139 = $124 | $138; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $140 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $141 = $140; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $142 = HEAP32[$141>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $143 = (($140) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $144 = $143; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $145 = HEAP32[$144>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $146 = (($5) + ($142<<3)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $147 = $146; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $148 = $147; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$148>>2] = $139; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $149 = (($147) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $150 = $149; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$150>>2] = $78; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $151 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $152 = $151; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $153 = HEAP32[$152>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $154 = (($151) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $155 = $154; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $156 = HEAP32[$155>>2]|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $157 = (_i64Add(($153|0),($156|0),1,0)|0); //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $158 = tempRet0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $159 = $6; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $160 = $159; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$160>>2] = $157; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $161 = (($159) + 4)|0; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  $162 = $161; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$162>>2] = $158; //@line 85 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $163 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $164 = $163; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$164>>2] = 0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $165 = (($163) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 $166 = $165; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$166>>2] = 0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $167 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $168 = $167; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $169 = HEAP32[$168>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $170 = (($167) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $171 = $170; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $172 = HEAP32[$171>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $173 = ($172>>>0)<(0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $174 = ($169>>>0)<(8); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $175 = ($172|0)==(0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $176 = $175 & $174; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $177 = $173 | $176; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($177)) {
   break;
  }
  $178 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $179 = $178; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $180 = HEAP32[$179>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $181 = (($178) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $182 = $181; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $183 = HEAP32[$182>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $184 = $2; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $185 = (($184) + ($180<<3)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $186 = $185; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $187 = $186; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $188 = HEAP32[$187>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $189 = (($186) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $190 = $189; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $191 = HEAP32[$190>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $192 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $193 = $192; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $194 = HEAP32[$193>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $195 = (($192) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $196 = $195; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $197 = HEAP32[$196>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $198 = (($4) + ($194<<3)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $199 = $198; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $200 = $199; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$200>>2] = $188; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $201 = (($199) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $202 = $201; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$202>>2] = $191; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $203 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $204 = $203; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $205 = HEAP32[$204>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $206 = (($203) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $207 = $206; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $208 = HEAP32[$207>>2]|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $209 = (_i64Add(($205|0),($208|0),1,0)|0); //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $210 = tempRet0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $211 = $6; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $212 = $211; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$212>>2] = $209; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $213 = (($211) + 4)|0; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  $214 = $213; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$214>>2] = $210; //@line 86 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $215 = $2; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $216 = ((($215)) + 64|0); //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $217 = $216; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $218 = $217; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $219 = HEAP32[$218>>2]|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $220 = (($217) + 4)|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $221 = $220; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $222 = HEAP32[$221>>2]|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $223 = $219 ^ -2052912941; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $224 = $222 ^ 608135816; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $225 = ((($4)) + 64|0); //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $226 = $225; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $227 = $226; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$227>>2] = $223; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $228 = (($226) + 4)|0; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $229 = $228; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$229>>2] = $224; //@line 87 "c_src/crypto_hash/blake512/ref/hash.c"
 $230 = $2; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $231 = ((($230)) + 64|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $232 = ((($231)) + 8|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $233 = $232; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $234 = $233; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $235 = HEAP32[$234>>2]|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $236 = (($233) + 4)|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $237 = $236; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $238 = HEAP32[$237>>2]|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $239 = $235 ^ 57701188; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $240 = $238 ^ 320440878; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $241 = ((($4)) + 72|0); //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $242 = $241; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $243 = $242; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$243>>2] = $239; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $244 = (($242) + 4)|0; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $245 = $244; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$245>>2] = $240; //@line 88 "c_src/crypto_hash/blake512/ref/hash.c"
 $246 = $2; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $247 = ((($246)) + 64|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $248 = ((($247)) + 16|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $249 = $248; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $250 = $249; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $251 = HEAP32[$250>>2]|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $252 = (($249) + 4)|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $253 = $252; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $254 = HEAP32[$253>>2]|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $255 = $251 ^ 698298832; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $256 = $254 ^ -1542899678; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $257 = ((($4)) + 80|0); //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $258 = $257; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $259 = $258; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$259>>2] = $255; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $260 = (($258) + 4)|0; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $261 = $260; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$261>>2] = $256; //@line 89 "c_src/crypto_hash/blake512/ref/hash.c"
 $262 = $2; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $263 = ((($262)) + 64|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $264 = ((($263)) + 24|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $265 = $264; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $266 = $265; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $267 = HEAP32[$266>>2]|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $268 = (($265) + 4)|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $269 = $268; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $270 = HEAP32[$269>>2]|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $271 = $267 ^ -330404727; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $272 = $270 ^ 137296536; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $273 = ((($4)) + 88|0); //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $274 = $273; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $275 = $274; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$275>>2] = $271; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $276 = (($274) + 4)|0; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $277 = $276; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$277>>2] = $272; //@line 90 "c_src/crypto_hash/blake512/ref/hash.c"
 $278 = ((($4)) + 96|0); //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $279 = $278; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $280 = $279; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$280>>2] = 953160567; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $281 = (($279) + 4)|0; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $282 = $281; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$282>>2] = 1160258022; //@line 91 "c_src/crypto_hash/blake512/ref/hash.c"
 $283 = ((($4)) + 104|0); //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $284 = $283; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $285 = $284; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$285>>2] = 887688300; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $286 = (($284) + 4)|0; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $287 = $286; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$287>>2] = -1101764913; //@line 92 "c_src/crypto_hash/blake512/ref/hash.c"
 $288 = ((($4)) + 112|0); //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $289 = $288; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $290 = $289; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$290>>2] = -914599715; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $291 = (($289) + 4)|0; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $292 = $291; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$292>>2] = -1062458953; //@line 93 "c_src/crypto_hash/blake512/ref/hash.c"
 $293 = ((($4)) + 120|0); //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $294 = $293; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $295 = $294; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$295>>2] = -1253635817; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $296 = (($294) + 4)|0; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $297 = $296; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$297>>2] = 1065670069; //@line 94 "c_src/crypto_hash/blake512/ref/hash.c"
 $298 = $2; //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $299 = ((($298)) + 116|0); //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $300 = HEAP32[$299>>2]|0; //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 $301 = ($300|0)==(0); //@line 95 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($301) {
  $302 = $2; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $303 = ((($302)) + 96|0); //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $304 = $303; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $305 = $304; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $306 = HEAP32[$305>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $307 = (($304) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $308 = $307; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $309 = HEAP32[$308>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $310 = ((($4)) + 96|0); //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $311 = $310; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $312 = $311; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $313 = HEAP32[$312>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $314 = (($311) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $315 = $314; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $316 = HEAP32[$315>>2]|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $317 = $313 ^ $306; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $318 = $316 ^ $309; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $319 = $310; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $320 = $319; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$320>>2] = $317; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $321 = (($319) + 4)|0; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $322 = $321; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$322>>2] = $318; //@line 96 "c_src/crypto_hash/blake512/ref/hash.c"
  $323 = $2; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $324 = ((($323)) + 96|0); //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $325 = $324; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $326 = $325; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $327 = HEAP32[$326>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $328 = (($325) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $329 = $328; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $330 = HEAP32[$329>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $331 = ((($4)) + 104|0); //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $332 = $331; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $333 = $332; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $334 = HEAP32[$333>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $335 = (($332) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $336 = $335; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $337 = HEAP32[$336>>2]|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $338 = $334 ^ $327; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $339 = $337 ^ $330; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $340 = $331; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $341 = $340; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$341>>2] = $338; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $342 = (($340) + 4)|0; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $343 = $342; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$343>>2] = $339; //@line 97 "c_src/crypto_hash/blake512/ref/hash.c"
  $344 = $2; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $345 = ((($344)) + 96|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $346 = ((($345)) + 8|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $347 = $346; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $348 = $347; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $349 = HEAP32[$348>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $350 = (($347) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $351 = $350; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $352 = HEAP32[$351>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $353 = ((($4)) + 112|0); //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $354 = $353; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $355 = $354; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $356 = HEAP32[$355>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $357 = (($354) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $358 = $357; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $359 = HEAP32[$358>>2]|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $360 = $356 ^ $349; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $361 = $359 ^ $352; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $362 = $353; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $363 = $362; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$363>>2] = $360; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $364 = (($362) + 4)|0; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $365 = $364; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$365>>2] = $361; //@line 98 "c_src/crypto_hash/blake512/ref/hash.c"
  $366 = $2; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $367 = ((($366)) + 96|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $368 = ((($367)) + 8|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $369 = $368; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $370 = $369; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $371 = HEAP32[$370>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $372 = (($369) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $373 = $372; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $374 = HEAP32[$373>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $375 = ((($4)) + 120|0); //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $376 = $375; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $377 = $376; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $378 = HEAP32[$377>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $379 = (($376) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $380 = $379; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $381 = HEAP32[$380>>2]|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $382 = $378 ^ $371; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $383 = $381 ^ $374; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $384 = $375; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $385 = $384; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$385>>2] = $382; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $386 = (($384) + 4)|0; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  $387 = $386; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$387>>2] = $383; //@line 99 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $388 = $6; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $389 = $388; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$389>>2] = 0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $390 = (($388) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 $391 = $390; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$391>>2] = 0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $392 = $6; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $393 = $392; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $394 = HEAP32[$393>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $395 = (($392) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $396 = $395; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $397 = HEAP32[$396>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $398 = ($397>>>0)<(0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $399 = ($394>>>0)<(16); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $400 = ($397|0)==(0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $401 = $400 & $399; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $402 = $398 | $401; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($402)) {
   break;
  }
  $403 = $6; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $404 = $403; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $405 = HEAP32[$404>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $406 = (($403) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $407 = $406; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $408 = HEAP32[$407>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $409 = (1317 + ($405<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $410 = HEAP8[$409>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $411 = $410&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $412 = (($5) + ($411<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $413 = $412; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $414 = $413; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $415 = HEAP32[$414>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $416 = (($413) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $417 = $416; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $418 = HEAP32[$417>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $419 = $6; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $420 = $419; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $421 = HEAP32[$420>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $422 = (($419) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $423 = $422; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $424 = HEAP32[$423>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $425 = (1317 + ($421<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $426 = ((($425)) + 1|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $427 = HEAP8[$426>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $428 = $427&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $429 = (8 + ($428<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $430 = $429; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $431 = $430; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $432 = HEAP32[$431>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $433 = (($430) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $434 = $433; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $435 = HEAP32[$434>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $436 = $415 ^ $432; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $437 = $418 ^ $435; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $438 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $439 = $438; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $440 = $439; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $441 = HEAP32[$440>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $442 = (($439) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $443 = $442; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $444 = HEAP32[$443>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $445 = (_i64Add(($436|0),($437|0),($441|0),($444|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $446 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $447 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $448 = $447; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $449 = HEAP32[$448>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $450 = (($447) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $451 = $450; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $452 = HEAP32[$451>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $453 = (_i64Add(($449|0),($452|0),($445|0),($446|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $454 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $455 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $456 = $455; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$456>>2] = $453; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $457 = (($455) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $458 = $457; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$458>>2] = $454; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $459 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $460 = $459; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $461 = $460; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $462 = HEAP32[$461>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $463 = (($460) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $464 = $463; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $465 = HEAP32[$464>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $466 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $467 = $466; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $468 = HEAP32[$467>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $469 = (($466) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $470 = $469; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $471 = HEAP32[$470>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $472 = $462 ^ $468; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $465 ^ $471; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $473 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $474 = $473; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $475 = $474; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $476 = HEAP32[$475>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $477 = (($474) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $478 = $477; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $479 = HEAP32[$478>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $480 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $481 = $480; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $482 = HEAP32[$481>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $483 = (($480) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $484 = $483; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $485 = HEAP32[$484>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $476 ^ $482; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $486 = $479 ^ $485; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $487 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $488 = $487; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $489 = $488; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$489>>2] = $486; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $490 = (($488) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $491 = $490; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$491>>2] = $472; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $492 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $493 = $492; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $494 = $493; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $495 = HEAP32[$494>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $496 = (($493) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $497 = $496; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $498 = HEAP32[$497>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $499 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $500 = $499; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $501 = $500; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $502 = HEAP32[$501>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $503 = (($500) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $504 = $503; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $505 = HEAP32[$504>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $506 = (_i64Add(($502|0),($505|0),($495|0),($498|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $507 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $508 = $499; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $509 = $508; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$509>>2] = $506; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $510 = (($508) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $511 = $510; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$511>>2] = $507; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $512 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $513 = $512; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $514 = $513; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $515 = HEAP32[$514>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $516 = (($513) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $517 = $516; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $518 = HEAP32[$517>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $519 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $520 = $519; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $521 = $520; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $522 = HEAP32[$521>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $523 = (($520) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $524 = $523; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $525 = HEAP32[$524>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $526 = $515 ^ $522; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $527 = $518 ^ $525; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $528 = (_bitshift64Shl(($526|0),($527|0),39)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $529 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $530 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $531 = $530; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $532 = $531; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $533 = HEAP32[$532>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $534 = (($531) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $535 = $534; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $536 = HEAP32[$535>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $537 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $538 = $537; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $539 = $538; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $540 = HEAP32[$539>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $541 = (($538) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $542 = $541; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $543 = HEAP32[$542>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $544 = $533 ^ $540; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $545 = $536 ^ $543; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $546 = (_bitshift64Lshr(($544|0),($545|0),25)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $547 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $548 = $528 | $546; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $549 = $529 | $547; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $550 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $551 = $550; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $552 = $551; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$552>>2] = $548; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $553 = (($551) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $554 = $553; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$554>>2] = $549; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $555 = $6; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $556 = $555; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $557 = HEAP32[$556>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $558 = (($555) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $559 = $558; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $560 = HEAP32[$559>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $561 = (1317 + ($557<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $562 = ((($561)) + 1|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $563 = HEAP8[$562>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $564 = $563&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $565 = (($5) + ($564<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $566 = $565; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $567 = $566; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $568 = HEAP32[$567>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $569 = (($566) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $570 = $569; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $571 = HEAP32[$570>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $572 = $6; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $573 = $572; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $574 = HEAP32[$573>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $575 = (($572) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $576 = $575; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $577 = HEAP32[$576>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $578 = (1317 + ($574<<4)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $579 = HEAP8[$578>>0]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $580 = $579&255; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $581 = (8 + ($580<<3)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $582 = $581; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $583 = $582; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $584 = HEAP32[$583>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $585 = (($582) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $586 = $585; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $587 = HEAP32[$586>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $588 = $568 ^ $584; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $589 = $571 ^ $587; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $590 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $591 = $590; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $592 = $591; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $593 = HEAP32[$592>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $594 = (($591) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $595 = $594; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $596 = HEAP32[$595>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $597 = (_i64Add(($588|0),($589|0),($593|0),($596|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $598 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $599 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $600 = $599; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $601 = HEAP32[$600>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $602 = (($599) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $603 = $602; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $604 = HEAP32[$603>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $605 = (_i64Add(($601|0),($604|0),($597|0),($598|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $606 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $607 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $608 = $607; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$608>>2] = $605; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $609 = (($607) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $610 = $609; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$610>>2] = $606; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $611 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $612 = $611; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $613 = $612; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $614 = HEAP32[$613>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $615 = (($612) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $616 = $615; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $617 = HEAP32[$616>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $618 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $619 = $618; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $620 = HEAP32[$619>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $621 = (($618) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $622 = $621; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $623 = HEAP32[$622>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $624 = $614 ^ $620; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $625 = $617 ^ $623; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $626 = (_bitshift64Shl(($624|0),($625|0),48)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $627 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $628 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $629 = $628; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $630 = $629; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $631 = HEAP32[$630>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $632 = (($629) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $633 = $632; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $634 = HEAP32[$633>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $635 = $4; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $636 = $635; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $637 = HEAP32[$636>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $638 = (($635) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $639 = $638; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $640 = HEAP32[$639>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $641 = $631 ^ $637; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $642 = $634 ^ $640; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $643 = (_bitshift64Lshr(($641|0),($642|0),16)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $644 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $645 = $626 | $643; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $646 = $627 | $644; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $647 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $648 = $647; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $649 = $648; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$649>>2] = $645; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $650 = (($648) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $651 = $650; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$651>>2] = $646; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $652 = ((($4)) + 96|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $653 = $652; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $654 = $653; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $655 = HEAP32[$654>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $656 = (($653) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $657 = $656; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $658 = HEAP32[$657>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $659 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $660 = $659; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $661 = $660; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $662 = HEAP32[$661>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $663 = (($660) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $664 = $663; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $665 = HEAP32[$664>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $666 = (_i64Add(($662|0),($665|0),($655|0),($658|0))|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $667 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $668 = $659; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $669 = $668; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$669>>2] = $666; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $670 = (($668) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $671 = $670; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$671>>2] = $667; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $672 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $673 = $672; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $674 = $673; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $675 = HEAP32[$674>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $676 = (($673) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $677 = $676; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $678 = HEAP32[$677>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $679 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $680 = $679; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $681 = $680; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $682 = HEAP32[$681>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $683 = (($680) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $684 = $683; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $685 = HEAP32[$684>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $686 = $675 ^ $682; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $687 = $678 ^ $685; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $688 = (_bitshift64Shl(($686|0),($687|0),53)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $689 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $690 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $691 = $690; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $692 = $691; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $693 = HEAP32[$692>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $694 = (($691) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $695 = $694; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $696 = HEAP32[$695>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $697 = ((($4)) + 64|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $698 = $697; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $699 = $698; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $700 = HEAP32[$699>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $701 = (($698) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $702 = $701; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $703 = HEAP32[$702>>2]|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $704 = $693 ^ $700; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $705 = $696 ^ $703; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $706 = (_bitshift64Lshr(($704|0),($705|0),11)|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $707 = tempRet0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $708 = $688 | $706; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $709 = $689 | $707; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $710 = ((($4)) + 32|0); //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $711 = $710; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $712 = $711; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$712>>2] = $708; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $713 = (($711) + 4)|0; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $714 = $713; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$714>>2] = $709; //@line 103 "c_src/crypto_hash/blake512/ref/hash.c"
  $715 = $6; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $716 = $715; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $717 = HEAP32[$716>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $718 = (($715) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $719 = $718; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $720 = HEAP32[$719>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $721 = (1317 + ($717<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $722 = ((($721)) + 2|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $723 = HEAP8[$722>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $724 = $723&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $725 = (($5) + ($724<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $726 = $725; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $727 = $726; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $728 = HEAP32[$727>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $729 = (($726) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $730 = $729; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $731 = HEAP32[$730>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $732 = $6; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $733 = $732; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $734 = HEAP32[$733>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $735 = (($732) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $736 = $735; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $737 = HEAP32[$736>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $738 = (1317 + ($734<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $739 = ((($738)) + 3|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $740 = HEAP8[$739>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $741 = $740&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $742 = (8 + ($741<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $743 = $742; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $744 = $743; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $745 = HEAP32[$744>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $746 = (($743) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $747 = $746; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $748 = HEAP32[$747>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $749 = $728 ^ $745; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $750 = $731 ^ $748; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $751 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $752 = $751; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $753 = $752; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $754 = HEAP32[$753>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $755 = (($752) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $756 = $755; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $757 = HEAP32[$756>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $758 = (_i64Add(($749|0),($750|0),($754|0),($757|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $759 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $760 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $761 = $760; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $762 = $761; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $763 = HEAP32[$762>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $764 = (($761) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $765 = $764; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $766 = HEAP32[$765>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $767 = (_i64Add(($763|0),($766|0),($758|0),($759|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $768 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $769 = $760; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $770 = $769; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$770>>2] = $767; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $771 = (($769) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $772 = $771; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$772>>2] = $768; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $773 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $774 = $773; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $775 = $774; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $776 = HEAP32[$775>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $777 = (($774) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $778 = $777; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $779 = HEAP32[$778>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $780 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $781 = $780; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $782 = $781; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $783 = HEAP32[$782>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $784 = (($781) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $785 = $784; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $786 = HEAP32[$785>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $787 = $776 ^ $783; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $779 ^ $786; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $788 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $789 = $788; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $790 = $789; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $791 = HEAP32[$790>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $792 = (($789) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $793 = $792; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $794 = HEAP32[$793>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $795 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $796 = $795; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $797 = $796; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $798 = HEAP32[$797>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $799 = (($796) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $800 = $799; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $801 = HEAP32[$800>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $791 ^ $798; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $802 = $794 ^ $801; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $803 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $804 = $803; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $805 = $804; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$805>>2] = $802; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $806 = (($804) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $807 = $806; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$807>>2] = $787; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $808 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $809 = $808; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $810 = $809; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $811 = HEAP32[$810>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $812 = (($809) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $813 = $812; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $814 = HEAP32[$813>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $815 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $816 = $815; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $817 = $816; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $818 = HEAP32[$817>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $819 = (($816) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $820 = $819; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $821 = HEAP32[$820>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $822 = (_i64Add(($818|0),($821|0),($811|0),($814|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $823 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $824 = $815; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $825 = $824; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$825>>2] = $822; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $826 = (($824) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $827 = $826; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$827>>2] = $823; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $828 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $829 = $828; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $830 = $829; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $831 = HEAP32[$830>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $832 = (($829) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $833 = $832; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $834 = HEAP32[$833>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $835 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $836 = $835; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $837 = $836; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $838 = HEAP32[$837>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $839 = (($836) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $840 = $839; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $841 = HEAP32[$840>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $842 = $831 ^ $838; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $843 = $834 ^ $841; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $844 = (_bitshift64Shl(($842|0),($843|0),39)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $845 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $846 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $847 = $846; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $848 = $847; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $849 = HEAP32[$848>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $850 = (($847) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $851 = $850; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $852 = HEAP32[$851>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $853 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $854 = $853; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $855 = $854; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $856 = HEAP32[$855>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $857 = (($854) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $858 = $857; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $859 = HEAP32[$858>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $860 = $849 ^ $856; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $861 = $852 ^ $859; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $862 = (_bitshift64Lshr(($860|0),($861|0),25)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $863 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $864 = $844 | $862; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $865 = $845 | $863; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $866 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $867 = $866; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $868 = $867; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$868>>2] = $864; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $869 = (($867) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $870 = $869; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$870>>2] = $865; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $871 = $6; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $872 = $871; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $873 = HEAP32[$872>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $874 = (($871) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $875 = $874; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $876 = HEAP32[$875>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $877 = (1317 + ($873<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $878 = ((($877)) + 3|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $879 = HEAP8[$878>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $880 = $879&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $881 = (($5) + ($880<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $882 = $881; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $883 = $882; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $884 = HEAP32[$883>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $885 = (($882) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $886 = $885; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $887 = HEAP32[$886>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $888 = $6; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $889 = $888; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $890 = HEAP32[$889>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $891 = (($888) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $892 = $891; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $893 = HEAP32[$892>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $894 = (1317 + ($890<<4)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $895 = ((($894)) + 2|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $896 = HEAP8[$895>>0]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $897 = $896&255; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $898 = (8 + ($897<<3)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $899 = $898; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $900 = $899; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $901 = HEAP32[$900>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $902 = (($899) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $903 = $902; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $904 = HEAP32[$903>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $905 = $884 ^ $901; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $906 = $887 ^ $904; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $907 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $908 = $907; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $909 = $908; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $910 = HEAP32[$909>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $911 = (($908) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $912 = $911; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $913 = HEAP32[$912>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $914 = (_i64Add(($905|0),($906|0),($910|0),($913|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $915 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $916 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $917 = $916; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $918 = $917; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $919 = HEAP32[$918>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $920 = (($917) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $921 = $920; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $922 = HEAP32[$921>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $923 = (_i64Add(($919|0),($922|0),($914|0),($915|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $924 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $925 = $916; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $926 = $925; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$926>>2] = $923; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $927 = (($925) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $928 = $927; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$928>>2] = $924; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $929 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $930 = $929; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $931 = $930; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $932 = HEAP32[$931>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $933 = (($930) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $934 = $933; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $935 = HEAP32[$934>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $936 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $937 = $936; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $938 = $937; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $939 = HEAP32[$938>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $940 = (($937) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $941 = $940; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $942 = HEAP32[$941>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $943 = $932 ^ $939; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $944 = $935 ^ $942; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $945 = (_bitshift64Shl(($943|0),($944|0),48)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $946 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $947 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $948 = $947; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $949 = $948; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $950 = HEAP32[$949>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $951 = (($948) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $952 = $951; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $953 = HEAP32[$952>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $954 = ((($4)) + 8|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $955 = $954; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $956 = $955; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $957 = HEAP32[$956>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $958 = (($955) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $959 = $958; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $960 = HEAP32[$959>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $961 = $950 ^ $957; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $962 = $953 ^ $960; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $963 = (_bitshift64Lshr(($961|0),($962|0),16)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $964 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $965 = $945 | $963; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $966 = $946 | $964; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $967 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $968 = $967; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $969 = $968; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$969>>2] = $965; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $970 = (($968) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $971 = $970; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$971>>2] = $966; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $972 = ((($4)) + 104|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $973 = $972; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $974 = $973; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $975 = HEAP32[$974>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $976 = (($973) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $977 = $976; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $978 = HEAP32[$977>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $979 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $980 = $979; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $981 = $980; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $982 = HEAP32[$981>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $983 = (($980) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $984 = $983; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $985 = HEAP32[$984>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $986 = (_i64Add(($982|0),($985|0),($975|0),($978|0))|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $987 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $988 = $979; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $989 = $988; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$989>>2] = $986; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $990 = (($988) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $991 = $990; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$991>>2] = $987; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $992 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $993 = $992; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $994 = $993; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $995 = HEAP32[$994>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $996 = (($993) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $997 = $996; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $998 = HEAP32[$997>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $999 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1000 = $999; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1001 = $1000; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1002 = HEAP32[$1001>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1003 = (($1000) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1004 = $1003; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1005 = HEAP32[$1004>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1006 = $995 ^ $1002; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1007 = $998 ^ $1005; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1008 = (_bitshift64Shl(($1006|0),($1007|0),53)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1009 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1010 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1011 = $1010; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1012 = $1011; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1013 = HEAP32[$1012>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1014 = (($1011) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1015 = $1014; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1016 = HEAP32[$1015>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1017 = ((($4)) + 72|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1018 = $1017; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1019 = $1018; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1020 = HEAP32[$1019>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1021 = (($1018) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1022 = $1021; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1023 = HEAP32[$1022>>2]|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1024 = $1013 ^ $1020; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1025 = $1016 ^ $1023; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1026 = (_bitshift64Lshr(($1024|0),($1025|0),11)|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1027 = tempRet0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1028 = $1008 | $1026; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1029 = $1009 | $1027; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1030 = ((($4)) + 40|0); //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1031 = $1030; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1032 = $1031; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1032>>2] = $1028; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1033 = (($1031) + 4)|0; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1034 = $1033; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1034>>2] = $1029; //@line 104 "c_src/crypto_hash/blake512/ref/hash.c"
  $1035 = $6; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1036 = $1035; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1037 = HEAP32[$1036>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1038 = (($1035) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1039 = $1038; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1040 = HEAP32[$1039>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1041 = (1317 + ($1037<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1042 = ((($1041)) + 4|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1043 = HEAP8[$1042>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1044 = $1043&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1045 = (($5) + ($1044<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1046 = $1045; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1047 = $1046; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1048 = HEAP32[$1047>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1049 = (($1046) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1050 = $1049; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1051 = HEAP32[$1050>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1052 = $6; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1053 = $1052; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1054 = HEAP32[$1053>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1055 = (($1052) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1056 = $1055; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1057 = HEAP32[$1056>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1058 = (1317 + ($1054<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1059 = ((($1058)) + 5|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1060 = HEAP8[$1059>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1061 = $1060&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1062 = (8 + ($1061<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1063 = $1062; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1064 = $1063; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1065 = HEAP32[$1064>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1066 = (($1063) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1067 = $1066; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1068 = HEAP32[$1067>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1069 = $1048 ^ $1065; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1070 = $1051 ^ $1068; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1071 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1072 = $1071; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1073 = $1072; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1074 = HEAP32[$1073>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1075 = (($1072) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1076 = $1075; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1077 = HEAP32[$1076>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1078 = (_i64Add(($1069|0),($1070|0),($1074|0),($1077|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1079 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1080 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1081 = $1080; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1082 = $1081; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1083 = HEAP32[$1082>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1084 = (($1081) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1085 = $1084; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1086 = HEAP32[$1085>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1087 = (_i64Add(($1083|0),($1086|0),($1078|0),($1079|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1088 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1089 = $1080; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1090 = $1089; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1090>>2] = $1087; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1091 = (($1089) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1092 = $1091; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1092>>2] = $1088; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1093 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1094 = $1093; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1095 = $1094; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1096 = HEAP32[$1095>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1097 = (($1094) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1098 = $1097; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1099 = HEAP32[$1098>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1100 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1101 = $1100; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1102 = $1101; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1103 = HEAP32[$1102>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1104 = (($1101) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1105 = $1104; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1106 = HEAP32[$1105>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1107 = $1096 ^ $1103; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1099 ^ $1106; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1108 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1109 = $1108; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1110 = $1109; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1111 = HEAP32[$1110>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1112 = (($1109) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1113 = $1112; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1114 = HEAP32[$1113>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1115 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1116 = $1115; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1117 = $1116; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1118 = HEAP32[$1117>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1119 = (($1116) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1120 = $1119; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1121 = HEAP32[$1120>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1111 ^ $1118; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1122 = $1114 ^ $1121; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1123 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1124 = $1123; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1125 = $1124; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1125>>2] = $1122; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1126 = (($1124) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1127 = $1126; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1127>>2] = $1107; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1128 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1129 = $1128; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1130 = $1129; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1131 = HEAP32[$1130>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1132 = (($1129) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1133 = $1132; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1134 = HEAP32[$1133>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1135 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1136 = $1135; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1137 = $1136; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1138 = HEAP32[$1137>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1139 = (($1136) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1140 = $1139; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1141 = HEAP32[$1140>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1142 = (_i64Add(($1138|0),($1141|0),($1131|0),($1134|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1143 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1144 = $1135; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1145 = $1144; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1145>>2] = $1142; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1146 = (($1144) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1147 = $1146; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1147>>2] = $1143; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1148 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1149 = $1148; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1150 = $1149; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1151 = HEAP32[$1150>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1152 = (($1149) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1153 = $1152; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1154 = HEAP32[$1153>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1155 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1156 = $1155; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1157 = $1156; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1158 = HEAP32[$1157>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1159 = (($1156) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1160 = $1159; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1161 = HEAP32[$1160>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1162 = $1151 ^ $1158; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1163 = $1154 ^ $1161; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1164 = (_bitshift64Shl(($1162|0),($1163|0),39)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1165 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1166 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1167 = $1166; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1168 = $1167; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1169 = HEAP32[$1168>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1170 = (($1167) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1171 = $1170; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1172 = HEAP32[$1171>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1173 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1174 = $1173; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1175 = $1174; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1176 = HEAP32[$1175>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1177 = (($1174) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1178 = $1177; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1179 = HEAP32[$1178>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1180 = $1169 ^ $1176; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1181 = $1172 ^ $1179; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1182 = (_bitshift64Lshr(($1180|0),($1181|0),25)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1183 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1184 = $1164 | $1182; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1185 = $1165 | $1183; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1186 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1187 = $1186; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1188 = $1187; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1188>>2] = $1184; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1189 = (($1187) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1190 = $1189; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1190>>2] = $1185; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1191 = $6; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1192 = $1191; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1193 = HEAP32[$1192>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1194 = (($1191) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1195 = $1194; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1196 = HEAP32[$1195>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1197 = (1317 + ($1193<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1198 = ((($1197)) + 5|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1199 = HEAP8[$1198>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1200 = $1199&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1201 = (($5) + ($1200<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1202 = $1201; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1203 = $1202; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1204 = HEAP32[$1203>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1205 = (($1202) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1206 = $1205; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1207 = HEAP32[$1206>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1208 = $6; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1209 = $1208; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1210 = HEAP32[$1209>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1211 = (($1208) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1212 = $1211; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1213 = HEAP32[$1212>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1214 = (1317 + ($1210<<4)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1215 = ((($1214)) + 4|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1216 = HEAP8[$1215>>0]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1217 = $1216&255; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1218 = (8 + ($1217<<3)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1219 = $1218; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1220 = $1219; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1221 = HEAP32[$1220>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1222 = (($1219) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1223 = $1222; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1224 = HEAP32[$1223>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1225 = $1204 ^ $1221; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1226 = $1207 ^ $1224; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1227 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1228 = $1227; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1229 = $1228; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1230 = HEAP32[$1229>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1231 = (($1228) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1232 = $1231; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1233 = HEAP32[$1232>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1234 = (_i64Add(($1225|0),($1226|0),($1230|0),($1233|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1235 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1236 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1237 = $1236; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1238 = $1237; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1239 = HEAP32[$1238>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1240 = (($1237) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1241 = $1240; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1242 = HEAP32[$1241>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1243 = (_i64Add(($1239|0),($1242|0),($1234|0),($1235|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1244 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1245 = $1236; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1246 = $1245; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1246>>2] = $1243; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1247 = (($1245) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1248 = $1247; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1248>>2] = $1244; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1249 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1250 = $1249; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1251 = $1250; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1252 = HEAP32[$1251>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1253 = (($1250) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1254 = $1253; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1255 = HEAP32[$1254>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1256 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1257 = $1256; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1258 = $1257; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1259 = HEAP32[$1258>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1260 = (($1257) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1261 = $1260; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1262 = HEAP32[$1261>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1263 = $1252 ^ $1259; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1264 = $1255 ^ $1262; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1265 = (_bitshift64Shl(($1263|0),($1264|0),48)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1266 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1267 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1268 = $1267; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1269 = $1268; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1270 = HEAP32[$1269>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1271 = (($1268) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1272 = $1271; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1273 = HEAP32[$1272>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1274 = ((($4)) + 16|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1275 = $1274; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1276 = $1275; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1277 = HEAP32[$1276>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1278 = (($1275) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1279 = $1278; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1280 = HEAP32[$1279>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1281 = $1270 ^ $1277; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1282 = $1273 ^ $1280; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1283 = (_bitshift64Lshr(($1281|0),($1282|0),16)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1284 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1285 = $1265 | $1283; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1286 = $1266 | $1284; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1287 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1288 = $1287; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1289 = $1288; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1289>>2] = $1285; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1290 = (($1288) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1291 = $1290; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1291>>2] = $1286; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1292 = ((($4)) + 112|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1293 = $1292; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1294 = $1293; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1295 = HEAP32[$1294>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1296 = (($1293) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1297 = $1296; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1298 = HEAP32[$1297>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1299 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1300 = $1299; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1301 = $1300; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1302 = HEAP32[$1301>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1303 = (($1300) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1304 = $1303; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1305 = HEAP32[$1304>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1306 = (_i64Add(($1302|0),($1305|0),($1295|0),($1298|0))|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1307 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1308 = $1299; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1309 = $1308; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1309>>2] = $1306; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1310 = (($1308) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1311 = $1310; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1311>>2] = $1307; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1312 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1313 = $1312; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1314 = $1313; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1315 = HEAP32[$1314>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1316 = (($1313) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1317 = $1316; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1318 = HEAP32[$1317>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1319 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1320 = $1319; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1321 = $1320; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1322 = HEAP32[$1321>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1323 = (($1320) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1324 = $1323; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1325 = HEAP32[$1324>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1326 = $1315 ^ $1322; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1327 = $1318 ^ $1325; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1328 = (_bitshift64Shl(($1326|0),($1327|0),53)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1329 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1330 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1331 = $1330; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1332 = $1331; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1333 = HEAP32[$1332>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1334 = (($1331) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1335 = $1334; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1336 = HEAP32[$1335>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1337 = ((($4)) + 80|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1338 = $1337; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1339 = $1338; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1340 = HEAP32[$1339>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1341 = (($1338) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1342 = $1341; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1343 = HEAP32[$1342>>2]|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1344 = $1333 ^ $1340; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1345 = $1336 ^ $1343; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1346 = (_bitshift64Lshr(($1344|0),($1345|0),11)|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1347 = tempRet0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1348 = $1328 | $1346; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1349 = $1329 | $1347; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1350 = ((($4)) + 48|0); //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1351 = $1350; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1352 = $1351; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1352>>2] = $1348; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1353 = (($1351) + 4)|0; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1354 = $1353; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1354>>2] = $1349; //@line 105 "c_src/crypto_hash/blake512/ref/hash.c"
  $1355 = $6; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1356 = $1355; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1357 = HEAP32[$1356>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1358 = (($1355) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1359 = $1358; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1360 = HEAP32[$1359>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1361 = (1317 + ($1357<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1362 = ((($1361)) + 6|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1363 = HEAP8[$1362>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1364 = $1363&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1365 = (($5) + ($1364<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1366 = $1365; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1367 = $1366; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1368 = HEAP32[$1367>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1369 = (($1366) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1370 = $1369; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1371 = HEAP32[$1370>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1372 = $6; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1373 = $1372; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1374 = HEAP32[$1373>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1375 = (($1372) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1376 = $1375; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1377 = HEAP32[$1376>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1378 = (1317 + ($1374<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1379 = ((($1378)) + 7|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1380 = HEAP8[$1379>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1381 = $1380&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1382 = (8 + ($1381<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1383 = $1382; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1384 = $1383; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1385 = HEAP32[$1384>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1386 = (($1383) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1387 = $1386; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1388 = HEAP32[$1387>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1389 = $1368 ^ $1385; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1390 = $1371 ^ $1388; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1391 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1392 = $1391; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1393 = $1392; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1394 = HEAP32[$1393>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1395 = (($1392) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1396 = $1395; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1397 = HEAP32[$1396>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1398 = (_i64Add(($1389|0),($1390|0),($1394|0),($1397|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1399 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1400 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1401 = $1400; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1402 = $1401; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1403 = HEAP32[$1402>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1404 = (($1401) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1405 = $1404; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1406 = HEAP32[$1405>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1407 = (_i64Add(($1403|0),($1406|0),($1398|0),($1399|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1408 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1409 = $1400; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1410 = $1409; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1410>>2] = $1407; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1411 = (($1409) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1412 = $1411; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1412>>2] = $1408; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1413 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1414 = $1413; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1415 = $1414; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1416 = HEAP32[$1415>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1417 = (($1414) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1418 = $1417; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1419 = HEAP32[$1418>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1420 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1421 = $1420; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1422 = $1421; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1423 = HEAP32[$1422>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1424 = (($1421) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1425 = $1424; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1426 = HEAP32[$1425>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1427 = $1416 ^ $1423; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1419 ^ $1426; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1428 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1429 = $1428; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1430 = $1429; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1431 = HEAP32[$1430>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1432 = (($1429) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1433 = $1432; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1434 = HEAP32[$1433>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1435 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1436 = $1435; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1437 = $1436; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1438 = HEAP32[$1437>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1439 = (($1436) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1440 = $1439; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1441 = HEAP32[$1440>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1431 ^ $1438; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1442 = $1434 ^ $1441; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1443 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1444 = $1443; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1445 = $1444; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1445>>2] = $1442; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1446 = (($1444) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1447 = $1446; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1447>>2] = $1427; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1448 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1449 = $1448; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1450 = $1449; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1451 = HEAP32[$1450>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1452 = (($1449) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1453 = $1452; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1454 = HEAP32[$1453>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1455 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1456 = $1455; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1457 = $1456; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1458 = HEAP32[$1457>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1459 = (($1456) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1460 = $1459; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1461 = HEAP32[$1460>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1462 = (_i64Add(($1458|0),($1461|0),($1451|0),($1454|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1463 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1464 = $1455; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1465 = $1464; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1465>>2] = $1462; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1466 = (($1464) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1467 = $1466; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1467>>2] = $1463; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1468 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1469 = $1468; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1470 = $1469; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1471 = HEAP32[$1470>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1472 = (($1469) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1473 = $1472; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1474 = HEAP32[$1473>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1475 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1476 = $1475; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1477 = $1476; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1478 = HEAP32[$1477>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1479 = (($1476) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1480 = $1479; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1481 = HEAP32[$1480>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1482 = $1471 ^ $1478; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1483 = $1474 ^ $1481; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1484 = (_bitshift64Shl(($1482|0),($1483|0),39)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1485 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1486 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1487 = $1486; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1488 = $1487; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1489 = HEAP32[$1488>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1490 = (($1487) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1491 = $1490; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1492 = HEAP32[$1491>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1493 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1494 = $1493; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1495 = $1494; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1496 = HEAP32[$1495>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1497 = (($1494) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1498 = $1497; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1499 = HEAP32[$1498>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1500 = $1489 ^ $1496; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1501 = $1492 ^ $1499; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1502 = (_bitshift64Lshr(($1500|0),($1501|0),25)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1503 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1504 = $1484 | $1502; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1505 = $1485 | $1503; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1506 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1507 = $1506; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1508 = $1507; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1508>>2] = $1504; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1509 = (($1507) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1510 = $1509; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1510>>2] = $1505; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1511 = $6; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1512 = $1511; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1513 = HEAP32[$1512>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1514 = (($1511) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1515 = $1514; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1516 = HEAP32[$1515>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1517 = (1317 + ($1513<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1518 = ((($1517)) + 7|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1519 = HEAP8[$1518>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1520 = $1519&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1521 = (($5) + ($1520<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1522 = $1521; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1523 = $1522; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1524 = HEAP32[$1523>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1525 = (($1522) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1526 = $1525; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1527 = HEAP32[$1526>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1528 = $6; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1529 = $1528; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1530 = HEAP32[$1529>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1531 = (($1528) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1532 = $1531; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1533 = HEAP32[$1532>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1534 = (1317 + ($1530<<4)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1535 = ((($1534)) + 6|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1536 = HEAP8[$1535>>0]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1537 = $1536&255; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1538 = (8 + ($1537<<3)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1539 = $1538; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1540 = $1539; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1541 = HEAP32[$1540>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1542 = (($1539) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1543 = $1542; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1544 = HEAP32[$1543>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1545 = $1524 ^ $1541; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1546 = $1527 ^ $1544; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1547 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1548 = $1547; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1549 = $1548; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1550 = HEAP32[$1549>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1551 = (($1548) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1552 = $1551; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1553 = HEAP32[$1552>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1554 = (_i64Add(($1545|0),($1546|0),($1550|0),($1553|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1555 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1556 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1557 = $1556; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1558 = $1557; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1559 = HEAP32[$1558>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1560 = (($1557) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1561 = $1560; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1562 = HEAP32[$1561>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1563 = (_i64Add(($1559|0),($1562|0),($1554|0),($1555|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1564 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1565 = $1556; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1566 = $1565; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1566>>2] = $1563; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1567 = (($1565) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1568 = $1567; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1568>>2] = $1564; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1569 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1570 = $1569; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1571 = $1570; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1572 = HEAP32[$1571>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1573 = (($1570) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1574 = $1573; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1575 = HEAP32[$1574>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1576 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1577 = $1576; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1578 = $1577; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1579 = HEAP32[$1578>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1580 = (($1577) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1581 = $1580; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1582 = HEAP32[$1581>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1583 = $1572 ^ $1579; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1584 = $1575 ^ $1582; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1585 = (_bitshift64Shl(($1583|0),($1584|0),48)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1586 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1587 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1588 = $1587; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1589 = $1588; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1590 = HEAP32[$1589>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1591 = (($1588) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1592 = $1591; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1593 = HEAP32[$1592>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1594 = ((($4)) + 24|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1595 = $1594; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1596 = $1595; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1597 = HEAP32[$1596>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1598 = (($1595) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1599 = $1598; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1600 = HEAP32[$1599>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1601 = $1590 ^ $1597; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1602 = $1593 ^ $1600; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1603 = (_bitshift64Lshr(($1601|0),($1602|0),16)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1604 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1605 = $1585 | $1603; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1606 = $1586 | $1604; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1607 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1608 = $1607; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1609 = $1608; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1609>>2] = $1605; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1610 = (($1608) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1611 = $1610; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1611>>2] = $1606; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1612 = ((($4)) + 120|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1613 = $1612; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1614 = $1613; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1615 = HEAP32[$1614>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1616 = (($1613) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1617 = $1616; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1618 = HEAP32[$1617>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1619 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1620 = $1619; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1621 = $1620; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1622 = HEAP32[$1621>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1623 = (($1620) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1624 = $1623; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1625 = HEAP32[$1624>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1626 = (_i64Add(($1622|0),($1625|0),($1615|0),($1618|0))|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1627 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1628 = $1619; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1629 = $1628; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1629>>2] = $1626; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1630 = (($1628) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1631 = $1630; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1631>>2] = $1627; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1632 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1633 = $1632; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1634 = $1633; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1635 = HEAP32[$1634>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1636 = (($1633) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1637 = $1636; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1638 = HEAP32[$1637>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1639 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1640 = $1639; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1641 = $1640; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1642 = HEAP32[$1641>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1643 = (($1640) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1644 = $1643; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1645 = HEAP32[$1644>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1646 = $1635 ^ $1642; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1647 = $1638 ^ $1645; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1648 = (_bitshift64Shl(($1646|0),($1647|0),53)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1649 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1650 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1651 = $1650; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1652 = $1651; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1653 = HEAP32[$1652>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1654 = (($1651) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1655 = $1654; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1656 = HEAP32[$1655>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1657 = ((($4)) + 88|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1658 = $1657; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1659 = $1658; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1660 = HEAP32[$1659>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1661 = (($1658) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1662 = $1661; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1663 = HEAP32[$1662>>2]|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1664 = $1653 ^ $1660; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1665 = $1656 ^ $1663; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1666 = (_bitshift64Lshr(($1664|0),($1665|0),11)|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1667 = tempRet0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1668 = $1648 | $1666; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1669 = $1649 | $1667; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1670 = ((($4)) + 56|0); //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1671 = $1670; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1672 = $1671; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1672>>2] = $1668; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1673 = (($1671) + 4)|0; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1674 = $1673; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1674>>2] = $1669; //@line 106 "c_src/crypto_hash/blake512/ref/hash.c"
  $1675 = $6; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1676 = $1675; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1677 = HEAP32[$1676>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1678 = (($1675) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1679 = $1678; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1680 = HEAP32[$1679>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1681 = (1317 + ($1677<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1682 = ((($1681)) + 14|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1683 = HEAP8[$1682>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1684 = $1683&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1685 = (($5) + ($1684<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1686 = $1685; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1687 = $1686; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1688 = HEAP32[$1687>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1689 = (($1686) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1690 = $1689; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1691 = HEAP32[$1690>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1692 = $6; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1693 = $1692; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1694 = HEAP32[$1693>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1695 = (($1692) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1696 = $1695; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1697 = HEAP32[$1696>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1698 = (1317 + ($1694<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1699 = ((($1698)) + 15|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1700 = HEAP8[$1699>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1701 = $1700&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1702 = (8 + ($1701<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1703 = $1702; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1704 = $1703; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1705 = HEAP32[$1704>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1706 = (($1703) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1707 = $1706; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1708 = HEAP32[$1707>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1709 = $1688 ^ $1705; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1710 = $1691 ^ $1708; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1711 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1712 = $1711; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1713 = $1712; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1714 = HEAP32[$1713>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1715 = (($1712) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1716 = $1715; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1717 = HEAP32[$1716>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1718 = (_i64Add(($1709|0),($1710|0),($1714|0),($1717|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1719 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1720 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1721 = $1720; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1722 = $1721; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1723 = HEAP32[$1722>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1724 = (($1721) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1725 = $1724; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1726 = HEAP32[$1725>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1727 = (_i64Add(($1723|0),($1726|0),($1718|0),($1719|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1728 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1729 = $1720; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1730 = $1729; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1730>>2] = $1727; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1731 = (($1729) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1732 = $1731; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1732>>2] = $1728; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1733 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1734 = $1733; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1735 = $1734; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1736 = HEAP32[$1735>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1737 = (($1734) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1738 = $1737; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1739 = HEAP32[$1738>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1740 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1741 = $1740; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1742 = $1741; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1743 = HEAP32[$1742>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1744 = (($1741) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1745 = $1744; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1746 = HEAP32[$1745>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1747 = $1736 ^ $1743; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1739 ^ $1746; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1748 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1749 = $1748; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1750 = $1749; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1751 = HEAP32[$1750>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1752 = (($1749) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1753 = $1752; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1754 = HEAP32[$1753>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1755 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1756 = $1755; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1757 = $1756; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1758 = HEAP32[$1757>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1759 = (($1756) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1760 = $1759; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1761 = HEAP32[$1760>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1751 ^ $1758; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1762 = $1754 ^ $1761; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1763 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1764 = $1763; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1765 = $1764; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1765>>2] = $1762; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1766 = (($1764) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1767 = $1766; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1767>>2] = $1747; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1768 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1769 = $1768; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1770 = $1769; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1771 = HEAP32[$1770>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1772 = (($1769) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1773 = $1772; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1774 = HEAP32[$1773>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1775 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1776 = $1775; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1777 = $1776; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1778 = HEAP32[$1777>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1779 = (($1776) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1780 = $1779; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1781 = HEAP32[$1780>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1782 = (_i64Add(($1778|0),($1781|0),($1771|0),($1774|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1783 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1784 = $1775; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1785 = $1784; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1785>>2] = $1782; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1786 = (($1784) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1787 = $1786; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1787>>2] = $1783; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1788 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1789 = $1788; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1790 = $1789; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1791 = HEAP32[$1790>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1792 = (($1789) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1793 = $1792; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1794 = HEAP32[$1793>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1795 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1796 = $1795; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1797 = $1796; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1798 = HEAP32[$1797>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1799 = (($1796) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1800 = $1799; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1801 = HEAP32[$1800>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1802 = $1791 ^ $1798; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1803 = $1794 ^ $1801; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1804 = (_bitshift64Shl(($1802|0),($1803|0),39)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1805 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1806 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1807 = $1806; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1808 = $1807; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1809 = HEAP32[$1808>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1810 = (($1807) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1811 = $1810; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1812 = HEAP32[$1811>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1813 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1814 = $1813; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1815 = $1814; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1816 = HEAP32[$1815>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1817 = (($1814) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1818 = $1817; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1819 = HEAP32[$1818>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1820 = $1809 ^ $1816; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1821 = $1812 ^ $1819; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1822 = (_bitshift64Lshr(($1820|0),($1821|0),25)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1823 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1824 = $1804 | $1822; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1825 = $1805 | $1823; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1826 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1827 = $1826; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1828 = $1827; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1828>>2] = $1824; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1829 = (($1827) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1830 = $1829; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1830>>2] = $1825; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1831 = $6; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1832 = $1831; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1833 = HEAP32[$1832>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1834 = (($1831) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1835 = $1834; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1836 = HEAP32[$1835>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1837 = (1317 + ($1833<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1838 = ((($1837)) + 15|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1839 = HEAP8[$1838>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1840 = $1839&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1841 = (($5) + ($1840<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1842 = $1841; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1843 = $1842; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1844 = HEAP32[$1843>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1845 = (($1842) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1846 = $1845; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1847 = HEAP32[$1846>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1848 = $6; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1849 = $1848; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1850 = HEAP32[$1849>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1851 = (($1848) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1852 = $1851; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1853 = HEAP32[$1852>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1854 = (1317 + ($1850<<4)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1855 = ((($1854)) + 14|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1856 = HEAP8[$1855>>0]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1857 = $1856&255; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1858 = (8 + ($1857<<3)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1859 = $1858; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1860 = $1859; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1861 = HEAP32[$1860>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1862 = (($1859) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1863 = $1862; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1864 = HEAP32[$1863>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1865 = $1844 ^ $1861; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1866 = $1847 ^ $1864; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1867 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1868 = $1867; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1869 = $1868; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1870 = HEAP32[$1869>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1871 = (($1868) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1872 = $1871; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1873 = HEAP32[$1872>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1874 = (_i64Add(($1865|0),($1866|0),($1870|0),($1873|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1875 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1876 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1877 = $1876; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1878 = $1877; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1879 = HEAP32[$1878>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1880 = (($1877) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1881 = $1880; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1882 = HEAP32[$1881>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1883 = (_i64Add(($1879|0),($1882|0),($1874|0),($1875|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1884 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1885 = $1876; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1886 = $1885; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1886>>2] = $1883; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1887 = (($1885) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1888 = $1887; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1888>>2] = $1884; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1889 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1890 = $1889; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1891 = $1890; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1892 = HEAP32[$1891>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1893 = (($1890) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1894 = $1893; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1895 = HEAP32[$1894>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1896 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1897 = $1896; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1898 = $1897; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1899 = HEAP32[$1898>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1900 = (($1897) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1901 = $1900; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1902 = HEAP32[$1901>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1903 = $1892 ^ $1899; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1904 = $1895 ^ $1902; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1905 = (_bitshift64Shl(($1903|0),($1904|0),48)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1906 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1907 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1908 = $1907; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1909 = $1908; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1910 = HEAP32[$1909>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1911 = (($1908) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1912 = $1911; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1913 = HEAP32[$1912>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1914 = ((($4)) + 24|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1915 = $1914; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1916 = $1915; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1917 = HEAP32[$1916>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1918 = (($1915) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1919 = $1918; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1920 = HEAP32[$1919>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1921 = $1910 ^ $1917; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1922 = $1913 ^ $1920; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1923 = (_bitshift64Lshr(($1921|0),($1922|0),16)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1924 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1925 = $1905 | $1923; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1926 = $1906 | $1924; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1927 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1928 = $1927; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1929 = $1928; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1929>>2] = $1925; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1930 = (($1928) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1931 = $1930; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1931>>2] = $1926; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1932 = ((($4)) + 112|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1933 = $1932; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1934 = $1933; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1935 = HEAP32[$1934>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1936 = (($1933) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1937 = $1936; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1938 = HEAP32[$1937>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1939 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1940 = $1939; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1941 = $1940; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1942 = HEAP32[$1941>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1943 = (($1940) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1944 = $1943; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1945 = HEAP32[$1944>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1946 = (_i64Add(($1942|0),($1945|0),($1935|0),($1938|0))|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1947 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1948 = $1939; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1949 = $1948; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1949>>2] = $1946; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1950 = (($1948) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1951 = $1950; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1951>>2] = $1947; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1952 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1953 = $1952; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1954 = $1953; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1955 = HEAP32[$1954>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1956 = (($1953) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1957 = $1956; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1958 = HEAP32[$1957>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1959 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1960 = $1959; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1961 = $1960; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1962 = HEAP32[$1961>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1963 = (($1960) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1964 = $1963; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1965 = HEAP32[$1964>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1966 = $1955 ^ $1962; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1967 = $1958 ^ $1965; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1968 = (_bitshift64Shl(($1966|0),($1967|0),53)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1969 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1970 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1971 = $1970; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1972 = $1971; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1973 = HEAP32[$1972>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1974 = (($1971) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1975 = $1974; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1976 = HEAP32[$1975>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1977 = ((($4)) + 72|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1978 = $1977; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1979 = $1978; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1980 = HEAP32[$1979>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1981 = (($1978) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1982 = $1981; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1983 = HEAP32[$1982>>2]|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1984 = $1973 ^ $1980; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1985 = $1976 ^ $1983; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1986 = (_bitshift64Lshr(($1984|0),($1985|0),11)|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1987 = tempRet0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1988 = $1968 | $1986; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1989 = $1969 | $1987; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1990 = ((($4)) + 32|0); //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1991 = $1990; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1992 = $1991; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1992>>2] = $1988; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1993 = (($1991) + 4)|0; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1994 = $1993; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$1994>>2] = $1989; //@line 107 "c_src/crypto_hash/blake512/ref/hash.c"
  $1995 = $6; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1996 = $1995; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1997 = HEAP32[$1996>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1998 = (($1995) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $1999 = $1998; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2000 = HEAP32[$1999>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2001 = (1317 + ($1997<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2002 = ((($2001)) + 12|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2003 = HEAP8[$2002>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2004 = $2003&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2005 = (($5) + ($2004<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2006 = $2005; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2007 = $2006; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2008 = HEAP32[$2007>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2009 = (($2006) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2010 = $2009; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2011 = HEAP32[$2010>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2012 = $6; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2013 = $2012; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2014 = HEAP32[$2013>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2015 = (($2012) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2016 = $2015; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2017 = HEAP32[$2016>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2018 = (1317 + ($2014<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2019 = ((($2018)) + 13|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2020 = HEAP8[$2019>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2021 = $2020&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2022 = (8 + ($2021<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2023 = $2022; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2024 = $2023; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2025 = HEAP32[$2024>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2026 = (($2023) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2027 = $2026; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2028 = HEAP32[$2027>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2029 = $2008 ^ $2025; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2030 = $2011 ^ $2028; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2031 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2032 = $2031; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2033 = $2032; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2034 = HEAP32[$2033>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2035 = (($2032) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2036 = $2035; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2037 = HEAP32[$2036>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2038 = (_i64Add(($2029|0),($2030|0),($2034|0),($2037|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2039 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2040 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2041 = $2040; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2042 = $2041; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2043 = HEAP32[$2042>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2044 = (($2041) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2045 = $2044; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2046 = HEAP32[$2045>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2047 = (_i64Add(($2043|0),($2046|0),($2038|0),($2039|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2048 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2049 = $2040; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2050 = $2049; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2050>>2] = $2047; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2051 = (($2049) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2052 = $2051; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2052>>2] = $2048; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2053 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2054 = $2053; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2055 = $2054; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2056 = HEAP32[$2055>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2057 = (($2054) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2058 = $2057; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2059 = HEAP32[$2058>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2060 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2061 = $2060; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2062 = $2061; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2063 = HEAP32[$2062>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2064 = (($2061) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2065 = $2064; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2066 = HEAP32[$2065>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2067 = $2056 ^ $2063; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2059 ^ $2066; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2068 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2069 = $2068; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2070 = $2069; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2071 = HEAP32[$2070>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2072 = (($2069) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2073 = $2072; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2074 = HEAP32[$2073>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2075 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2076 = $2075; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2077 = $2076; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2078 = HEAP32[$2077>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2079 = (($2076) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2080 = $2079; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2081 = HEAP32[$2080>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2071 ^ $2078; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2082 = $2074 ^ $2081; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2083 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2084 = $2083; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2085 = $2084; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2085>>2] = $2082; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2086 = (($2084) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2087 = $2086; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2087>>2] = $2067; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2088 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2089 = $2088; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2090 = $2089; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2091 = HEAP32[$2090>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2092 = (($2089) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2093 = $2092; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2094 = HEAP32[$2093>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2095 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2096 = $2095; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2097 = $2096; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2098 = HEAP32[$2097>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2099 = (($2096) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2100 = $2099; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2101 = HEAP32[$2100>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2102 = (_i64Add(($2098|0),($2101|0),($2091|0),($2094|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2103 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2104 = $2095; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2105 = $2104; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2105>>2] = $2102; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2106 = (($2104) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2107 = $2106; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2107>>2] = $2103; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2108 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2109 = $2108; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2110 = $2109; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2111 = HEAP32[$2110>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2112 = (($2109) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2113 = $2112; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2114 = HEAP32[$2113>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2115 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2116 = $2115; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2117 = $2116; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2118 = HEAP32[$2117>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2119 = (($2116) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2120 = $2119; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2121 = HEAP32[$2120>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2122 = $2111 ^ $2118; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2123 = $2114 ^ $2121; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2124 = (_bitshift64Shl(($2122|0),($2123|0),39)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2125 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2126 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2127 = $2126; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2128 = $2127; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2129 = HEAP32[$2128>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2130 = (($2127) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2131 = $2130; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2132 = HEAP32[$2131>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2133 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2134 = $2133; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2135 = $2134; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2136 = HEAP32[$2135>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2137 = (($2134) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2138 = $2137; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2139 = HEAP32[$2138>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2140 = $2129 ^ $2136; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2141 = $2132 ^ $2139; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2142 = (_bitshift64Lshr(($2140|0),($2141|0),25)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2143 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2144 = $2124 | $2142; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2145 = $2125 | $2143; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2146 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2147 = $2146; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2148 = $2147; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2148>>2] = $2144; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2149 = (($2147) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2150 = $2149; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2150>>2] = $2145; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2151 = $6; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2152 = $2151; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2153 = HEAP32[$2152>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2154 = (($2151) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2155 = $2154; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2156 = HEAP32[$2155>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2157 = (1317 + ($2153<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2158 = ((($2157)) + 13|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2159 = HEAP8[$2158>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2160 = $2159&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2161 = (($5) + ($2160<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2162 = $2161; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2163 = $2162; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2164 = HEAP32[$2163>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2165 = (($2162) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2166 = $2165; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2167 = HEAP32[$2166>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2168 = $6; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2169 = $2168; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2170 = HEAP32[$2169>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2171 = (($2168) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2172 = $2171; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2173 = HEAP32[$2172>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2174 = (1317 + ($2170<<4)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2175 = ((($2174)) + 12|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2176 = HEAP8[$2175>>0]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2177 = $2176&255; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2178 = (8 + ($2177<<3)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2179 = $2178; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2180 = $2179; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2181 = HEAP32[$2180>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2182 = (($2179) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2183 = $2182; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2184 = HEAP32[$2183>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2185 = $2164 ^ $2181; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2186 = $2167 ^ $2184; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2187 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2188 = $2187; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2189 = $2188; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2190 = HEAP32[$2189>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2191 = (($2188) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2192 = $2191; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2193 = HEAP32[$2192>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2194 = (_i64Add(($2185|0),($2186|0),($2190|0),($2193|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2195 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2196 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2197 = $2196; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2198 = $2197; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2199 = HEAP32[$2198>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2200 = (($2197) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2201 = $2200; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2202 = HEAP32[$2201>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2203 = (_i64Add(($2199|0),($2202|0),($2194|0),($2195|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2204 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2205 = $2196; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2206 = $2205; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2206>>2] = $2203; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2207 = (($2205) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2208 = $2207; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2208>>2] = $2204; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2209 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2210 = $2209; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2211 = $2210; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2212 = HEAP32[$2211>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2213 = (($2210) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2214 = $2213; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2215 = HEAP32[$2214>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2216 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2217 = $2216; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2218 = $2217; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2219 = HEAP32[$2218>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2220 = (($2217) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2221 = $2220; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2222 = HEAP32[$2221>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2223 = $2212 ^ $2219; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2224 = $2215 ^ $2222; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2225 = (_bitshift64Shl(($2223|0),($2224|0),48)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2226 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2227 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2228 = $2227; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2229 = $2228; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2230 = HEAP32[$2229>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2231 = (($2228) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2232 = $2231; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2233 = HEAP32[$2232>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2234 = ((($4)) + 16|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2235 = $2234; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2236 = $2235; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2237 = HEAP32[$2236>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2238 = (($2235) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2239 = $2238; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2240 = HEAP32[$2239>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2241 = $2230 ^ $2237; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2242 = $2233 ^ $2240; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2243 = (_bitshift64Lshr(($2241|0),($2242|0),16)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2244 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2245 = $2225 | $2243; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2246 = $2226 | $2244; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2247 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2248 = $2247; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2249 = $2248; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2249>>2] = $2245; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2250 = (($2248) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2251 = $2250; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2251>>2] = $2246; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2252 = ((($4)) + 104|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2253 = $2252; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2254 = $2253; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2255 = HEAP32[$2254>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2256 = (($2253) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2257 = $2256; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2258 = HEAP32[$2257>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2259 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2260 = $2259; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2261 = $2260; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2262 = HEAP32[$2261>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2263 = (($2260) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2264 = $2263; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2265 = HEAP32[$2264>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2266 = (_i64Add(($2262|0),($2265|0),($2255|0),($2258|0))|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2267 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2268 = $2259; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2269 = $2268; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2269>>2] = $2266; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2270 = (($2268) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2271 = $2270; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2271>>2] = $2267; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2272 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2273 = $2272; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2274 = $2273; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2275 = HEAP32[$2274>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2276 = (($2273) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2277 = $2276; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2278 = HEAP32[$2277>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2279 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2280 = $2279; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2281 = $2280; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2282 = HEAP32[$2281>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2283 = (($2280) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2284 = $2283; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2285 = HEAP32[$2284>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2286 = $2275 ^ $2282; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2287 = $2278 ^ $2285; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2288 = (_bitshift64Shl(($2286|0),($2287|0),53)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2289 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2290 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2291 = $2290; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2292 = $2291; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2293 = HEAP32[$2292>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2294 = (($2291) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2295 = $2294; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2296 = HEAP32[$2295>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2297 = ((($4)) + 64|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2298 = $2297; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2299 = $2298; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2300 = HEAP32[$2299>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2301 = (($2298) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2302 = $2301; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2303 = HEAP32[$2302>>2]|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2304 = $2293 ^ $2300; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2305 = $2296 ^ $2303; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2306 = (_bitshift64Lshr(($2304|0),($2305|0),11)|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2307 = tempRet0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2308 = $2288 | $2306; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2309 = $2289 | $2307; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2310 = ((($4)) + 56|0); //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2311 = $2310; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2312 = $2311; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2312>>2] = $2308; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2313 = (($2311) + 4)|0; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2314 = $2313; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2314>>2] = $2309; //@line 108 "c_src/crypto_hash/blake512/ref/hash.c"
  $2315 = $6; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2316 = $2315; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2317 = HEAP32[$2316>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2318 = (($2315) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2319 = $2318; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2320 = HEAP32[$2319>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2321 = (1317 + ($2317<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2322 = ((($2321)) + 8|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2323 = HEAP8[$2322>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2324 = $2323&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2325 = (($5) + ($2324<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2326 = $2325; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2327 = $2326; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2328 = HEAP32[$2327>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2329 = (($2326) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2330 = $2329; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2331 = HEAP32[$2330>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2332 = $6; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2333 = $2332; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2334 = HEAP32[$2333>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2335 = (($2332) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2336 = $2335; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2337 = HEAP32[$2336>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2338 = (1317 + ($2334<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2339 = ((($2338)) + 9|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2340 = HEAP8[$2339>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2341 = $2340&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2342 = (8 + ($2341<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2343 = $2342; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2344 = $2343; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2345 = HEAP32[$2344>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2346 = (($2343) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2347 = $2346; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2348 = HEAP32[$2347>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2349 = $2328 ^ $2345; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2350 = $2331 ^ $2348; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2351 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2352 = $2351; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2353 = $2352; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2354 = HEAP32[$2353>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2355 = (($2352) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2356 = $2355; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2357 = HEAP32[$2356>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2358 = (_i64Add(($2349|0),($2350|0),($2354|0),($2357|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2359 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2360 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2361 = $2360; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2362 = HEAP32[$2361>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2363 = (($2360) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2364 = $2363; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2365 = HEAP32[$2364>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2366 = (_i64Add(($2362|0),($2365|0),($2358|0),($2359|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2367 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2368 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2369 = $2368; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2369>>2] = $2366; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2370 = (($2368) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2371 = $2370; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2371>>2] = $2367; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2372 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2373 = $2372; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2374 = $2373; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2375 = HEAP32[$2374>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2376 = (($2373) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2377 = $2376; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2378 = HEAP32[$2377>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2379 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2380 = $2379; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2381 = HEAP32[$2380>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2382 = (($2379) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2383 = $2382; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2384 = HEAP32[$2383>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2385 = $2375 ^ $2381; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2378 ^ $2384; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2386 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2387 = $2386; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2388 = $2387; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2389 = HEAP32[$2388>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2390 = (($2387) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2391 = $2390; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2392 = HEAP32[$2391>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2393 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2394 = $2393; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2395 = HEAP32[$2394>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2396 = (($2393) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2397 = $2396; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2398 = HEAP32[$2397>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2389 ^ $2395; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2399 = $2392 ^ $2398; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2400 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2401 = $2400; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2402 = $2401; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2402>>2] = $2399; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2403 = (($2401) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2404 = $2403; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2404>>2] = $2385; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2405 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2406 = $2405; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2407 = $2406; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2408 = HEAP32[$2407>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2409 = (($2406) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2410 = $2409; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2411 = HEAP32[$2410>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2412 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2413 = $2412; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2414 = $2413; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2415 = HEAP32[$2414>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2416 = (($2413) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2417 = $2416; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2418 = HEAP32[$2417>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2419 = (_i64Add(($2415|0),($2418|0),($2408|0),($2411|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2420 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2421 = $2412; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2422 = $2421; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2422>>2] = $2419; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2423 = (($2421) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2424 = $2423; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2424>>2] = $2420; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2425 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2426 = $2425; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2427 = $2426; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2428 = HEAP32[$2427>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2429 = (($2426) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2430 = $2429; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2431 = HEAP32[$2430>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2432 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2433 = $2432; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2434 = $2433; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2435 = HEAP32[$2434>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2436 = (($2433) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2437 = $2436; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2438 = HEAP32[$2437>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2439 = $2428 ^ $2435; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2440 = $2431 ^ $2438; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2441 = (_bitshift64Shl(($2439|0),($2440|0),39)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2442 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2443 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2444 = $2443; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2445 = $2444; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2446 = HEAP32[$2445>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2447 = (($2444) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2448 = $2447; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2449 = HEAP32[$2448>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2450 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2451 = $2450; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2452 = $2451; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2453 = HEAP32[$2452>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2454 = (($2451) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2455 = $2454; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2456 = HEAP32[$2455>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2457 = $2446 ^ $2453; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2458 = $2449 ^ $2456; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2459 = (_bitshift64Lshr(($2457|0),($2458|0),25)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2460 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2461 = $2441 | $2459; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2462 = $2442 | $2460; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2463 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2464 = $2463; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2465 = $2464; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2465>>2] = $2461; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2466 = (($2464) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2467 = $2466; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2467>>2] = $2462; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2468 = $6; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2469 = $2468; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2470 = HEAP32[$2469>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2471 = (($2468) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2472 = $2471; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2473 = HEAP32[$2472>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2474 = (1317 + ($2470<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2475 = ((($2474)) + 9|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2476 = HEAP8[$2475>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2477 = $2476&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2478 = (($5) + ($2477<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2479 = $2478; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2480 = $2479; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2481 = HEAP32[$2480>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2482 = (($2479) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2483 = $2482; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2484 = HEAP32[$2483>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2485 = $6; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2486 = $2485; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2487 = HEAP32[$2486>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2488 = (($2485) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2489 = $2488; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2490 = HEAP32[$2489>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2491 = (1317 + ($2487<<4)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2492 = ((($2491)) + 8|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2493 = HEAP8[$2492>>0]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2494 = $2493&255; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2495 = (8 + ($2494<<3)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2496 = $2495; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2497 = $2496; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2498 = HEAP32[$2497>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2499 = (($2496) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2500 = $2499; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2501 = HEAP32[$2500>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2502 = $2481 ^ $2498; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2503 = $2484 ^ $2501; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2504 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2505 = $2504; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2506 = $2505; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2507 = HEAP32[$2506>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2508 = (($2505) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2509 = $2508; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2510 = HEAP32[$2509>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2511 = (_i64Add(($2502|0),($2503|0),($2507|0),($2510|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2512 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2513 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2514 = $2513; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2515 = HEAP32[$2514>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2516 = (($2513) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2517 = $2516; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2518 = HEAP32[$2517>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2519 = (_i64Add(($2515|0),($2518|0),($2511|0),($2512|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2520 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2521 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2522 = $2521; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2522>>2] = $2519; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2523 = (($2521) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2524 = $2523; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2524>>2] = $2520; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2525 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2526 = $2525; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2527 = $2526; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2528 = HEAP32[$2527>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2529 = (($2526) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2530 = $2529; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2531 = HEAP32[$2530>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2532 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2533 = $2532; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2534 = HEAP32[$2533>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2535 = (($2532) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2536 = $2535; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2537 = HEAP32[$2536>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2538 = $2528 ^ $2534; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2539 = $2531 ^ $2537; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2540 = (_bitshift64Shl(($2538|0),($2539|0),48)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2541 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2542 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2543 = $2542; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2544 = $2543; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2545 = HEAP32[$2544>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2546 = (($2543) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2547 = $2546; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2548 = HEAP32[$2547>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2549 = $4; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2550 = $2549; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2551 = HEAP32[$2550>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2552 = (($2549) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2553 = $2552; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2554 = HEAP32[$2553>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2555 = $2545 ^ $2551; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2556 = $2548 ^ $2554; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2557 = (_bitshift64Lshr(($2555|0),($2556|0),16)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2558 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2559 = $2540 | $2557; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2560 = $2541 | $2558; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2561 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2562 = $2561; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2563 = $2562; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2563>>2] = $2559; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2564 = (($2562) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2565 = $2564; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2565>>2] = $2560; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2566 = ((($4)) + 120|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2567 = $2566; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2568 = $2567; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2569 = HEAP32[$2568>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2570 = (($2567) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2571 = $2570; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2572 = HEAP32[$2571>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2573 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2574 = $2573; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2575 = $2574; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2576 = HEAP32[$2575>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2577 = (($2574) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2578 = $2577; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2579 = HEAP32[$2578>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2580 = (_i64Add(($2576|0),($2579|0),($2569|0),($2572|0))|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2581 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2582 = $2573; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2583 = $2582; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2583>>2] = $2580; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2584 = (($2582) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2585 = $2584; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2585>>2] = $2581; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2586 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2587 = $2586; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2588 = $2587; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2589 = HEAP32[$2588>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2590 = (($2587) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2591 = $2590; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2592 = HEAP32[$2591>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2593 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2594 = $2593; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2595 = $2594; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2596 = HEAP32[$2595>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2597 = (($2594) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2598 = $2597; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2599 = HEAP32[$2598>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2600 = $2589 ^ $2596; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2601 = $2592 ^ $2599; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2602 = (_bitshift64Shl(($2600|0),($2601|0),53)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2603 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2604 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2605 = $2604; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2606 = $2605; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2607 = HEAP32[$2606>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2608 = (($2605) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2609 = $2608; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2610 = HEAP32[$2609>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2611 = ((($4)) + 80|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2612 = $2611; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2613 = $2612; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2614 = HEAP32[$2613>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2615 = (($2612) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2616 = $2615; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2617 = HEAP32[$2616>>2]|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2618 = $2607 ^ $2614; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2619 = $2610 ^ $2617; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2620 = (_bitshift64Lshr(($2618|0),($2619|0),11)|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2621 = tempRet0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2622 = $2602 | $2620; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2623 = $2603 | $2621; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2624 = ((($4)) + 40|0); //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2625 = $2624; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2626 = $2625; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2626>>2] = $2622; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2627 = (($2625) + 4)|0; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2628 = $2627; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2628>>2] = $2623; //@line 109 "c_src/crypto_hash/blake512/ref/hash.c"
  $2629 = $6; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2630 = $2629; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2631 = HEAP32[$2630>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2632 = (($2629) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2633 = $2632; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2634 = HEAP32[$2633>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2635 = (1317 + ($2631<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2636 = ((($2635)) + 10|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2637 = HEAP8[$2636>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2638 = $2637&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2639 = (($5) + ($2638<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2640 = $2639; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2641 = $2640; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2642 = HEAP32[$2641>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2643 = (($2640) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2644 = $2643; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2645 = HEAP32[$2644>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2646 = $6; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2647 = $2646; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2648 = HEAP32[$2647>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2649 = (($2646) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2650 = $2649; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2651 = HEAP32[$2650>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2652 = (1317 + ($2648<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2653 = ((($2652)) + 11|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2654 = HEAP8[$2653>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2655 = $2654&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2656 = (8 + ($2655<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2657 = $2656; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2658 = $2657; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2659 = HEAP32[$2658>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2660 = (($2657) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2661 = $2660; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2662 = HEAP32[$2661>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2663 = $2642 ^ $2659; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2664 = $2645 ^ $2662; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2665 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2666 = $2665; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2667 = $2666; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2668 = HEAP32[$2667>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2669 = (($2666) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2670 = $2669; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2671 = HEAP32[$2670>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2672 = (_i64Add(($2663|0),($2664|0),($2668|0),($2671|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2673 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2674 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2675 = $2674; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2676 = $2675; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2677 = HEAP32[$2676>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2678 = (($2675) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2679 = $2678; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2680 = HEAP32[$2679>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2681 = (_i64Add(($2677|0),($2680|0),($2672|0),($2673|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2682 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2683 = $2674; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2684 = $2683; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2684>>2] = $2681; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2685 = (($2683) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2686 = $2685; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2686>>2] = $2682; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2687 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2688 = $2687; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2689 = $2688; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2690 = HEAP32[$2689>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2691 = (($2688) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2692 = $2691; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2693 = HEAP32[$2692>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2694 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2695 = $2694; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2696 = $2695; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2697 = HEAP32[$2696>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2698 = (($2695) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2699 = $2698; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2700 = HEAP32[$2699>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2701 = $2690 ^ $2697; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2693 ^ $2700; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2702 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2703 = $2702; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2704 = $2703; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2705 = HEAP32[$2704>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2706 = (($2703) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2707 = $2706; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2708 = HEAP32[$2707>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2709 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2710 = $2709; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2711 = $2710; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2712 = HEAP32[$2711>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2713 = (($2710) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2714 = $2713; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2715 = HEAP32[$2714>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2705 ^ $2712; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2716 = $2708 ^ $2715; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2717 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2718 = $2717; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2719 = $2718; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2719>>2] = $2716; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2720 = (($2718) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2721 = $2720; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2721>>2] = $2701; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2722 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2723 = $2722; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2724 = $2723; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2725 = HEAP32[$2724>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2726 = (($2723) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2727 = $2726; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2728 = HEAP32[$2727>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2729 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2730 = $2729; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2731 = $2730; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2732 = HEAP32[$2731>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2733 = (($2730) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2734 = $2733; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2735 = HEAP32[$2734>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2736 = (_i64Add(($2732|0),($2735|0),($2725|0),($2728|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2737 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2738 = $2729; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2739 = $2738; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2739>>2] = $2736; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2740 = (($2738) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2741 = $2740; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2741>>2] = $2737; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2742 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2743 = $2742; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2744 = $2743; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2745 = HEAP32[$2744>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2746 = (($2743) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2747 = $2746; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2748 = HEAP32[$2747>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2749 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2750 = $2749; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2751 = $2750; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2752 = HEAP32[$2751>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2753 = (($2750) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2754 = $2753; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2755 = HEAP32[$2754>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2756 = $2745 ^ $2752; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2757 = $2748 ^ $2755; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2758 = (_bitshift64Shl(($2756|0),($2757|0),39)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2759 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2760 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2761 = $2760; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2762 = $2761; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2763 = HEAP32[$2762>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2764 = (($2761) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2765 = $2764; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2766 = HEAP32[$2765>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2767 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2768 = $2767; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2769 = $2768; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2770 = HEAP32[$2769>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2771 = (($2768) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2772 = $2771; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2773 = HEAP32[$2772>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2774 = $2763 ^ $2770; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2775 = $2766 ^ $2773; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2776 = (_bitshift64Lshr(($2774|0),($2775|0),25)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2777 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2778 = $2758 | $2776; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2779 = $2759 | $2777; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2780 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2781 = $2780; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2782 = $2781; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2782>>2] = $2778; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2783 = (($2781) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2784 = $2783; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2784>>2] = $2779; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2785 = $6; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2786 = $2785; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2787 = HEAP32[$2786>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2788 = (($2785) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2789 = $2788; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2790 = HEAP32[$2789>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2791 = (1317 + ($2787<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2792 = ((($2791)) + 11|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2793 = HEAP8[$2792>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2794 = $2793&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2795 = (($5) + ($2794<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2796 = $2795; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2797 = $2796; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2798 = HEAP32[$2797>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2799 = (($2796) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2800 = $2799; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2801 = HEAP32[$2800>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2802 = $6; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2803 = $2802; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2804 = HEAP32[$2803>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2805 = (($2802) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2806 = $2805; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2807 = HEAP32[$2806>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2808 = (1317 + ($2804<<4)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2809 = ((($2808)) + 10|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2810 = HEAP8[$2809>>0]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2811 = $2810&255; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2812 = (8 + ($2811<<3)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2813 = $2812; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2814 = $2813; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2815 = HEAP32[$2814>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2816 = (($2813) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2817 = $2816; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2818 = HEAP32[$2817>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2819 = $2798 ^ $2815; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2820 = $2801 ^ $2818; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2821 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2822 = $2821; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2823 = $2822; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2824 = HEAP32[$2823>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2825 = (($2822) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2826 = $2825; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2827 = HEAP32[$2826>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2828 = (_i64Add(($2819|0),($2820|0),($2824|0),($2827|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2829 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2830 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2831 = $2830; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2832 = $2831; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2833 = HEAP32[$2832>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2834 = (($2831) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2835 = $2834; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2836 = HEAP32[$2835>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2837 = (_i64Add(($2833|0),($2836|0),($2828|0),($2829|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2838 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2839 = $2830; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2840 = $2839; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2840>>2] = $2837; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2841 = (($2839) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2842 = $2841; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2842>>2] = $2838; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2843 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2844 = $2843; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2845 = $2844; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2846 = HEAP32[$2845>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2847 = (($2844) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2848 = $2847; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2849 = HEAP32[$2848>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2850 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2851 = $2850; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2852 = $2851; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2853 = HEAP32[$2852>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2854 = (($2851) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2855 = $2854; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2856 = HEAP32[$2855>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2857 = $2846 ^ $2853; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2858 = $2849 ^ $2856; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2859 = (_bitshift64Shl(($2857|0),($2858|0),48)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2860 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2861 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2862 = $2861; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2863 = $2862; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2864 = HEAP32[$2863>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2865 = (($2862) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2866 = $2865; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2867 = HEAP32[$2866>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2868 = ((($4)) + 8|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2869 = $2868; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2870 = $2869; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2871 = HEAP32[$2870>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2872 = (($2869) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2873 = $2872; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2874 = HEAP32[$2873>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2875 = $2864 ^ $2871; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2876 = $2867 ^ $2874; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2877 = (_bitshift64Lshr(($2875|0),($2876|0),16)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2878 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2879 = $2859 | $2877; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2880 = $2860 | $2878; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2881 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2882 = $2881; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2883 = $2882; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2883>>2] = $2879; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2884 = (($2882) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2885 = $2884; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2885>>2] = $2880; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2886 = ((($4)) + 96|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2887 = $2886; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2888 = $2887; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2889 = HEAP32[$2888>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2890 = (($2887) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2891 = $2890; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2892 = HEAP32[$2891>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2893 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2894 = $2893; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2895 = $2894; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2896 = HEAP32[$2895>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2897 = (($2894) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2898 = $2897; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2899 = HEAP32[$2898>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2900 = (_i64Add(($2896|0),($2899|0),($2889|0),($2892|0))|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2901 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2902 = $2893; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2903 = $2902; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2903>>2] = $2900; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2904 = (($2902) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2905 = $2904; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2905>>2] = $2901; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2906 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2907 = $2906; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2908 = $2907; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2909 = HEAP32[$2908>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2910 = (($2907) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2911 = $2910; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2912 = HEAP32[$2911>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2913 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2914 = $2913; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2915 = $2914; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2916 = HEAP32[$2915>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2917 = (($2914) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2918 = $2917; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2919 = HEAP32[$2918>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2920 = $2909 ^ $2916; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2921 = $2912 ^ $2919; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2922 = (_bitshift64Shl(($2920|0),($2921|0),53)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2923 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2924 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2925 = $2924; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2926 = $2925; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2927 = HEAP32[$2926>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2928 = (($2925) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2929 = $2928; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2930 = HEAP32[$2929>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2931 = ((($4)) + 88|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2932 = $2931; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2933 = $2932; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2934 = HEAP32[$2933>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2935 = (($2932) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2936 = $2935; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2937 = HEAP32[$2936>>2]|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2938 = $2927 ^ $2934; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2939 = $2930 ^ $2937; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2940 = (_bitshift64Lshr(($2938|0),($2939|0),11)|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2941 = tempRet0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2942 = $2922 | $2940; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2943 = $2923 | $2941; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2944 = ((($4)) + 48|0); //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2945 = $2944; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2946 = $2945; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2946>>2] = $2942; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2947 = (($2945) + 4)|0; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2948 = $2947; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2948>>2] = $2943; //@line 110 "c_src/crypto_hash/blake512/ref/hash.c"
  $2949 = $6; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2950 = $2949; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2951 = HEAP32[$2950>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2952 = (($2949) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2953 = $2952; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2954 = HEAP32[$2953>>2]|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2955 = (_i64Add(($2951|0),($2954|0),1,0)|0); //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2956 = tempRet0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2957 = $6; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2958 = $2957; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2958>>2] = $2955; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2959 = (($2957) + 4)|0; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  $2960 = $2959; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$2960>>2] = $2956; //@line 102 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $2961 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2962 = $2961; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$2962>>2] = 0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2963 = (($2961) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 $2964 = $2963; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$2964>>2] = 0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $2965 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2966 = $2965; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2967 = HEAP32[$2966>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2968 = (($2965) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2969 = $2968; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2970 = HEAP32[$2969>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2971 = ($2970>>>0)<(0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2972 = ($2967>>>0)<(16); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2973 = ($2970|0)==(0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2974 = $2973 & $2972; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2975 = $2971 | $2974; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($2975)) {
   break;
  }
  $2976 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2977 = $2976; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2978 = HEAP32[$2977>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2979 = (($2976) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2980 = $2979; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2981 = HEAP32[$2980>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2982 = (($4) + ($2978<<3)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2983 = $2982; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2984 = $2983; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2985 = HEAP32[$2984>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2986 = (($2983) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2987 = $2986; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2988 = HEAP32[$2987>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2989 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2990 = $2989; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2991 = HEAP32[$2990>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2992 = (($2989) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2993 = $2992; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2994 = HEAP32[$2993>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2995 = (___uremdi3(($2991|0),($2994|0),8,0)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2996 = tempRet0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2997 = $2; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2998 = (($2997) + ($2995<<3)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $2999 = $2998; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3000 = $2999; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3001 = HEAP32[$3000>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3002 = (($2999) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3003 = $3002; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3004 = HEAP32[$3003>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3005 = $3001 ^ $2985; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3006 = $3004 ^ $2988; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3007 = $2998; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3008 = $3007; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3008>>2] = $3005; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3009 = (($3007) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3010 = $3009; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3010>>2] = $3006; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3011 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3012 = $3011; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3013 = HEAP32[$3012>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3014 = (($3011) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3015 = $3014; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3016 = HEAP32[$3015>>2]|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3017 = (_i64Add(($3013|0),($3016|0),1,0)|0); //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3018 = tempRet0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3019 = $6; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3020 = $3019; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3020>>2] = $3017; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3021 = (($3019) + 4)|0; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  $3022 = $3021; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3022>>2] = $3018; //@line 113 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $3023 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3024 = $3023; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3024>>2] = 0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3025 = (($3023) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 $3026 = $3025; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$3026>>2] = 0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 while(1) {
  $3027 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3028 = $3027; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3029 = HEAP32[$3028>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3030 = (($3027) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3031 = $3030; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3032 = HEAP32[$3031>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3033 = ($3032>>>0)<(0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3034 = ($3029>>>0)<(8); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3035 = ($3032|0)==(0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3036 = $3035 & $3034; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3037 = $3033 | $3036; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($3037)) {
   break;
  }
  $3038 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3039 = $3038; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3040 = HEAP32[$3039>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3041 = (($3038) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3042 = $3041; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3043 = HEAP32[$3042>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3044 = (___uremdi3(($3040|0),($3043|0),4,0)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3045 = tempRet0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3046 = $2; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3047 = ((($3046)) + 64|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3048 = (($3047) + ($3044<<3)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3049 = $3048; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3050 = $3049; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3051 = HEAP32[$3050>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3052 = (($3049) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3053 = $3052; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3054 = HEAP32[$3053>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3055 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3056 = $3055; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3057 = HEAP32[$3056>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3058 = (($3055) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3059 = $3058; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3060 = HEAP32[$3059>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3061 = $2; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3062 = (($3061) + ($3057<<3)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3063 = $3062; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3064 = $3063; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3065 = HEAP32[$3064>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3066 = (($3063) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3067 = $3066; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3068 = HEAP32[$3067>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3069 = $3065 ^ $3051; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3070 = $3068 ^ $3054; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3071 = $3062; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3072 = $3071; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3072>>2] = $3069; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3073 = (($3071) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3074 = $3073; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3074>>2] = $3070; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3075 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3076 = $3075; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3077 = HEAP32[$3076>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3078 = (($3075) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3079 = $3078; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3080 = HEAP32[$3079>>2]|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3081 = (_i64Add(($3077|0),($3080|0),1,0)|0); //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3082 = tempRet0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3083 = $6; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3084 = $3083; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3084>>2] = $3081; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3085 = (($3083) + 4)|0; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  $3086 = $3085; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$3086>>2] = $3082; //@line 114 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 STACKTOP = sp;return; //@line 115 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _blake512_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = $0;
 $2 = $1; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $3 = $2; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $4 = $3; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$4>>2] = -205731576; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $5 = (($3) + 4)|0; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $6 = $5; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$6>>2] = 1779033703; //@line 120 "c_src/crypto_hash/blake512/ref/hash.c"
 $7 = $1; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $8 = ((($7)) + 8|0); //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = $8; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = $9; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$10>>2] = -2067093701; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = (($9) + 4)|0; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = $11; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$12>>2] = -1150833019; //@line 121 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = $1; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = ((($13)) + 16|0); //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = $14; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = $15; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$16>>2] = -23791573; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = (($15) + 4)|0; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = $17; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$18>>2] = 1013904242; //@line 122 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = $1; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = ((($19)) + 24|0); //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $21 = $20; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $22 = $21; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$22>>2] = 1595750129; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $23 = (($21) + 4)|0; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $24 = $23; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$24>>2] = -1521486534; //@line 123 "c_src/crypto_hash/blake512/ref/hash.c"
 $25 = $1; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $26 = ((($25)) + 32|0); //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $27 = $26; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $28 = $27; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$28>>2] = -1377402159; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $29 = (($27) + 4)|0; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $30 = $29; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$30>>2] = 1359893119; //@line 124 "c_src/crypto_hash/blake512/ref/hash.c"
 $31 = $1; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $32 = ((($31)) + 40|0); //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $33 = $32; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $34 = $33; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$34>>2] = 725511199; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $35 = (($33) + 4)|0; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $36 = $35; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$36>>2] = -1694144372; //@line 125 "c_src/crypto_hash/blake512/ref/hash.c"
 $37 = $1; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $38 = ((($37)) + 48|0); //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $39 = $38; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $40 = $39; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$40>>2] = -79577749; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $41 = (($39) + 4)|0; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $42 = $41; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$42>>2] = 528734635; //@line 126 "c_src/crypto_hash/blake512/ref/hash.c"
 $43 = $1; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $44 = ((($43)) + 56|0); //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $45 = $44; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $46 = $45; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$46>>2] = 327033209; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $47 = (($45) + 4)|0; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $48 = $47; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$48>>2] = 1541459225; //@line 127 "c_src/crypto_hash/blake512/ref/hash.c"
 $49 = $1; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $50 = ((($49)) + 116|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$50>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $51 = $1; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $52 = ((($51)) + 112|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$52>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $53 = $1; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $54 = ((($53)) + 96|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $55 = ((($54)) + 8|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $56 = $55; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $57 = $56; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$57>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $58 = (($56) + 4)|0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $59 = $58; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$59>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $60 = $1; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $61 = ((($60)) + 96|0); //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $62 = $61; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $63 = $62; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$63>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $64 = (($62) + 4)|0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $65 = $64; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$65>>2] = 0; //@line 128 "c_src/crypto_hash/blake512/ref/hash.c"
 $66 = $1; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $67 = ((($66)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $68 = ((($67)) + 24|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $69 = $68; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $70 = $69; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$70>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $71 = (($69) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $72 = $71; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$72>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $73 = $1; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $74 = ((($73)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $75 = ((($74)) + 16|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $76 = $75; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $77 = $76; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$77>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $78 = (($76) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $79 = $78; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$79>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $80 = $1; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $81 = ((($80)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $82 = ((($81)) + 8|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $83 = $82; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $84 = $83; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$84>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $85 = (($83) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $86 = $85; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$86>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $87 = $1; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $88 = ((($87)) + 64|0); //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $89 = $88; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $90 = $89; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$90>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $91 = (($89) + 4)|0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 $92 = $91; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$92>>2] = 0; //@line 129 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return; //@line 131 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _blake512_update($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $6 = sp;
 $4 = $0;
 $5 = $1;
 $9 = $6;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $3;
 $13 = $4; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = ((($13)) + 112|0); //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = $15 >> 3; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $7 = $16; //@line 137 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = $7; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = (128 - ($17))|0; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $8 = $18; //@line 138 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = $7; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = ($19|0)!=(0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($20) {
  $21 = $6; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $22 = $21; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $23 = HEAP32[$22>>2]|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $24 = (($21) + 4)|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $25 = $24; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $26 = HEAP32[$25>>2]|0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $27 = (_bitshift64Lshr(($23|0),($26|0),3)|0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $28 = tempRet0; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $29 = $27 & 127; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $30 = $8; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $31 = ($30|0)<(0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $32 = $31 << 31 >> 31; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $33 = (0)>($32>>>0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $34 = ($29>>>0)>=($30>>>0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $35 = (0)==($32|0); //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $36 = $35 & $34; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  $37 = $33 | $36; //@line 140 "c_src/crypto_hash/blake512/ref/hash.c"
  if ($37) {
   $38 = $4; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $39 = ((($38)) + 120|0); //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $40 = $7; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $41 = (($39) + ($40)|0); //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $42 = $5; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $43 = $8; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   _memcpy(($41|0),($42|0),($43|0))|0; //@line 141 "c_src/crypto_hash/blake512/ref/hash.c"
   $44 = $4; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $45 = ((($44)) + 96|0); //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $46 = $45; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $47 = $46; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $48 = HEAP32[$47>>2]|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $49 = (($46) + 4)|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $50 = $49; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $51 = HEAP32[$50>>2]|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $52 = (_i64Add(($48|0),($51|0),1024,0)|0); //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $53 = tempRet0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $54 = $45; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $55 = $54; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$55>>2] = $52; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $56 = (($54) + 4)|0; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $57 = $56; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$57>>2] = $53; //@line 142 "c_src/crypto_hash/blake512/ref/hash.c"
   $58 = $4; //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $59 = $4; //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $60 = ((($59)) + 120|0); //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_compress($58,$60); //@line 143 "c_src/crypto_hash/blake512/ref/hash.c"
   $61 = $8; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $62 = $5; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $63 = (($62) + ($61)|0); //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $5 = $63; //@line 144 "c_src/crypto_hash/blake512/ref/hash.c"
   $64 = $8; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $65 = $64 << 3; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $66 = ($65|0)<(0); //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $67 = $66 << 31 >> 31; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $68 = $6; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $69 = $68; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $70 = HEAP32[$69>>2]|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $71 = (($68) + 4)|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $72 = $71; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $73 = HEAP32[$72>>2]|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $74 = (_i64Subtract(($70|0),($73|0),($65|0),($67|0))|0); //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $75 = tempRet0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $76 = $6; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $77 = $76; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$77>>2] = $74; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $78 = (($76) + 4)|0; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $79 = $78; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$79>>2] = $75; //@line 145 "c_src/crypto_hash/blake512/ref/hash.c"
   $7 = 0; //@line 146 "c_src/crypto_hash/blake512/ref/hash.c"
  }
 }
 while(1) {
  $80 = $6; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $81 = $80; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $82 = HEAP32[$81>>2]|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $83 = (($80) + 4)|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $84 = $83; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $85 = HEAP32[$84>>2]|0; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $86 = ($85>>>0)>(0); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $87 = ($82>>>0)>=(1024); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $88 = ($85|0)==(0); //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $89 = $88 & $87; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  $90 = $86 | $89; //@line 149 "c_src/crypto_hash/blake512/ref/hash.c"
  if (!($90)) {
   break;
  }
  $91 = $4; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $92 = ((($91)) + 96|0); //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $93 = $92; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $94 = $93; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $95 = HEAP32[$94>>2]|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $96 = (($93) + 4)|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $97 = $96; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $98 = HEAP32[$97>>2]|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $99 = (_i64Add(($95|0),($98|0),1024,0)|0); //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $100 = tempRet0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $101 = $92; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $102 = $101; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$102>>2] = $99; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $103 = (($101) + 4)|0; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $104 = $103; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$104>>2] = $100; //@line 150 "c_src/crypto_hash/blake512/ref/hash.c"
  $105 = $4; //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  $106 = $5; //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_compress($105,$106); //@line 151 "c_src/crypto_hash/blake512/ref/hash.c"
  $107 = $5; //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $108 = ((($107)) + 128|0); //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $5 = $108; //@line 152 "c_src/crypto_hash/blake512/ref/hash.c"
  $109 = $6; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $110 = $109; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $111 = HEAP32[$110>>2]|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $112 = (($109) + 4)|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $113 = $112; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $114 = HEAP32[$113>>2]|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $115 = (_i64Subtract(($111|0),($114|0),1024,0)|0); //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $116 = tempRet0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $117 = $6; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $118 = $117; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$118>>2] = $115; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $119 = (($117) + 4)|0; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  $120 = $119; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$120>>2] = $116; //@line 153 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $121 = $6; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $122 = $121; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $123 = HEAP32[$122>>2]|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $124 = (($121) + 4)|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $125 = $124; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $126 = HEAP32[$125>>2]|0; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $127 = ($126>>>0)>(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $128 = ($123>>>0)>(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $129 = ($126|0)==(0); //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $130 = $129 & $128; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $131 = $127 | $130; //@line 156 "c_src/crypto_hash/blake512/ref/hash.c"
 $132 = $4; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($131) {
  $133 = ((($132)) + 120|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $134 = $7; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $135 = (($133) + ($134)|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $136 = $5; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $137 = $6; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $138 = $137; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $139 = HEAP32[$138>>2]|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $140 = (($137) + 4)|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $141 = $140; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $142 = HEAP32[$141>>2]|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $143 = (_bitshift64Lshr(($139|0),($142|0),3)|0); //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $144 = tempRet0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $145 = $143 & 127; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  _memcpy(($135|0),($136|0),($145|0))|0; //@line 157 "c_src/crypto_hash/blake512/ref/hash.c"
  $146 = $7; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $147 = $146 << 3; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $148 = ($147|0)<(0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $149 = $148 << 31 >> 31; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $150 = $6; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $151 = $150; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $152 = HEAP32[$151>>2]|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $153 = (($150) + 4)|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $154 = $153; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $155 = HEAP32[$154>>2]|0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $156 = (_i64Add(($147|0),($149|0),($152|0),($155|0))|0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $157 = tempRet0; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $158 = $4; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  $159 = ((($158)) + 112|0); //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$159>>2] = $156; //@line 158 "c_src/crypto_hash/blake512/ref/hash.c"
  STACKTOP = sp;return; //@line 161 "c_src/crypto_hash/blake512/ref/hash.c"
 } else {
  $160 = ((($132)) + 112|0); //@line 160 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$160>>2] = 0; //@line 160 "c_src/crypto_hash/blake512/ref/hash.c"
  STACKTOP = sp;return; //@line 161 "c_src/crypto_hash/blake512/ref/hash.c"
 }
}
function _blake512_final($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;
 var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;
 var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;
 var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;
 var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;
 var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;
 var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;
 var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;
 var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;
 var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0;
 var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;
 var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;
 var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;
 var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0;
 var $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0;
 var $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0;
 var $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0;
 var $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp + 32|0;
 $5 = sp + 25|0;
 $6 = sp + 24|0;
 $7 = sp + 8|0;
 $8 = sp;
 $2 = $0;
 $3 = $1;
 HEAP8[$5>>0] = 1; //@line 166 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$6>>0] = -127; //@line 166 "c_src/crypto_hash/blake512/ref/hash.c"
 $9 = $2; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $10 = ((($9)) + 96|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $11 = $10; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = $11; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = HEAP32[$12>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = (($11) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = $14; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = HEAP32[$15>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = $2; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = ((($17)) + 112|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = HEAP32[$18>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = ($19|0)<(0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $21 = $20 << 31 >> 31; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $22 = (_i64Add(($13|0),($16|0),($19|0),($21|0))|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $23 = tempRet0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $24 = $7; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $25 = $24; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$25>>2] = $22; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $26 = (($24) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $27 = $26; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$27>>2] = $23; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $28 = $2; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $29 = ((($28)) + 96|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $30 = ((($29)) + 8|0); //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $31 = $30; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $32 = $31; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $33 = HEAP32[$32>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $34 = (($31) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $35 = $34; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $36 = HEAP32[$35>>2]|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $37 = $8; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $38 = $37; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$38>>2] = $33; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $39 = (($37) + 4)|0; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $40 = $39; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$40>>2] = $36; //@line 167 "c_src/crypto_hash/blake512/ref/hash.c"
 $41 = $7; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $42 = $41; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $43 = HEAP32[$42>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $44 = (($41) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $45 = $44; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $46 = HEAP32[$45>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $47 = $2; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $48 = ((($47)) + 112|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $49 = HEAP32[$48>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $50 = ($49|0)<(0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $51 = $50 << 31 >> 31; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $52 = ($46>>>0)<($51>>>0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $53 = ($43>>>0)<($49>>>0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $54 = ($46|0)==($51|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $55 = $54 & $53; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 $56 = $52 | $55; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($56) {
  $57 = $8; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $58 = $57; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $59 = HEAP32[$58>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $60 = (($57) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $61 = $60; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $62 = HEAP32[$61>>2]|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $63 = (_i64Add(($59|0),($62|0),1,0)|0); //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $64 = tempRet0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $65 = $8; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $66 = $65; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$66>>2] = $63; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $67 = (($65) + 4)|0; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  $68 = $67; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$68>>2] = $64; //@line 168 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $69 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $70 = $69; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $71 = HEAP32[$70>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $72 = (($69) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $73 = $72; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $74 = HEAP32[$73>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $75 = $74 >>> 24; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $76 = $75&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$4>>0] = $76; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $77 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $78 = $77; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $79 = HEAP32[$78>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $80 = (($77) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $81 = $80; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $82 = HEAP32[$81>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $83 = $82 >>> 16; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $84 = $83&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $85 = ((($4)) + 1|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$85>>0] = $84; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $86 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $87 = $86; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $88 = HEAP32[$87>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $89 = (($86) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $90 = $89; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $91 = HEAP32[$90>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $92 = $91 >>> 8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $93 = $92&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $94 = ((($4)) + 2|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$94>>0] = $93; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $95 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $96 = $95; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $97 = HEAP32[$96>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $98 = (($95) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $99 = $98; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $100 = HEAP32[$99>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $101 = $100&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $102 = ((($4)) + 3|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$102>>0] = $101; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $103 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $104 = $103; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $105 = HEAP32[$104>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $106 = (($103) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $107 = $106; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $108 = HEAP32[$107>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $109 = $105 >>> 24; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $110 = $109&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $111 = ((($4)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$111>>0] = $110; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $112 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $113 = $112; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $114 = HEAP32[$113>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $115 = (($112) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $116 = $115; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $117 = HEAP32[$116>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $118 = $114 >>> 16; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $119 = $118&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $120 = ((($4)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $121 = ((($120)) + 1|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$121>>0] = $119; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $122 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $123 = $122; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $124 = HEAP32[$123>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $125 = (($122) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $126 = $125; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $127 = HEAP32[$126>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $128 = $124 >>> 8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $129 = $128&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $130 = ((($4)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $131 = ((($130)) + 2|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$131>>0] = $129; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $132 = $8; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $133 = $132; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $134 = HEAP32[$133>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $135 = (($132) + 4)|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $136 = $135; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $137 = HEAP32[$136>>2]|0; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $138 = $134&255; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $139 = ((($4)) + 4|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $140 = ((($139)) + 3|0); //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$140>>0] = $138; //@line 169 "c_src/crypto_hash/blake512/ref/hash.c"
 $141 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $142 = $141; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $143 = HEAP32[$142>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $144 = (($141) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $145 = $144; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $146 = HEAP32[$145>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $147 = $146 >>> 24; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $148 = $147&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $149 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$149>>0] = $148; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $150 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $151 = $150; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $152 = HEAP32[$151>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $153 = (($150) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $154 = $153; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $155 = HEAP32[$154>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $156 = $155 >>> 16; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $157 = $156&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $158 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $159 = ((($158)) + 1|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$159>>0] = $157; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $160 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $161 = $160; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $162 = HEAP32[$161>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $163 = (($160) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $164 = $163; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $165 = HEAP32[$164>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $166 = $165 >>> 8; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $167 = $166&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $168 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $169 = ((($168)) + 2|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$169>>0] = $167; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $170 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $171 = $170; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $172 = HEAP32[$171>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $173 = (($170) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $174 = $173; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $175 = HEAP32[$174>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $176 = $175&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $177 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $178 = ((($177)) + 3|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$178>>0] = $176; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $179 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $180 = $179; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $181 = HEAP32[$180>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $182 = (($179) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $183 = $182; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $184 = HEAP32[$183>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $185 = $181 >>> 24; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $186 = $185&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $187 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $188 = ((($187)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$188>>0] = $186; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $189 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $190 = $189; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $191 = HEAP32[$190>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $192 = (($189) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $193 = $192; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $194 = HEAP32[$193>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $195 = $191 >>> 16; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $196 = $195&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $197 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $198 = ((($197)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $199 = ((($198)) + 1|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$199>>0] = $196; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $200 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $201 = $200; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $202 = HEAP32[$201>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $203 = (($200) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $204 = $203; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $205 = HEAP32[$204>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $206 = $202 >>> 8; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $207 = $206&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $208 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $209 = ((($208)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $210 = ((($209)) + 2|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$210>>0] = $207; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $211 = $7; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $212 = $211; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $213 = HEAP32[$212>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $214 = (($211) + 4)|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $215 = $214; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $216 = HEAP32[$215>>2]|0; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $217 = $213&255; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $218 = ((($4)) + 8|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $219 = ((($218)) + 4|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $220 = ((($219)) + 3|0); //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$220>>0] = $217; //@line 170 "c_src/crypto_hash/blake512/ref/hash.c"
 $221 = $2; //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $222 = ((($221)) + 112|0); //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $223 = HEAP32[$222>>2]|0; //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $224 = ($223|0)==(888); //@line 172 "c_src/crypto_hash/blake512/ref/hash.c"
 $225 = $2; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
 if ($224) {
  $226 = ((($225)) + 96|0); //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $227 = $226; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $228 = $227; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $229 = HEAP32[$228>>2]|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $230 = (($227) + 4)|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $231 = $230; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $232 = HEAP32[$231>>2]|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $233 = (_i64Subtract(($229|0),($232|0),8,0)|0); //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $234 = tempRet0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $235 = $226; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $236 = $235; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$236>>2] = $233; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $237 = (($235) + 4)|0; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $238 = $237; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$238>>2] = $234; //@line 173 "c_src/crypto_hash/blake512/ref/hash.c"
  $239 = $2; //@line 174 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_update($239,$6,8,0); //@line 174 "c_src/crypto_hash/blake512/ref/hash.c"
 } else {
  $240 = ((($225)) + 112|0); //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $241 = HEAP32[$240>>2]|0; //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $242 = ($241|0)<(888); //@line 177 "c_src/crypto_hash/blake512/ref/hash.c"
  $243 = $2; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  $244 = ((($243)) + 112|0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  $245 = HEAP32[$244>>2]|0; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
  if ($242) {
   $246 = ($245|0)==(0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
   if ($246) {
    $247 = $2; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
    $248 = ((($247)) + 116|0); //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
    HEAP32[$248>>2] = 1; //@line 178 "c_src/crypto_hash/blake512/ref/hash.c"
   }
   $249 = $2; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $250 = ((($249)) + 112|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $251 = HEAP32[$250>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $252 = (888 - ($251))|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $253 = ($252|0)<(0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $254 = $253 << 31 >> 31; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $255 = $2; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $256 = ((($255)) + 96|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $257 = $256; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $258 = $257; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $259 = HEAP32[$258>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $260 = (($257) + 4)|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $261 = $260; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $262 = HEAP32[$261>>2]|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $263 = (_i64Subtract(($259|0),($262|0),($252|0),($254|0))|0); //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $264 = tempRet0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $265 = $256; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $266 = $265; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$266>>2] = $263; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $267 = (($265) + 4)|0; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $268 = $267; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$268>>2] = $264; //@line 179 "c_src/crypto_hash/blake512/ref/hash.c"
   $269 = $2; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $270 = $2; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $271 = ((($270)) + 112|0); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $272 = HEAP32[$271>>2]|0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $273 = (888 - ($272))|0; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $274 = ($273|0)<(0); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   $275 = $274 << 31 >> 31; //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($269,1637,$273,$275); //@line 180 "c_src/crypto_hash/blake512/ref/hash.c"
  } else {
   $276 = (1024 - ($245))|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $277 = ($276|0)<(0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $278 = $277 << 31 >> 31; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $279 = $2; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $280 = ((($279)) + 96|0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $281 = $280; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $282 = $281; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $283 = HEAP32[$282>>2]|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $284 = (($281) + 4)|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $285 = $284; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $286 = HEAP32[$285>>2]|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $287 = (_i64Subtract(($283|0),($286|0),($276|0),($278|0))|0); //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $288 = tempRet0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $289 = $280; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $290 = $289; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$290>>2] = $287; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $291 = (($289) + 4)|0; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $292 = $291; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$292>>2] = $288; //@line 183 "c_src/crypto_hash/blake512/ref/hash.c"
   $293 = $2; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $294 = $2; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $295 = ((($294)) + 112|0); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $296 = HEAP32[$295>>2]|0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $297 = (1024 - ($296))|0; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $298 = ($297|0)<(0); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $299 = $298 << 31 >> 31; //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($293,1637,$297,$299); //@line 184 "c_src/crypto_hash/blake512/ref/hash.c"
   $300 = $2; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $301 = ((($300)) + 96|0); //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $302 = $301; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $303 = $302; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $304 = HEAP32[$303>>2]|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $305 = (($302) + 4)|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $306 = $305; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $307 = HEAP32[$306>>2]|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $308 = (_i64Subtract(($304|0),($307|0),888,0)|0); //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $309 = tempRet0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $310 = $301; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $311 = $310; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$311>>2] = $308; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $312 = (($310) + 4)|0; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $313 = $312; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$313>>2] = $309; //@line 185 "c_src/crypto_hash/blake512/ref/hash.c"
   $314 = $2; //@line 186 "c_src/crypto_hash/blake512/ref/hash.c"
   _blake512_update($314,(1638),888,0); //@line 186 "c_src/crypto_hash/blake512/ref/hash.c"
   $315 = $2; //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
   $316 = ((($315)) + 116|0); //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
   HEAP32[$316>>2] = 1; //@line 187 "c_src/crypto_hash/blake512/ref/hash.c"
  }
  $317 = $2; //@line 189 "c_src/crypto_hash/blake512/ref/hash.c"
  _blake512_update($317,$5,8,0); //@line 189 "c_src/crypto_hash/blake512/ref/hash.c"
  $318 = $2; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $319 = ((($318)) + 96|0); //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $320 = $319; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $321 = $320; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $322 = HEAP32[$321>>2]|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $323 = (($320) + 4)|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $324 = $323; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $325 = HEAP32[$324>>2]|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $326 = (_i64Subtract(($322|0),($325|0),8,0)|0); //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $327 = tempRet0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $328 = $319; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $329 = $328; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$329>>2] = $326; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $330 = (($328) + 4)|0; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  $331 = $330; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
  HEAP32[$331>>2] = $327; //@line 190 "c_src/crypto_hash/blake512/ref/hash.c"
 }
 $332 = $2; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $333 = ((($332)) + 96|0); //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $334 = $333; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $335 = $334; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $336 = HEAP32[$335>>2]|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $337 = (($334) + 4)|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $338 = $337; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $339 = HEAP32[$338>>2]|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $340 = (_i64Subtract(($336|0),($339|0),128,0)|0); //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $341 = tempRet0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $342 = $333; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $343 = $342; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$343>>2] = $340; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $344 = (($342) + 4)|0; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $345 = $344; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP32[$345>>2] = $341; //@line 192 "c_src/crypto_hash/blake512/ref/hash.c"
 $346 = $2; //@line 193 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_update($346,$4,128,0); //@line 193 "c_src/crypto_hash/blake512/ref/hash.c"
 $347 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $348 = $347; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $349 = $348; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $350 = HEAP32[$349>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $351 = (($348) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $352 = $351; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $353 = HEAP32[$352>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $354 = $353 >>> 24; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $355 = $354&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $356 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$356>>0] = $355; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $357 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $358 = $357; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $359 = $358; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $360 = HEAP32[$359>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $361 = (($358) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $362 = $361; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $363 = HEAP32[$362>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $364 = $363 >>> 16; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $365 = $364&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $366 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $367 = ((($366)) + 1|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$367>>0] = $365; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $368 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $369 = $368; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $370 = $369; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $371 = HEAP32[$370>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $372 = (($369) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $373 = $372; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $374 = HEAP32[$373>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $375 = $374 >>> 8; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $376 = $375&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $377 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $378 = ((($377)) + 2|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$378>>0] = $376; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $379 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $380 = $379; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $381 = $380; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $382 = HEAP32[$381>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $383 = (($380) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $384 = $383; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $385 = HEAP32[$384>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $386 = $385&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $387 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $388 = ((($387)) + 3|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$388>>0] = $386; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $389 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $390 = $389; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $391 = $390; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $392 = HEAP32[$391>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $393 = (($390) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $394 = $393; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $395 = HEAP32[$394>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $396 = $392 >>> 24; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $397 = $396&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $398 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $399 = ((($398)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$399>>0] = $397; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $400 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $401 = $400; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $402 = $401; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $403 = HEAP32[$402>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $404 = (($401) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $405 = $404; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $406 = HEAP32[$405>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $407 = $403 >>> 16; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $408 = $407&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $409 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $410 = ((($409)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $411 = ((($410)) + 1|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$411>>0] = $408; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $412 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $413 = $412; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $414 = $413; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $415 = HEAP32[$414>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $416 = (($413) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $417 = $416; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $418 = HEAP32[$417>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $419 = $415 >>> 8; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $420 = $419&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $421 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $422 = ((($421)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $423 = ((($422)) + 2|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$423>>0] = $420; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $424 = $2; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $425 = $424; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $426 = $425; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $427 = HEAP32[$426>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $428 = (($425) + 4)|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $429 = $428; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $430 = HEAP32[$429>>2]|0; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $431 = $427&255; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $432 = $3; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $433 = ((($432)) + 4|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $434 = ((($433)) + 3|0); //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$434>>0] = $431; //@line 195 "c_src/crypto_hash/blake512/ref/hash.c"
 $435 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $436 = ((($435)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $437 = $436; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $438 = $437; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $439 = HEAP32[$438>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $440 = (($437) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $441 = $440; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $442 = HEAP32[$441>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $443 = $442 >>> 24; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $444 = $443&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $445 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $446 = ((($445)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$446>>0] = $444; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $447 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $448 = ((($447)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $449 = $448; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $450 = $449; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $451 = HEAP32[$450>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $452 = (($449) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $453 = $452; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $454 = HEAP32[$453>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $455 = $454 >>> 16; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $456 = $455&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $457 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $458 = ((($457)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $459 = ((($458)) + 1|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$459>>0] = $456; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $460 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $461 = ((($460)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $462 = $461; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $463 = $462; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $464 = HEAP32[$463>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $465 = (($462) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $466 = $465; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $467 = HEAP32[$466>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $468 = $467 >>> 8; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $469 = $468&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $470 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $471 = ((($470)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $472 = ((($471)) + 2|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$472>>0] = $469; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $473 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $474 = ((($473)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $475 = $474; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $476 = $475; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $477 = HEAP32[$476>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $478 = (($475) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $479 = $478; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $480 = HEAP32[$479>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $481 = $480&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $482 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $483 = ((($482)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $484 = ((($483)) + 3|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$484>>0] = $481; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $485 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $486 = ((($485)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $487 = $486; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $488 = $487; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $489 = HEAP32[$488>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $490 = (($487) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $491 = $490; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $492 = HEAP32[$491>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $493 = $489 >>> 24; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $494 = $493&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $495 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $496 = ((($495)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $497 = ((($496)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$497>>0] = $494; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $498 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $499 = ((($498)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $500 = $499; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $501 = $500; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $502 = HEAP32[$501>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $503 = (($500) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $504 = $503; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $505 = HEAP32[$504>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $506 = $502 >>> 16; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $507 = $506&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $508 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $509 = ((($508)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $510 = ((($509)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $511 = ((($510)) + 1|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$511>>0] = $507; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $512 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $513 = ((($512)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $514 = $513; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $515 = $514; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $516 = HEAP32[$515>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $517 = (($514) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $518 = $517; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $519 = HEAP32[$518>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $520 = $516 >>> 8; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $521 = $520&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $522 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $523 = ((($522)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $524 = ((($523)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $525 = ((($524)) + 2|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$525>>0] = $521; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $526 = $2; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $527 = ((($526)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $528 = $527; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $529 = $528; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $530 = HEAP32[$529>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $531 = (($528) + 4)|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $532 = $531; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $533 = HEAP32[$532>>2]|0; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $534 = $530&255; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $535 = $3; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $536 = ((($535)) + 8|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $537 = ((($536)) + 4|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $538 = ((($537)) + 3|0); //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$538>>0] = $534; //@line 196 "c_src/crypto_hash/blake512/ref/hash.c"
 $539 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $540 = ((($539)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $541 = $540; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $542 = $541; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $543 = HEAP32[$542>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $544 = (($541) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $545 = $544; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $546 = HEAP32[$545>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $547 = $546 >>> 24; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $548 = $547&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $549 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $550 = ((($549)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$550>>0] = $548; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $551 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $552 = ((($551)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $553 = $552; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $554 = $553; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $555 = HEAP32[$554>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $556 = (($553) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $557 = $556; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $558 = HEAP32[$557>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $559 = $558 >>> 16; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $560 = $559&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $561 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $562 = ((($561)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $563 = ((($562)) + 1|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$563>>0] = $560; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $564 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $565 = ((($564)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $566 = $565; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $567 = $566; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $568 = HEAP32[$567>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $569 = (($566) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $570 = $569; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $571 = HEAP32[$570>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $572 = $571 >>> 8; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $573 = $572&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $574 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $575 = ((($574)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $576 = ((($575)) + 2|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$576>>0] = $573; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $577 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $578 = ((($577)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $579 = $578; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $580 = $579; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $581 = HEAP32[$580>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $582 = (($579) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $583 = $582; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $584 = HEAP32[$583>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $585 = $584&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $586 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $587 = ((($586)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $588 = ((($587)) + 3|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$588>>0] = $585; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $589 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $590 = ((($589)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $591 = $590; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $592 = $591; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $593 = HEAP32[$592>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $594 = (($591) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $595 = $594; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $596 = HEAP32[$595>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $597 = $593 >>> 24; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $598 = $597&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $599 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $600 = ((($599)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $601 = ((($600)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$601>>0] = $598; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $602 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $603 = ((($602)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $604 = $603; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $605 = $604; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $606 = HEAP32[$605>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $607 = (($604) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $608 = $607; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $609 = HEAP32[$608>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $610 = $606 >>> 16; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $611 = $610&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $612 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $613 = ((($612)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $614 = ((($613)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $615 = ((($614)) + 1|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$615>>0] = $611; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $616 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $617 = ((($616)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $618 = $617; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $619 = $618; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $620 = HEAP32[$619>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $621 = (($618) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $622 = $621; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $623 = HEAP32[$622>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $624 = $620 >>> 8; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $625 = $624&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $626 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $627 = ((($626)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $628 = ((($627)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $629 = ((($628)) + 2|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$629>>0] = $625; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $630 = $2; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $631 = ((($630)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $632 = $631; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $633 = $632; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $634 = HEAP32[$633>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $635 = (($632) + 4)|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $636 = $635; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $637 = HEAP32[$636>>2]|0; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $638 = $634&255; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $639 = $3; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $640 = ((($639)) + 16|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $641 = ((($640)) + 4|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $642 = ((($641)) + 3|0); //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$642>>0] = $638; //@line 197 "c_src/crypto_hash/blake512/ref/hash.c"
 $643 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $644 = ((($643)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $645 = $644; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $646 = $645; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $647 = HEAP32[$646>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $648 = (($645) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $649 = $648; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $650 = HEAP32[$649>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $651 = $650 >>> 24; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $652 = $651&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $653 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $654 = ((($653)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$654>>0] = $652; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $655 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $656 = ((($655)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $657 = $656; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $658 = $657; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $659 = HEAP32[$658>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $660 = (($657) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $661 = $660; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $662 = HEAP32[$661>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $663 = $662 >>> 16; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $664 = $663&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $665 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $666 = ((($665)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $667 = ((($666)) + 1|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$667>>0] = $664; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $668 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $669 = ((($668)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $670 = $669; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $671 = $670; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $672 = HEAP32[$671>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $673 = (($670) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $674 = $673; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $675 = HEAP32[$674>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $676 = $675 >>> 8; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $677 = $676&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $678 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $679 = ((($678)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $680 = ((($679)) + 2|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$680>>0] = $677; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $681 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $682 = ((($681)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $683 = $682; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $684 = $683; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $685 = HEAP32[$684>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $686 = (($683) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $687 = $686; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $688 = HEAP32[$687>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $689 = $688&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $690 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $691 = ((($690)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $692 = ((($691)) + 3|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$692>>0] = $689; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $693 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $694 = ((($693)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $695 = $694; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $696 = $695; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $697 = HEAP32[$696>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $698 = (($695) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $699 = $698; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $700 = HEAP32[$699>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $701 = $697 >>> 24; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $702 = $701&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $703 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $704 = ((($703)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $705 = ((($704)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$705>>0] = $702; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $706 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $707 = ((($706)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $708 = $707; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $709 = $708; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $710 = HEAP32[$709>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $711 = (($708) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $712 = $711; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $713 = HEAP32[$712>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $714 = $710 >>> 16; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $715 = $714&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $716 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $717 = ((($716)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $718 = ((($717)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $719 = ((($718)) + 1|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$719>>0] = $715; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $720 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $721 = ((($720)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $722 = $721; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $723 = $722; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $724 = HEAP32[$723>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $725 = (($722) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $726 = $725; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $727 = HEAP32[$726>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $728 = $724 >>> 8; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $729 = $728&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $730 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $731 = ((($730)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $732 = ((($731)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $733 = ((($732)) + 2|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$733>>0] = $729; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $734 = $2; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $735 = ((($734)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $736 = $735; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $737 = $736; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $738 = HEAP32[$737>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $739 = (($736) + 4)|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $740 = $739; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $741 = HEAP32[$740>>2]|0; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $742 = $738&255; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $743 = $3; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $744 = ((($743)) + 24|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $745 = ((($744)) + 4|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $746 = ((($745)) + 3|0); //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$746>>0] = $742; //@line 198 "c_src/crypto_hash/blake512/ref/hash.c"
 $747 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $748 = ((($747)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $749 = $748; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $750 = $749; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $751 = HEAP32[$750>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $752 = (($749) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $753 = $752; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $754 = HEAP32[$753>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $755 = $754 >>> 24; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $756 = $755&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $757 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $758 = ((($757)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$758>>0] = $756; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $759 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $760 = ((($759)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $761 = $760; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $762 = $761; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $763 = HEAP32[$762>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $764 = (($761) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $765 = $764; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $766 = HEAP32[$765>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $767 = $766 >>> 16; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $768 = $767&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $769 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $770 = ((($769)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $771 = ((($770)) + 1|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$771>>0] = $768; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $772 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $773 = ((($772)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $774 = $773; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $775 = $774; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $776 = HEAP32[$775>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $777 = (($774) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $778 = $777; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $779 = HEAP32[$778>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $780 = $779 >>> 8; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $781 = $780&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $782 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $783 = ((($782)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $784 = ((($783)) + 2|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$784>>0] = $781; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $785 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $786 = ((($785)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $787 = $786; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $788 = $787; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $789 = HEAP32[$788>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $790 = (($787) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $791 = $790; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $792 = HEAP32[$791>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $793 = $792&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $794 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $795 = ((($794)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $796 = ((($795)) + 3|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$796>>0] = $793; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $797 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $798 = ((($797)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $799 = $798; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $800 = $799; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $801 = HEAP32[$800>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $802 = (($799) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $803 = $802; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $804 = HEAP32[$803>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $805 = $801 >>> 24; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $806 = $805&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $807 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $808 = ((($807)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $809 = ((($808)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$809>>0] = $806; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $810 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $811 = ((($810)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $812 = $811; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $813 = $812; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $814 = HEAP32[$813>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $815 = (($812) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $816 = $815; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $817 = HEAP32[$816>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $818 = $814 >>> 16; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $819 = $818&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $820 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $821 = ((($820)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $822 = ((($821)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $823 = ((($822)) + 1|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$823>>0] = $819; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $824 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $825 = ((($824)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $826 = $825; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $827 = $826; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $828 = HEAP32[$827>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $829 = (($826) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $830 = $829; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $831 = HEAP32[$830>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $832 = $828 >>> 8; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $833 = $832&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $834 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $835 = ((($834)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $836 = ((($835)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $837 = ((($836)) + 2|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$837>>0] = $833; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $838 = $2; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $839 = ((($838)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $840 = $839; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $841 = $840; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $842 = HEAP32[$841>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $843 = (($840) + 4)|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $844 = $843; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $845 = HEAP32[$844>>2]|0; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $846 = $842&255; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $847 = $3; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $848 = ((($847)) + 32|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $849 = ((($848)) + 4|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $850 = ((($849)) + 3|0); //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$850>>0] = $846; //@line 199 "c_src/crypto_hash/blake512/ref/hash.c"
 $851 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $852 = ((($851)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $853 = $852; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $854 = $853; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $855 = HEAP32[$854>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $856 = (($853) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $857 = $856; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $858 = HEAP32[$857>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $859 = $858 >>> 24; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $860 = $859&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $861 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $862 = ((($861)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$862>>0] = $860; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $863 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $864 = ((($863)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $865 = $864; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $866 = $865; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $867 = HEAP32[$866>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $868 = (($865) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $869 = $868; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $870 = HEAP32[$869>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $871 = $870 >>> 16; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $872 = $871&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $873 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $874 = ((($873)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $875 = ((($874)) + 1|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$875>>0] = $872; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $876 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $877 = ((($876)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $878 = $877; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $879 = $878; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $880 = HEAP32[$879>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $881 = (($878) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $882 = $881; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $883 = HEAP32[$882>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $884 = $883 >>> 8; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $885 = $884&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $886 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $887 = ((($886)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $888 = ((($887)) + 2|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$888>>0] = $885; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $889 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $890 = ((($889)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $891 = $890; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $892 = $891; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $893 = HEAP32[$892>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $894 = (($891) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $895 = $894; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $896 = HEAP32[$895>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $897 = $896&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $898 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $899 = ((($898)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $900 = ((($899)) + 3|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$900>>0] = $897; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $901 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $902 = ((($901)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $903 = $902; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $904 = $903; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $905 = HEAP32[$904>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $906 = (($903) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $907 = $906; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $908 = HEAP32[$907>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $909 = $905 >>> 24; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $910 = $909&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $911 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $912 = ((($911)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $913 = ((($912)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$913>>0] = $910; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $914 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $915 = ((($914)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $916 = $915; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $917 = $916; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $918 = HEAP32[$917>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $919 = (($916) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $920 = $919; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $921 = HEAP32[$920>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $922 = $918 >>> 16; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $923 = $922&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $924 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $925 = ((($924)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $926 = ((($925)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $927 = ((($926)) + 1|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$927>>0] = $923; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $928 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $929 = ((($928)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $930 = $929; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $931 = $930; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $932 = HEAP32[$931>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $933 = (($930) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $934 = $933; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $935 = HEAP32[$934>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $936 = $932 >>> 8; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $937 = $936&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $938 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $939 = ((($938)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $940 = ((($939)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $941 = ((($940)) + 2|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$941>>0] = $937; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $942 = $2; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $943 = ((($942)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $944 = $943; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $945 = $944; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $946 = HEAP32[$945>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $947 = (($944) + 4)|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $948 = $947; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $949 = HEAP32[$948>>2]|0; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $950 = $946&255; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $951 = $3; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $952 = ((($951)) + 40|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $953 = ((($952)) + 4|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $954 = ((($953)) + 3|0); //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$954>>0] = $950; //@line 200 "c_src/crypto_hash/blake512/ref/hash.c"
 $955 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $956 = ((($955)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $957 = $956; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $958 = $957; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $959 = HEAP32[$958>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $960 = (($957) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $961 = $960; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $962 = HEAP32[$961>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $963 = $962 >>> 24; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $964 = $963&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $965 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $966 = ((($965)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$966>>0] = $964; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $967 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $968 = ((($967)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $969 = $968; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $970 = $969; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $971 = HEAP32[$970>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $972 = (($969) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $973 = $972; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $974 = HEAP32[$973>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $975 = $974 >>> 16; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $976 = $975&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $977 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $978 = ((($977)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $979 = ((($978)) + 1|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$979>>0] = $976; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $980 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $981 = ((($980)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $982 = $981; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $983 = $982; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $984 = HEAP32[$983>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $985 = (($982) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $986 = $985; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $987 = HEAP32[$986>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $988 = $987 >>> 8; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $989 = $988&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $990 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $991 = ((($990)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $992 = ((($991)) + 2|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$992>>0] = $989; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $993 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $994 = ((($993)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $995 = $994; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $996 = $995; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $997 = HEAP32[$996>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $998 = (($995) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $999 = $998; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1000 = HEAP32[$999>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1001 = $1000&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1002 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1003 = ((($1002)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1004 = ((($1003)) + 3|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1004>>0] = $1001; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1005 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1006 = ((($1005)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1007 = $1006; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1008 = $1007; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1009 = HEAP32[$1008>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1010 = (($1007) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1011 = $1010; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1012 = HEAP32[$1011>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1013 = $1009 >>> 24; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1014 = $1013&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1015 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1016 = ((($1015)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1017 = ((($1016)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1017>>0] = $1014; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1018 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1019 = ((($1018)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1020 = $1019; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1021 = $1020; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1022 = HEAP32[$1021>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1023 = (($1020) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1024 = $1023; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1025 = HEAP32[$1024>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1026 = $1022 >>> 16; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1027 = $1026&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1028 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1029 = ((($1028)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1030 = ((($1029)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1031 = ((($1030)) + 1|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1031>>0] = $1027; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1032 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1033 = ((($1032)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1034 = $1033; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1035 = $1034; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1036 = HEAP32[$1035>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1037 = (($1034) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1038 = $1037; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1039 = HEAP32[$1038>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1040 = $1036 >>> 8; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1041 = $1040&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1042 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1043 = ((($1042)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1044 = ((($1043)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1045 = ((($1044)) + 2|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1045>>0] = $1041; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1046 = $2; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1047 = ((($1046)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1048 = $1047; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1049 = $1048; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1050 = HEAP32[$1049>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1051 = (($1048) + 4)|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1052 = $1051; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1053 = HEAP32[$1052>>2]|0; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1054 = $1050&255; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1055 = $3; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1056 = ((($1055)) + 48|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1057 = ((($1056)) + 4|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1058 = ((($1057)) + 3|0); //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1058>>0] = $1054; //@line 201 "c_src/crypto_hash/blake512/ref/hash.c"
 $1059 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1060 = ((($1059)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1061 = $1060; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1062 = $1061; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1063 = HEAP32[$1062>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1064 = (($1061) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1065 = $1064; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1066 = HEAP32[$1065>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1067 = $1066 >>> 24; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1068 = $1067&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1069 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1070 = ((($1069)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1070>>0] = $1068; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1071 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1072 = ((($1071)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1073 = $1072; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1074 = $1073; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1075 = HEAP32[$1074>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1076 = (($1073) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1077 = $1076; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1078 = HEAP32[$1077>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1079 = $1078 >>> 16; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1080 = $1079&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1081 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1082 = ((($1081)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1083 = ((($1082)) + 1|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1083>>0] = $1080; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1084 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1085 = ((($1084)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1086 = $1085; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1087 = $1086; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1088 = HEAP32[$1087>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1089 = (($1086) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1090 = $1089; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1091 = HEAP32[$1090>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1092 = $1091 >>> 8; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1093 = $1092&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1094 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1095 = ((($1094)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1096 = ((($1095)) + 2|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1096>>0] = $1093; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1097 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1098 = ((($1097)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1099 = $1098; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1100 = $1099; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1101 = HEAP32[$1100>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1102 = (($1099) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1103 = $1102; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1104 = HEAP32[$1103>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1105 = $1104&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1106 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1107 = ((($1106)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1108 = ((($1107)) + 3|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1108>>0] = $1105; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1109 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1110 = ((($1109)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1111 = $1110; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1112 = $1111; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1113 = HEAP32[$1112>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1114 = (($1111) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1115 = $1114; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1116 = HEAP32[$1115>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1117 = $1113 >>> 24; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1118 = $1117&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1119 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1120 = ((($1119)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1121 = ((($1120)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1121>>0] = $1118; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1122 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1123 = ((($1122)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1124 = $1123; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1125 = $1124; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1126 = HEAP32[$1125>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1127 = (($1124) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1128 = $1127; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1129 = HEAP32[$1128>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1130 = $1126 >>> 16; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1131 = $1130&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1132 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1133 = ((($1132)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1134 = ((($1133)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1135 = ((($1134)) + 1|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1135>>0] = $1131; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1136 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1137 = ((($1136)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1138 = $1137; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1139 = $1138; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1140 = HEAP32[$1139>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1141 = (($1138) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1142 = $1141; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1143 = HEAP32[$1142>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1144 = $1140 >>> 8; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1145 = $1144&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1146 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1147 = ((($1146)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1148 = ((($1147)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1149 = ((($1148)) + 2|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1149>>0] = $1145; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1150 = $2; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1151 = ((($1150)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1152 = $1151; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1153 = $1152; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1154 = HEAP32[$1153>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1155 = (($1152) + 4)|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1156 = $1155; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1157 = HEAP32[$1156>>2]|0; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1158 = $1154&255; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1159 = $3; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1160 = ((($1159)) + 56|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1161 = ((($1160)) + 4|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 $1162 = ((($1161)) + 3|0); //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 HEAP8[$1162>>0] = $1158; //@line 202 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return; //@line 203 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _crypto_hash_blake512_ref($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $6 = sp + 248|0;
 $7 = sp;
 $4 = $0;
 $5 = $1;
 $8 = $6;
 $9 = $8;
 HEAP32[$9>>2] = $2;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $3;
 _blake512_init($7); //@line 209 "c_src/crypto_hash/blake512/ref/hash.c"
 $12 = $5; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $13 = $6; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $14 = $13; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $16 = (($13) + 4)|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $17 = $16; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $18 = HEAP32[$17>>2]|0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $19 = (___muldi3(($15|0),($18|0),8,0)|0); //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $20 = tempRet0; //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_update($7,$12,$19,$20); //@line 210 "c_src/crypto_hash/blake512/ref/hash.c"
 $21 = $4; //@line 211 "c_src/crypto_hash/blake512/ref/hash.c"
 _blake512_final($7,$21); //@line 211 "c_src/crypto_hash/blake512/ref/hash.c"
 STACKTOP = sp;return 0; //@line 212 "c_src/crypto_hash/blake512/ref/hash.c"
}
function _crypto_stream_chacha12_ref($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $6 = sp + 8|0;
 $9 = sp + 16|0;
 $10 = sp;
 $5 = $0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = $1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $2;
 $7 = $3;
 $8 = $4;
 $15 = $8; //@line 18 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_keysetup($9,$15,256,64); //@line 18 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $16 = $7; //@line 19 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_ivsetup($9,$16); //@line 19 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $17 = $10; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $18 = $17; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 HEAP32[$18>>2] = 0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $19 = (($17) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $20 = $19; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 HEAP32[$20>>2] = 0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 while(1) {
  $21 = $10; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $22 = $21; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $23 = HEAP32[$22>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $24 = (($21) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $25 = $24; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $26 = HEAP32[$25>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $27 = $6; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $28 = $27; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $29 = HEAP32[$28>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $30 = (($27) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $31 = $30; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $32 = HEAP32[$31>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $33 = ($26>>>0)<($32>>>0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $34 = ($23>>>0)<($29>>>0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $35 = ($26|0)==($32|0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $36 = $35 & $34; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $37 = $33 | $36; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  if (!($37)) {
   break;
  }
  $38 = $10; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $39 = $38; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $40 = HEAP32[$39>>2]|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $41 = (($38) + 4)|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $42 = $41; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $43 = HEAP32[$42>>2]|0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $44 = $5; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $45 = (($44) + ($40)|0); //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP8[$45>>0] = 0; //@line 22 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $46 = $10; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $47 = $46; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $48 = HEAP32[$47>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $49 = (($46) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $50 = $49; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $51 = HEAP32[$50>>2]|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $52 = (_i64Add(($48|0),($51|0),1,0)|0); //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $53 = tempRet0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $54 = $10; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $55 = $54; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP32[$55>>2] = $52; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $56 = (($54) + 4)|0; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  $57 = $56; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
  HEAP32[$57>>2] = $53; //@line 21 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 }
 $58 = $5; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $59 = $5; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $60 = $6; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $61 = $60; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $62 = HEAP32[$61>>2]|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $63 = (($60) + 4)|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $64 = $63; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 $65 = HEAP32[$64>>2]|0; //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 _ECRYPT_encrypt_bytes($9,$58,$59,$62); //@line 24 "c_src/crypto_stream/chacha12/e/ref/stream.c"
 STACKTOP = sp;return 0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/stream.c"
}
function _ECRYPT_keysetup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $5; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $10 = HEAP8[$9>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $11 = $10&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $12 = $5; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $13 = ((($12)) + 1|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $14 = HEAP8[$13>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $15 = $14&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $16 = $15 << 8; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $17 = $11 | $16; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $18 = $5; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $19 = ((($18)) + 2|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $20 = HEAP8[$19>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $21 = $20&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $22 = $21 << 16; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $23 = $17 | $22; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $24 = $5; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $25 = ((($24)) + 3|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $26 = HEAP8[$25>>0]|0; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $27 = $26&255; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $28 = $27 << 24; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $29 = $23 | $28; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $30 = $4; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $31 = ((($30)) + 16|0); //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$31>>2] = $29; //@line 52 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $32 = $5; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $33 = ((($32)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $34 = HEAP8[$33>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $35 = $34&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $36 = $5; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $37 = ((($36)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $38 = ((($37)) + 1|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $39 = HEAP8[$38>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $40 = $39&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $41 = $40 << 8; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $42 = $35 | $41; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $43 = $5; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $44 = ((($43)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $45 = ((($44)) + 2|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $46 = HEAP8[$45>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $47 = $46&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $48 = $47 << 16; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $49 = $42 | $48; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $50 = $5; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $51 = ((($50)) + 4|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $52 = ((($51)) + 3|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $53 = HEAP8[$52>>0]|0; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $54 = $53&255; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $55 = $54 << 24; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $56 = $49 | $55; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $57 = $4; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $58 = ((($57)) + 20|0); //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$58>>2] = $56; //@line 53 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $59 = $5; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $60 = ((($59)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $61 = HEAP8[$60>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $62 = $61&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $63 = $5; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $64 = ((($63)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $65 = ((($64)) + 1|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $66 = HEAP8[$65>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $67 = $66&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $68 = $67 << 8; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $69 = $62 | $68; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $70 = $5; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $71 = ((($70)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $72 = ((($71)) + 2|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $73 = HEAP8[$72>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $74 = $73&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $75 = $74 << 16; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $76 = $69 | $75; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $77 = $5; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $78 = ((($77)) + 8|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $79 = ((($78)) + 3|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $80 = HEAP8[$79>>0]|0; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $81 = $80&255; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $82 = $81 << 24; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $83 = $76 | $82; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $84 = $4; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $85 = ((($84)) + 24|0); //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$85>>2] = $83; //@line 54 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $86 = $5; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $87 = ((($86)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $88 = HEAP8[$87>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $89 = $88&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $90 = $5; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $91 = ((($90)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $92 = ((($91)) + 1|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $93 = HEAP8[$92>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $94 = $93&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $95 = $94 << 8; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $96 = $89 | $95; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $97 = $5; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $98 = ((($97)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $99 = ((($98)) + 2|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $100 = HEAP8[$99>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $101 = $100&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $102 = $101 << 16; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $103 = $96 | $102; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $104 = $5; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $105 = ((($104)) + 12|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $106 = ((($105)) + 3|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $107 = HEAP8[$106>>0]|0; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $108 = $107&255; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $109 = $108 << 24; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $110 = $103 | $109; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $111 = $4; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $112 = ((($111)) + 28|0); //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$112>>2] = $110; //@line 55 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $113 = $6; //@line 56 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $114 = ($113|0)==(256); //@line 56 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 if ($114) {
  $115 = $5; //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $116 = ((($115)) + 16|0); //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $116; //@line 57 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $8 = 1782; //@line 58 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 } else {
  $8 = 1766; //@line 60 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $117 = $5; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $118 = HEAP8[$117>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $119 = $118&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $120 = $5; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $121 = ((($120)) + 1|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $122 = HEAP8[$121>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $123 = $122&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $124 = $123 << 8; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $125 = $119 | $124; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $126 = $5; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $127 = ((($126)) + 2|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $128 = HEAP8[$127>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $129 = $128&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $130 = $129 << 16; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $131 = $125 | $130; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $132 = $5; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $133 = ((($132)) + 3|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $134 = HEAP8[$133>>0]|0; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $135 = $134&255; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $136 = $135 << 24; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $137 = $131 | $136; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $138 = $4; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $139 = ((($138)) + 32|0); //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$139>>2] = $137; //@line 62 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $140 = $5; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $141 = ((($140)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $142 = HEAP8[$141>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $143 = $142&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $144 = $5; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $145 = ((($144)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $146 = ((($145)) + 1|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $147 = HEAP8[$146>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $148 = $147&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $149 = $148 << 8; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $150 = $143 | $149; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $151 = $5; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $152 = ((($151)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $153 = ((($152)) + 2|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $154 = HEAP8[$153>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $155 = $154&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $156 = $155 << 16; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $157 = $150 | $156; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $158 = $5; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $159 = ((($158)) + 4|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $160 = ((($159)) + 3|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $161 = HEAP8[$160>>0]|0; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $162 = $161&255; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $163 = $162 << 24; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $164 = $157 | $163; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $165 = $4; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $166 = ((($165)) + 36|0); //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$166>>2] = $164; //@line 63 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $167 = $5; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $168 = ((($167)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $169 = HEAP8[$168>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $170 = $169&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $171 = $5; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $172 = ((($171)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $173 = ((($172)) + 1|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $174 = HEAP8[$173>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $175 = $174&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $176 = $175 << 8; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $177 = $170 | $176; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $178 = $5; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $179 = ((($178)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $180 = ((($179)) + 2|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $181 = HEAP8[$180>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $182 = $181&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $183 = $182 << 16; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $184 = $177 | $183; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $185 = $5; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $186 = ((($185)) + 8|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $187 = ((($186)) + 3|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $188 = HEAP8[$187>>0]|0; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $189 = $188&255; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $190 = $189 << 24; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $191 = $184 | $190; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $192 = $4; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $193 = ((($192)) + 40|0); //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$193>>2] = $191; //@line 64 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $194 = $5; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $195 = ((($194)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $196 = HEAP8[$195>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $197 = $196&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $198 = $5; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $199 = ((($198)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $200 = ((($199)) + 1|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $201 = HEAP8[$200>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $202 = $201&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $203 = $202 << 8; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $204 = $197 | $203; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $205 = $5; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $206 = ((($205)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $207 = ((($206)) + 2|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $208 = HEAP8[$207>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $209 = $208&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $210 = $209 << 16; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $211 = $204 | $210; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $212 = $5; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $213 = ((($212)) + 12|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $214 = ((($213)) + 3|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $215 = HEAP8[$214>>0]|0; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $216 = $215&255; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $217 = $216 << 24; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $218 = $211 | $217; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $219 = $4; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $220 = ((($219)) + 44|0); //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$220>>2] = $218; //@line 65 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $221 = $8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $222 = HEAP8[$221>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $223 = $222 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $224 = $8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $225 = ((($224)) + 1|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $226 = HEAP8[$225>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $227 = $226 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $228 = $227 << 8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $229 = $223 | $228; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $230 = $8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $231 = ((($230)) + 2|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $232 = HEAP8[$231>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $233 = $232 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $234 = $233 << 16; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $235 = $229 | $234; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $236 = $8; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $237 = ((($236)) + 3|0); //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $238 = HEAP8[$237>>0]|0; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $239 = $238 << 24 >> 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $240 = $239 << 24; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $241 = $235 | $240; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $242 = $4; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$242>>2] = $241; //@line 66 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $243 = $8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $244 = ((($243)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $245 = HEAP8[$244>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $246 = $245 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $247 = $8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $248 = ((($247)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $249 = ((($248)) + 1|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $250 = HEAP8[$249>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $251 = $250 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $252 = $251 << 8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $253 = $246 | $252; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $254 = $8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $255 = ((($254)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $256 = ((($255)) + 2|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $257 = HEAP8[$256>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $258 = $257 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $259 = $258 << 16; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $260 = $253 | $259; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $261 = $8; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $262 = ((($261)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $263 = ((($262)) + 3|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $264 = HEAP8[$263>>0]|0; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $265 = $264 << 24 >> 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $266 = $265 << 24; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $267 = $260 | $266; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $268 = $4; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $269 = ((($268)) + 4|0); //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$269>>2] = $267; //@line 67 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $270 = $8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $271 = ((($270)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $272 = HEAP8[$271>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $273 = $272 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $274 = $8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $275 = ((($274)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $276 = ((($275)) + 1|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $277 = HEAP8[$276>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $278 = $277 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $279 = $278 << 8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $280 = $273 | $279; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $281 = $8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $282 = ((($281)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $283 = ((($282)) + 2|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $284 = HEAP8[$283>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $285 = $284 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $286 = $285 << 16; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $287 = $280 | $286; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $288 = $8; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $289 = ((($288)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $290 = ((($289)) + 3|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $291 = HEAP8[$290>>0]|0; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $292 = $291 << 24 >> 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $293 = $292 << 24; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $294 = $287 | $293; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $295 = $4; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $296 = ((($295)) + 8|0); //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$296>>2] = $294; //@line 68 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $297 = $8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $298 = ((($297)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $299 = HEAP8[$298>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $300 = $299 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $301 = $8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $302 = ((($301)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $303 = ((($302)) + 1|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $304 = HEAP8[$303>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $305 = $304 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $306 = $305 << 8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $307 = $300 | $306; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $308 = $8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $309 = ((($308)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $310 = ((($309)) + 2|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $311 = HEAP8[$310>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $312 = $311 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $313 = $312 << 16; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $314 = $307 | $313; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $315 = $8; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $316 = ((($315)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $317 = ((($316)) + 3|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $318 = HEAP8[$317>>0]|0; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $319 = $318 << 24 >> 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $320 = $319 << 24; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $321 = $314 | $320; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $322 = $4; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $323 = ((($322)) + 12|0); //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$323>>2] = $321; //@line 69 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 STACKTOP = sp;return; //@line 70 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _ECRYPT_ivsetup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $5 = ((($4)) + 48|0); //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$5>>2] = 0; //@line 74 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $6 = $2; //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $7 = ((($6)) + 52|0); //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$7>>2] = 0; //@line 75 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $8 = $3; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $9 = HEAP8[$8>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $10 = $9&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $11 = $3; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $12 = ((($11)) + 1|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $13 = HEAP8[$12>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $14 = $13&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $15 = $14 << 8; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $16 = $10 | $15; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $17 = $3; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $18 = ((($17)) + 2|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $19 = HEAP8[$18>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $20 = $19&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $21 = $20 << 16; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $22 = $16 | $21; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $23 = $3; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $24 = ((($23)) + 3|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $25 = HEAP8[$24>>0]|0; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $26 = $25&255; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $27 = $26 << 24; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $28 = $22 | $27; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $29 = $2; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $30 = ((($29)) + 56|0); //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$30>>2] = $28; //@line 76 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $31 = $3; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $32 = ((($31)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $33 = HEAP8[$32>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $34 = $33&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $35 = $3; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $36 = ((($35)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $37 = ((($36)) + 1|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $38 = HEAP8[$37>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $39 = $38&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $40 = $39 << 8; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $41 = $34 | $40; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $42 = $3; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $43 = ((($42)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $44 = ((($43)) + 2|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $45 = HEAP8[$44>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $46 = $45&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $47 = $46 << 16; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $48 = $41 | $47; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $49 = $3; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $50 = ((($49)) + 4|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $51 = ((($50)) + 3|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $52 = HEAP8[$51>>0]|0; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $53 = $52&255; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $54 = $53 << 24; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $55 = $48 | $54; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $56 = $2; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $57 = ((($56)) + 60|0); //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 HEAP32[$57>>2] = $55; //@line 77 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 STACKTOP = sp;return; //@line 78 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _ECRYPT_encrypt_bytes($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $8 = sp + 24|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = $7; //@line 85 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 $11 = ($10|0)!=(0); //@line 85 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 if (!($11)) {
  STACKTOP = sp;return; //@line 102 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 while(1) {
  $12 = $4; //@line 87 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  _salsa20_wordtobyte($8,$12); //@line 87 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $13 = $4; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $14 = ((($13)) + 48|0); //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $15 = HEAP32[$14>>2]|0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $16 = (($15) + 1)|0; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $17 = $4; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $18 = ((($17)) + 48|0); //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$18>>2] = $16; //@line 88 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $19 = $4; //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $20 = ((($19)) + 48|0); //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $21 = HEAP32[$20>>2]|0; //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $22 = ($21|0)!=(0); //@line 89 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($22)) {
   $23 = $4; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $24 = ((($23)) + 52|0); //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $25 = HEAP32[$24>>2]|0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $26 = (($25) + 1)|0; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $27 = $4; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $28 = ((($27)) + 52|0); //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   HEAP32[$28>>2] = $26; //@line 90 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  }
  $29 = $7; //@line 93 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $30 = ($29>>>0)<=(64); //@line 93 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $9 = 0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if ($30) {
   break;
  }
  while(1) {
   $50 = $9; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $51 = ($50|0)<(64); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   if (!($51)) {
    break;
   }
   $52 = $9; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $53 = $5; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $54 = (($53) + ($52)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $55 = HEAP8[$54>>0]|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $56 = $55&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $57 = $9; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $58 = (($8) + ($57)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $59 = HEAP8[$58>>0]|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $60 = $59&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $61 = $56 ^ $60; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $62 = $61&255; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $63 = $9; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $64 = $6; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $65 = (($64) + ($63)|0); //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   HEAP8[$65>>0] = $62; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $66 = $9; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $67 = (($66) + 1)|0; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
   $9 = $67; //@line 97 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  }
  $68 = $7; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $69 = (($68) - 64)|0; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $7 = $69; //@line 98 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $70 = $6; //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $71 = ((($70)) + 64|0); //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $6 = $71; //@line 99 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $72 = $5; //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $73 = ((($72)) + 64|0); //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $73; //@line 100 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 while(1) {
  $31 = $9; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $32 = $7; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $33 = ($31>>>0)<($32>>>0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($33)) {
   break;
  }
  $34 = $9; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $35 = $5; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $36 = (($35) + ($34)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $37 = HEAP8[$36>>0]|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $38 = $37&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $39 = $9; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $40 = (($8) + ($39)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $41 = HEAP8[$40>>0]|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $42 = $41&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $43 = $38 ^ $42; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $44 = $43&255; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $45 = $9; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $46 = $6; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $47 = (($46) + ($45)|0); //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$47>>0] = $44; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $48 = $9; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $49 = (($48) + 1)|0; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $9 = $49; //@line 94 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 STACKTOP = sp;return; //@line 102 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _salsa20_wordtobyte($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0;
 var $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $6 = $5; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $7 = ($6|0)<(16); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($7)) {
   break;
  }
  $8 = $5; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $9 = $3; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $10 = (($9) + ($8<<2)|0); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $11 = HEAP32[$10>>2]|0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $12 = $5; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $13 = (($4) + ($12<<2)|0); //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$13>>2] = $11; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $14 = $5; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $15 = (($14) + 1)|0; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $15; //@line 25 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $5 = 12; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $16 = $5; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $17 = ($16|0)>(0); //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($17)) {
   break;
  }
  $18 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $19 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $20 = HEAP32[$19>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $21 = (($18) + ($20))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$4>>2] = $21; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $22 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $23 = HEAP32[$22>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $24 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $25 = $23 ^ $24; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $26 = $25 << 16; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $27 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $28 = HEAP32[$27>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $29 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $30 = $28 ^ $29; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $31 = $30 >>> 16; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $32 = $26 | $31; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $33 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$33>>2] = $32; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $34 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $35 = HEAP32[$34>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $36 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $37 = HEAP32[$36>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $38 = (($35) + ($37))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $39 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$39>>2] = $38; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $40 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $41 = HEAP32[$40>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $42 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $43 = HEAP32[$42>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $44 = $41 ^ $43; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $45 = $44 << 12; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $46 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $47 = HEAP32[$46>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $48 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $49 = HEAP32[$48>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $50 = $47 ^ $49; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $51 = $50 >>> 20; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $52 = $45 | $51; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $53 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$53>>2] = $52; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $54 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $55 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $56 = HEAP32[$55>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $57 = (($54) + ($56))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$4>>2] = $57; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $58 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $59 = HEAP32[$58>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $60 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $61 = $59 ^ $60; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $62 = $61 << 8; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $63 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $64 = HEAP32[$63>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $65 = HEAP32[$4>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $66 = $64 ^ $65; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $67 = $66 >>> 24; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $68 = $62 | $67; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $69 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$69>>2] = $68; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $70 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $71 = HEAP32[$70>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $72 = ((($4)) + 48|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $73 = HEAP32[$72>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $74 = (($71) + ($73))|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $75 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$75>>2] = $74; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $76 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $77 = HEAP32[$76>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $78 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $79 = HEAP32[$78>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $80 = $77 ^ $79; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $81 = $80 << 7; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $82 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $83 = HEAP32[$82>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $84 = ((($4)) + 32|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $85 = HEAP32[$84>>2]|0; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $86 = $83 ^ $85; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $87 = $86 >>> 25; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $88 = $81 | $87; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $89 = ((($4)) + 16|0); //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$89>>2] = $88; //@line 27 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $90 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $91 = HEAP32[$90>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $92 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $93 = HEAP32[$92>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $94 = (($91) + ($93))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $95 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$95>>2] = $94; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $96 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $97 = HEAP32[$96>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $98 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $99 = HEAP32[$98>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $100 = $97 ^ $99; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $101 = $100 << 16; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $102 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $103 = HEAP32[$102>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $104 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $105 = HEAP32[$104>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $106 = $103 ^ $105; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $107 = $106 >>> 16; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $108 = $101 | $107; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $109 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$109>>2] = $108; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $110 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $111 = HEAP32[$110>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $112 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $113 = HEAP32[$112>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $114 = (($111) + ($113))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $115 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$115>>2] = $114; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $116 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $117 = HEAP32[$116>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $118 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $119 = HEAP32[$118>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $120 = $117 ^ $119; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $121 = $120 << 12; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $122 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $123 = HEAP32[$122>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $124 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $125 = HEAP32[$124>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $126 = $123 ^ $125; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $127 = $126 >>> 20; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $128 = $121 | $127; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $129 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$129>>2] = $128; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $130 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $131 = HEAP32[$130>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $132 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $133 = HEAP32[$132>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $134 = (($131) + ($133))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $135 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$135>>2] = $134; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $136 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $137 = HEAP32[$136>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $138 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $139 = HEAP32[$138>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $140 = $137 ^ $139; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $141 = $140 << 8; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $142 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $143 = HEAP32[$142>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $144 = ((($4)) + 4|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $145 = HEAP32[$144>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $146 = $143 ^ $145; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $147 = $146 >>> 24; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $148 = $141 | $147; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $149 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$149>>2] = $148; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $150 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $151 = HEAP32[$150>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $152 = ((($4)) + 52|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $153 = HEAP32[$152>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $154 = (($151) + ($153))|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $155 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$155>>2] = $154; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $156 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $157 = HEAP32[$156>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $158 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $159 = HEAP32[$158>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $160 = $157 ^ $159; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $161 = $160 << 7; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $162 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $163 = HEAP32[$162>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $164 = ((($4)) + 36|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $165 = HEAP32[$164>>2]|0; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $166 = $163 ^ $165; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $167 = $166 >>> 25; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $168 = $161 | $167; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $169 = ((($4)) + 20|0); //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$169>>2] = $168; //@line 28 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $170 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $171 = HEAP32[$170>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $172 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $173 = HEAP32[$172>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $174 = (($171) + ($173))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $175 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$175>>2] = $174; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $176 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $177 = HEAP32[$176>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $178 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $179 = HEAP32[$178>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $180 = $177 ^ $179; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $181 = $180 << 16; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $182 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $183 = HEAP32[$182>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $184 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $185 = HEAP32[$184>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $186 = $183 ^ $185; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $187 = $186 >>> 16; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $188 = $181 | $187; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $189 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$189>>2] = $188; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $190 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $191 = HEAP32[$190>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $192 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $193 = HEAP32[$192>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $194 = (($191) + ($193))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $195 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$195>>2] = $194; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $196 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $197 = HEAP32[$196>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $198 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $199 = HEAP32[$198>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $200 = $197 ^ $199; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $201 = $200 << 12; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $202 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $203 = HEAP32[$202>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $204 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $205 = HEAP32[$204>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $206 = $203 ^ $205; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $207 = $206 >>> 20; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $208 = $201 | $207; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $209 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$209>>2] = $208; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $210 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $211 = HEAP32[$210>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $212 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $213 = HEAP32[$212>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $214 = (($211) + ($213))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $215 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$215>>2] = $214; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $216 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $217 = HEAP32[$216>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $218 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $219 = HEAP32[$218>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $220 = $217 ^ $219; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $221 = $220 << 8; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $222 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $223 = HEAP32[$222>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $224 = ((($4)) + 8|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $225 = HEAP32[$224>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $226 = $223 ^ $225; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $227 = $226 >>> 24; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $228 = $221 | $227; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $229 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$229>>2] = $228; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $230 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $231 = HEAP32[$230>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $232 = ((($4)) + 56|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $233 = HEAP32[$232>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $234 = (($231) + ($233))|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $235 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$235>>2] = $234; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $236 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $237 = HEAP32[$236>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $238 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $239 = HEAP32[$238>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $240 = $237 ^ $239; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $241 = $240 << 7; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $242 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $243 = HEAP32[$242>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $244 = ((($4)) + 40|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $245 = HEAP32[$244>>2]|0; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $246 = $243 ^ $245; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $247 = $246 >>> 25; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $248 = $241 | $247; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $249 = ((($4)) + 24|0); //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$249>>2] = $248; //@line 29 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $250 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $251 = HEAP32[$250>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $252 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $253 = HEAP32[$252>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $254 = (($251) + ($253))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $255 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$255>>2] = $254; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $256 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $257 = HEAP32[$256>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $258 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $259 = HEAP32[$258>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $260 = $257 ^ $259; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $261 = $260 << 16; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $262 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $263 = HEAP32[$262>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $264 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $265 = HEAP32[$264>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $266 = $263 ^ $265; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $267 = $266 >>> 16; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $268 = $261 | $267; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $269 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$269>>2] = $268; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $270 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $271 = HEAP32[$270>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $272 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $273 = HEAP32[$272>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $274 = (($271) + ($273))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $275 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$275>>2] = $274; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $276 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $277 = HEAP32[$276>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $278 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $279 = HEAP32[$278>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $280 = $277 ^ $279; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $281 = $280 << 12; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $282 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $283 = HEAP32[$282>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $284 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $285 = HEAP32[$284>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $286 = $283 ^ $285; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $287 = $286 >>> 20; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $288 = $281 | $287; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $289 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$289>>2] = $288; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $290 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $291 = HEAP32[$290>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $292 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $293 = HEAP32[$292>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $294 = (($291) + ($293))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $295 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$295>>2] = $294; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $296 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $297 = HEAP32[$296>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $298 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $299 = HEAP32[$298>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $300 = $297 ^ $299; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $301 = $300 << 8; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $302 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $303 = HEAP32[$302>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $304 = ((($4)) + 12|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $305 = HEAP32[$304>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $306 = $303 ^ $305; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $307 = $306 >>> 24; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $308 = $301 | $307; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $309 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$309>>2] = $308; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $310 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $311 = HEAP32[$310>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $312 = ((($4)) + 60|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $313 = HEAP32[$312>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $314 = (($311) + ($313))|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $315 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$315>>2] = $314; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $316 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $317 = HEAP32[$316>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $318 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $319 = HEAP32[$318>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $320 = $317 ^ $319; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $321 = $320 << 7; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $322 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $323 = HEAP32[$322>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $324 = ((($4)) + 44|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $325 = HEAP32[$324>>2]|0; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $326 = $323 ^ $325; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $327 = $326 >>> 25; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $328 = $321 | $327; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $329 = ((($4)) + 28|0); //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$329>>2] = $328; //@line 30 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $330 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $331 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $332 = HEAP32[$331>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $333 = (($330) + ($332))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$4>>2] = $333; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $334 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $335 = HEAP32[$334>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $336 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $337 = $335 ^ $336; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $338 = $337 << 16; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $339 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $340 = HEAP32[$339>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $341 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $342 = $340 ^ $341; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $343 = $342 >>> 16; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $344 = $338 | $343; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $345 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$345>>2] = $344; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $346 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $347 = HEAP32[$346>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $348 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $349 = HEAP32[$348>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $350 = (($347) + ($349))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $351 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$351>>2] = $350; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $352 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $353 = HEAP32[$352>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $354 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $355 = HEAP32[$354>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $356 = $353 ^ $355; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $357 = $356 << 12; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $358 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $359 = HEAP32[$358>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $360 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $361 = HEAP32[$360>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $362 = $359 ^ $361; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $363 = $362 >>> 20; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $364 = $357 | $363; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $365 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$365>>2] = $364; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $366 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $367 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $368 = HEAP32[$367>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $369 = (($366) + ($368))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$4>>2] = $369; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $370 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $371 = HEAP32[$370>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $372 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $373 = $371 ^ $372; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $374 = $373 << 8; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $375 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $376 = HEAP32[$375>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $377 = HEAP32[$4>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $378 = $376 ^ $377; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $379 = $378 >>> 24; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $380 = $374 | $379; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $381 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$381>>2] = $380; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $382 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $383 = HEAP32[$382>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $384 = ((($4)) + 60|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $385 = HEAP32[$384>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $386 = (($383) + ($385))|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $387 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$387>>2] = $386; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $388 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $389 = HEAP32[$388>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $390 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $391 = HEAP32[$390>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $392 = $389 ^ $391; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $393 = $392 << 7; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $394 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $395 = HEAP32[$394>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $396 = ((($4)) + 40|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $397 = HEAP32[$396>>2]|0; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $398 = $395 ^ $397; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $399 = $398 >>> 25; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $400 = $393 | $399; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $401 = ((($4)) + 20|0); //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$401>>2] = $400; //@line 31 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $402 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $403 = HEAP32[$402>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $404 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $405 = HEAP32[$404>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $406 = (($403) + ($405))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $407 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$407>>2] = $406; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $408 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $409 = HEAP32[$408>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $410 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $411 = HEAP32[$410>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $412 = $409 ^ $411; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $413 = $412 << 16; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $414 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $415 = HEAP32[$414>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $416 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $417 = HEAP32[$416>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $418 = $415 ^ $417; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $419 = $418 >>> 16; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $420 = $413 | $419; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $421 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$421>>2] = $420; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $422 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $423 = HEAP32[$422>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $424 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $425 = HEAP32[$424>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $426 = (($423) + ($425))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $427 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$427>>2] = $426; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $428 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $429 = HEAP32[$428>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $430 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $431 = HEAP32[$430>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $432 = $429 ^ $431; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $433 = $432 << 12; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $434 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $435 = HEAP32[$434>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $436 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $437 = HEAP32[$436>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $438 = $435 ^ $437; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $439 = $438 >>> 20; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $440 = $433 | $439; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $441 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$441>>2] = $440; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $442 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $443 = HEAP32[$442>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $444 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $445 = HEAP32[$444>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $446 = (($443) + ($445))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $447 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$447>>2] = $446; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $448 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $449 = HEAP32[$448>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $450 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $451 = HEAP32[$450>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $452 = $449 ^ $451; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $453 = $452 << 8; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $454 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $455 = HEAP32[$454>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $456 = ((($4)) + 4|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $457 = HEAP32[$456>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $458 = $455 ^ $457; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $459 = $458 >>> 24; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $460 = $453 | $459; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $461 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$461>>2] = $460; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $462 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $463 = HEAP32[$462>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $464 = ((($4)) + 48|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $465 = HEAP32[$464>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $466 = (($463) + ($465))|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $467 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$467>>2] = $466; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $468 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $469 = HEAP32[$468>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $470 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $471 = HEAP32[$470>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $472 = $469 ^ $471; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $473 = $472 << 7; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $474 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $475 = HEAP32[$474>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $476 = ((($4)) + 44|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $477 = HEAP32[$476>>2]|0; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $478 = $475 ^ $477; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $479 = $478 >>> 25; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $480 = $473 | $479; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $481 = ((($4)) + 24|0); //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$481>>2] = $480; //@line 32 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $482 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $483 = HEAP32[$482>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $484 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $485 = HEAP32[$484>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $486 = (($483) + ($485))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $487 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$487>>2] = $486; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $488 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $489 = HEAP32[$488>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $490 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $491 = HEAP32[$490>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $492 = $489 ^ $491; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $493 = $492 << 16; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $494 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $495 = HEAP32[$494>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $496 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $497 = HEAP32[$496>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $498 = $495 ^ $497; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $499 = $498 >>> 16; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $500 = $493 | $499; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $501 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$501>>2] = $500; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $502 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $503 = HEAP32[$502>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $504 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $505 = HEAP32[$504>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $506 = (($503) + ($505))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $507 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$507>>2] = $506; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $508 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $509 = HEAP32[$508>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $510 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $511 = HEAP32[$510>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $512 = $509 ^ $511; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $513 = $512 << 12; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $514 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $515 = HEAP32[$514>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $516 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $517 = HEAP32[$516>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $518 = $515 ^ $517; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $519 = $518 >>> 20; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $520 = $513 | $519; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $521 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$521>>2] = $520; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $522 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $523 = HEAP32[$522>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $524 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $525 = HEAP32[$524>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $526 = (($523) + ($525))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $527 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$527>>2] = $526; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $528 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $529 = HEAP32[$528>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $530 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $531 = HEAP32[$530>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $532 = $529 ^ $531; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $533 = $532 << 8; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $534 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $535 = HEAP32[$534>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $536 = ((($4)) + 8|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $537 = HEAP32[$536>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $538 = $535 ^ $537; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $539 = $538 >>> 24; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $540 = $533 | $539; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $541 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$541>>2] = $540; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $542 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $543 = HEAP32[$542>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $544 = ((($4)) + 52|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $545 = HEAP32[$544>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $546 = (($543) + ($545))|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $547 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$547>>2] = $546; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $548 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $549 = HEAP32[$548>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $550 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $551 = HEAP32[$550>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $552 = $549 ^ $551; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $553 = $552 << 7; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $554 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $555 = HEAP32[$554>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $556 = ((($4)) + 32|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $557 = HEAP32[$556>>2]|0; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $558 = $555 ^ $557; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $559 = $558 >>> 25; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $560 = $553 | $559; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $561 = ((($4)) + 28|0); //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$561>>2] = $560; //@line 33 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $562 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $563 = HEAP32[$562>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $564 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $565 = HEAP32[$564>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $566 = (($563) + ($565))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $567 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$567>>2] = $566; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $568 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $569 = HEAP32[$568>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $570 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $571 = HEAP32[$570>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $572 = $569 ^ $571; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $573 = $572 << 16; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $574 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $575 = HEAP32[$574>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $576 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $577 = HEAP32[$576>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $578 = $575 ^ $577; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $579 = $578 >>> 16; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $580 = $573 | $579; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $581 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$581>>2] = $580; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $582 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $583 = HEAP32[$582>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $584 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $585 = HEAP32[$584>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $586 = (($583) + ($585))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $587 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$587>>2] = $586; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $588 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $589 = HEAP32[$588>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $590 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $591 = HEAP32[$590>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $592 = $589 ^ $591; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $593 = $592 << 12; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $594 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $595 = HEAP32[$594>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $596 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $597 = HEAP32[$596>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $598 = $595 ^ $597; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $599 = $598 >>> 20; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $600 = $593 | $599; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $601 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$601>>2] = $600; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $602 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $603 = HEAP32[$602>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $604 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $605 = HEAP32[$604>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $606 = (($603) + ($605))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $607 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$607>>2] = $606; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $608 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $609 = HEAP32[$608>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $610 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $611 = HEAP32[$610>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $612 = $609 ^ $611; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $613 = $612 << 8; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $614 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $615 = HEAP32[$614>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $616 = ((($4)) + 12|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $617 = HEAP32[$616>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $618 = $615 ^ $617; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $619 = $618 >>> 24; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $620 = $613 | $619; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $621 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$621>>2] = $620; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $622 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $623 = HEAP32[$622>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $624 = ((($4)) + 56|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $625 = HEAP32[$624>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $626 = (($623) + ($625))|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $627 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$627>>2] = $626; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $628 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $629 = HEAP32[$628>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $630 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $631 = HEAP32[$630>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $632 = $629 ^ $631; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $633 = $632 << 7; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $634 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $635 = HEAP32[$634>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $636 = ((($4)) + 36|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $637 = HEAP32[$636>>2]|0; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $638 = $635 ^ $637; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $639 = $638 >>> 25; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $640 = $633 | $639; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $641 = ((($4)) + 16|0); //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$641>>2] = $640; //@line 34 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $642 = $5; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $643 = (($642) - 2)|0; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $643; //@line 26 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $5 = 0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $644 = $5; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $645 = ($644|0)<(16); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($645)) {
   break;
  }
  $646 = $5; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $647 = (($4) + ($646<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $648 = HEAP32[$647>>2]|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $649 = $5; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $650 = $3; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $651 = (($650) + ($649<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $652 = HEAP32[$651>>2]|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $653 = (($648) + ($652))|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $654 = $5; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $655 = (($4) + ($654<<2)|0); //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP32[$655>>2] = $653; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $656 = $5; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $657 = (($656) + 1)|0; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $657; //@line 36 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 $5 = 0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 while(1) {
  $658 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $659 = ($658|0)<(16); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  if (!($659)) {
   break;
  }
  $660 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $661 = (($4) + ($660<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $662 = HEAP32[$661>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $663 = $662&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $664 = $663&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $665 = $664 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $666 = $665&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $667 = $2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $668 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $669 = $668<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $670 = (($667) + ($669)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$670>>0] = $666; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $671 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $672 = (($4) + ($671<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $673 = HEAP32[$672>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $674 = $673 >>> 8; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $675 = $674&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $676 = $675&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $677 = $676 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $678 = $677&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $679 = $2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $680 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $681 = $680<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $682 = (($679) + ($681)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $683 = ((($682)) + 1|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$683>>0] = $678; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $684 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $685 = (($4) + ($684<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $686 = HEAP32[$685>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $687 = $686 >>> 16; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $688 = $687&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $689 = $688&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $690 = $689 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $691 = $690&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $692 = $2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $693 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $694 = $693<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $695 = (($692) + ($694)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $696 = ((($695)) + 2|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$696>>0] = $691; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $697 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $698 = (($4) + ($697<<2)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $699 = HEAP32[$698>>2]|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $700 = $699 >>> 24; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $701 = $700&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $702 = $701&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $703 = $702 & 255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $704 = $703&255; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $705 = $2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $706 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $707 = $706<<2; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $708 = (($705) + ($707)|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $709 = ((($708)) + 3|0); //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  HEAP8[$709>>0] = $704; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $710 = $5; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $711 = (($710) + 1)|0; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
  $5 = $711; //@line 37 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
 }
 STACKTOP = sp;return; //@line 38 "c_src/crypto_stream/chacha12/e/ref/e/chacha.c"
}
function _varlen_hash($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $6 = sp;
 $4 = $0;
 $5 = $1;
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $3;
 $11 = $4; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $12 = $5; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $13 = $6; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $14 = $13; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $16 = (($13) + 4)|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $17 = $16; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $18 = HEAP32[$17>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 (_crypto_hash_blake256_ref($11,$12,$15,$18)|0); //@line 13 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 14 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _msg_hash($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $6 = sp;
 $4 = $0;
 $5 = $1;
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $3;
 $11 = $4; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $12 = $5; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $13 = $6; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $14 = $13; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $15 = HEAP32[$14>>2]|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $16 = (($13) + 4)|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $17 = $16; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $18 = HEAP32[$17>>2]|0; //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 (_crypto_hash_blake512_ref($11,$12,$15,$18)|0); //@line 20 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return 0; //@line 21 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_2n_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $4 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $6 = $5; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = ($6|0)<(32); //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($7)) {
   break;
  }
  $8 = $5; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = $3; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = (($9) + ($8)|0); //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = HEAP8[$10>>0]|0; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = $5; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = (($4) + ($12)|0); //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$13>>0] = $11; //@line 37 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $5; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = HEAP32[50]|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = (($15) + ($14)|0); //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = HEAP8[$16>>0]|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = $5; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = (($18) + 32)|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = (($4) + ($19)|0); //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$20>>0] = $17; //@line 38 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $21 = $5; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = (($21) + 1)|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $22; //@line 35 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($4,$4); //@line 40 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $5 = 0; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $23 = $5; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = ($23|0)<(32); //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($24)) {
   break;
  }
  $25 = $5; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $26 = (($4) + ($25)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $27 = HEAP8[$26>>0]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $28 = $27&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $29 = $5; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $30 = (($29) + 32)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $31 = $3; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $32 = (($31) + ($30)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $33 = HEAP8[$32>>0]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $34 = $33&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $35 = $28 ^ $34; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $36 = $35&255; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $37 = $5; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $38 = (($4) + ($37)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$38>>0] = $36; //@line 42 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $39 = $5; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $40 = (($39) + 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $40; //@line 41 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($4,$4); //@line 43 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $5 = 0; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $41 = $5; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $42 = ($41|0)<(32); //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($42)) {
   break;
  }
  $43 = $5; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $44 = (($4) + ($43)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $45 = HEAP8[$44>>0]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $46 = $5; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $47 = $2; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $48 = (($47) + ($46)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$48>>0] = $45; //@line 45 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $49 = $5; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $50 = (($49) + 1)|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $50; //@line 44 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 STACKTOP = sp;return 0; //@line 47 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_2n_n_mask($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 0; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $8 = $7; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = ($8|0)<(64); //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($9)) {
   break;
  }
  $10 = $7; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = $4; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $13&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = $7; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = $5; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = (($16) + ($15)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = HEAP8[$17>>0]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = $18&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = $14 ^ $19; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $21 = $20&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = $7; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $23 = (($6) + ($22)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$23>>0] = $21; //@line 55 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = $7; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $25 = (($24) + 1)|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = $25; //@line 54 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 $26 = $3; //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $27 = (_hash_2n_n($26,$6)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return ($27|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_n_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $4 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $6 = $5; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = ($6|0)<(32); //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($7)) {
   break;
  }
  $8 = $5; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = $3; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $10 = (($9) + ($8)|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = HEAP8[$10>>0]|0; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = $5; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = (($4) + ($12)|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$13>>0] = $11; //@line 70 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $5; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = HEAP32[50]|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = (($15) + ($14)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = HEAP8[$16>>0]|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = $5; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = (($18) + 32)|0; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = (($4) + ($19)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$20>>0] = $17; //@line 71 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $21 = $5; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = (($21) + 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $22; //@line 68 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 _chacha_permute($4,$4); //@line 73 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $5 = 0; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $23 = $5; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = ($23|0)<(32); //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($24)) {
   break;
  }
  $25 = $5; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $26 = (($4) + ($25)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $27 = HEAP8[$26>>0]|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $28 = $5; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $29 = $2; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $30 = (($29) + ($28)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$30>>0] = $27; //@line 75 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $31 = $5; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $32 = (($31) + 1)|0; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $5 = $32; //@line 74 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 STACKTOP = sp;return 0; //@line 77 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _hash_n_n_mask($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 0; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
 while(1) {
  $8 = $7; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $9 = ($8|0)<(32); //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  if (!($9)) {
   break;
  }
  $10 = $7; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $11 = $4; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $12 = (($11) + ($10)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $13 = HEAP8[$12>>0]|0; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $14 = $13&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $15 = $7; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $16 = $5; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $17 = (($16) + ($15)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $18 = HEAP8[$17>>0]|0; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $19 = $18&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $20 = $14 ^ $19; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $21 = $20&255; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $22 = $7; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $23 = (($6) + ($22)|0); //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  HEAP8[$23>>0] = $21; //@line 85 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $24 = $7; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $25 = (($24) + 1)|0; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
  $7 = $25; //@line 84 "c_src/crypto_sign/sphincs256/ref/hash.c"
 }
 $26 = $3; //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
 $27 = (_hash_n_n($26,$6)|0); //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
 STACKTOP = sp;return ($27|0); //@line 86 "c_src/crypto_sign/sphincs256/ref/hash.c"
}
function _horst_sign($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 6291504|0;
 $13 = sp + 16|0;
 $17 = sp + 4194344|0;
 $23 = sp + 72|0;
 $24 = sp + 8|0;
 $25 = sp;
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $26 = $13;
 $27 = $26;
 HEAP32[$27>>2] = $4;
 $28 = (($26) + 4)|0;
 $29 = $28;
 HEAP32[$29>>2] = $5;
 $14 = $6;
 $15 = $7;
 $16 = $8;
 $22 = 0; //@line 22 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $30 = $14; //@line 26 "c_src/crypto_sign/sphincs256/ref/horst.c"
 _expand_seed($17,$30); //@line 26 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $19 = 0; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $31 = $19; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $32 = ($31|0)<(65536); //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($32)) {
   break;
  }
  $33 = $19; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $34 = (65535 + ($33))|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $35 = $34<<5; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $36 = (($23) + ($35)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $37 = $19; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $38 = $37<<5; //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $39 = (($17) + ($38)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_n_n($36,$39)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $40 = $19; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $41 = (($40) + 1)|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $41; //@line 34 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $19 = 0; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $42 = $19; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $43 = ($42|0)<(16); //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($43)) {
   break;
  }
  $44 = $19; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $45 = (16 - ($44))|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $46 = 1 << $45; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $47 = (($46) - 1)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $48 = ($47|0)<(0); //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $49 = $48 << 31 >> 31; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $50 = $24; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $51 = $50; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$51>>2] = $47; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $52 = (($50) + 4)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $53 = $52; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$53>>2] = $49; //@line 40 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $54 = $19; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $55 = (16 - ($54))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $56 = (($55) - 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $57 = 1 << $56; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $58 = (($57) - 1)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $59 = ($58|0)<(0); //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $60 = $59 << 31 >> 31; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $61 = $25; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $62 = $61; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$62>>2] = $58; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $63 = (($61) + 4)|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $64 = $63; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP32[$64>>2] = $60; //@line 41 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $20 = 0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $65 = $20; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $66 = $19; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $67 = (16 - ($66))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $68 = (($67) - 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $69 = 1 << $68; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $70 = ($65|0)<($69|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($70)) {
    break;
   }
   $71 = $25; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $72 = $71; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $73 = HEAP32[$72>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $74 = (($71) + 4)|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $75 = $74; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $76 = HEAP32[$75>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $77 = $20; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $78 = ($77|0)<(0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $79 = $78 << 31 >> 31; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $80 = (_i64Add(($73|0),($76|0),($77|0),($79|0))|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $81 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $82 = (___muldi3(($80|0),($81|0),32,0)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $83 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $84 = (($23) + ($82)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $85 = $24; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $86 = $85; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $87 = HEAP32[$86>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $88 = (($85) + 4)|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $89 = $88; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $90 = HEAP32[$89>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $91 = $20; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $92 = $91<<1; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $93 = ($92|0)<(0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $94 = $93 << 31 >> 31; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $95 = (_i64Add(($87|0),($90|0),($92|0),($94|0))|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $96 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $97 = (___muldi3(($95|0),($96|0),32,0)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $98 = tempRet0; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $99 = (($23) + ($97)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $100 = $15; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $101 = $19; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $102 = $101<<1; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $103 = $102<<5; //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $104 = (($100) + ($103)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   (_hash_2n_n_mask($84,$99,$104)|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $105 = $20; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $106 = (($105) + 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $20 = $106; //@line 42 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $107 = $19; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $108 = (($107) + 1)|0; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $108; //@line 38 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $20 = 2016; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $109 = $20; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $110 = ($109|0)<(4064); //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($110)) {
   break;
  }
  $111 = $20; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $112 = (($23) + ($111)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $113 = HEAP8[$112>>0]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $114 = $22; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $115 = (($114) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $22 = $115; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $116 = $9; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $117 = (($116) + ($114)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP8[$117>>0] = $113; //@line 52 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $118 = $20; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $119 = (($118) + 1)|0; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $20 = $119; //@line 51 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $19 = 0; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $120 = $19; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $121 = ($120|0)<(32); //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($121)) {
   break;
  }
  $122 = $19; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $123 = $122<<1; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $124 = $16; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $125 = (($124) + ($123)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $126 = HEAP8[$125>>0]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $127 = $126&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $128 = $19; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $129 = $128<<1; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $130 = (($129) + 1)|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $131 = $16; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $132 = (($131) + ($130)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $133 = HEAP8[$132>>0]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $134 = $133&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $135 = $134 << 8; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $136 = (($127) + ($135))|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $136; //@line 57 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $21 = 0; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $137 = $21; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $138 = ($137|0)<(32); //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $139 = $18; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($138)) {
    break;
   }
   $140 = $139<<5; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $141 = $21; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $142 = (($140) + ($141))|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $143 = (($17) + ($142)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $144 = HEAP8[$143>>0]|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $145 = $22; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $146 = (($145) + 1)|0; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $22 = $146; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $147 = $9; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $148 = (($147) + ($145)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   HEAP8[$148>>0] = $144; //@line 60 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $149 = $21; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $150 = (($149) + 1)|0; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $21 = $150; //@line 59 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $151 = (($139) + 65535)|0; //@line 62 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $151; //@line 62 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $20 = 0; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $152 = $20; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $153 = ($152|0)<(10); //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($153)) {
    break;
   }
   $154 = $18; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $155 = $154 & 1; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $156 = ($155|0)!=(0); //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $157 = $18; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $158 = (($157) + 1)|0; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $159 = (($157) - 1)|0; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $160 = $156 ? $158 : $159; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $18 = $160; //@line 65 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $21 = 0; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
   while(1) {
    $161 = $21; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $162 = ($161|0)<(32); //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $163 = $18; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    if (!($162)) {
     break;
    }
    $164 = $163<<5; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $165 = $21; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $166 = (($164) + ($165))|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $167 = (($23) + ($166)|0); //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $168 = HEAP8[$167>>0]|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $169 = $22; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $170 = (($169) + 1)|0; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $22 = $170; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $171 = $9; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $172 = (($171) + ($169)|0); //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    HEAP8[$172>>0] = $168; //@line 67 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $173 = $21; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $174 = (($173) + 1)|0; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $21 = $174; //@line 66 "c_src/crypto_sign/sphincs256/ref/horst.c"
   }
   $175 = (($163) - 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $176 = (($175>>>0) / 2)&-1; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $18 = $176; //@line 68 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $177 = $20; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $178 = (($177) + 1)|0; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $20 = $178; //@line 63 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $179 = $19; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $180 = (($179) + 1)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $180; //@line 55 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $19 = 0; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $181 = $19; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $182 = ($181|0)<(32); //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($182)) {
   break;
  }
  $183 = $19; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $184 = (($23) + ($183)|0); //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $185 = HEAP8[$184>>0]|0; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $186 = $19; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $187 = $10; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $188 = (($187) + ($186)|0); //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  HEAP8[$188>>0] = $185; //@line 73 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $189 = $19; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $190 = (($189) + 1)|0; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = $190; //@line 72 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $191 = $11; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $192 = $191; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $193 = $192; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 HEAP32[$193>>2] = 13312; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $194 = (($192) + 4)|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $195 = $194; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 HEAP32[$195>>2] = 0; //@line 75 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return 0; //@line 76 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _expand_seed($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $5 = $3; //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 _prg($4,2097152,0,$5); //@line 10 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return; //@line 11 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _horst_verify($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0;
 $11 = sp;
 $14 = sp + 56|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $20 = $11;
 $21 = $20;
 HEAP32[$21>>2] = $3;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $4;
 $12 = $5;
 $13 = $6;
 $24 = $9; //@line 90 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $15 = $24; //@line 90 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $25 = $9; //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $26 = ((($25)) + 2048|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $9 = $26; //@line 91 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $17 = 0; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
 L1: while(1) {
  $27 = $17; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $28 = ($27|0)<(32); //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($28)) {
   break;
  }
  $29 = $17; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $30 = $29<<1; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $31 = $13; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $32 = (($31) + ($30)|0); //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $33 = HEAP8[$32>>0]|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $34 = $33&255; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $35 = $17; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $36 = $35<<1; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $37 = (($36) + 1)|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $38 = $13; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $39 = (($38) + ($37)|0); //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $40 = HEAP8[$39>>0]|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $41 = $40&255; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $42 = $41 << 8; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $43 = (($34) + ($42))|0; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $16 = $43; //@line 95 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $44 = $16; //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $45 = $44 & 1; //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $46 = ($45|0)!=(0); //@line 101 "c_src/crypto_sign/sphincs256/ref/horst.c"
  L4: do {
   if ($46) {
    $60 = ((($14)) + 32|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $61 = $9; //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    (_hash_n_n($60,$61)|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $19 = 0; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
    while(1) {
     $62 = $19; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $63 = ($62|0)<(32); //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     if (!($63)) {
      break L4;
     }
     $64 = $19; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $65 = (32 + ($64))|0; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $66 = $9; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $67 = (($66) + ($65)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $68 = HEAP8[$67>>0]|0; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $69 = $19; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $70 = (($14) + ($69)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     HEAP8[$70>>0] = $68; //@line 111 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $71 = $19; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $72 = (($71) + 1)|0; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $19 = $72; //@line 110 "c_src/crypto_sign/sphincs256/ref/horst.c"
    }
   } else {
    $47 = $9; //@line 103 "c_src/crypto_sign/sphincs256/ref/horst.c"
    (_hash_n_n($14,$47)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/horst.c"
    $19 = 0; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
    while(1) {
     $48 = $19; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $49 = ($48|0)<(32); //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     if (!($49)) {
      break L4;
     }
     $50 = $19; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $51 = (32 + ($50))|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $52 = $9; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $53 = (($52) + ($51)|0); //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $54 = HEAP8[$53>>0]|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $55 = $19; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $56 = (32 + ($55))|0; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $57 = (($14) + ($56)|0); //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     HEAP8[$57>>0] = $54; //@line 105 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $58 = $19; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $59 = (($58) + 1)|0; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $19 = $59; //@line 104 "c_src/crypto_sign/sphincs256/ref/horst.c"
    }
   }
  } while(0);
  $73 = $9; //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $74 = ((($73)) + 64|0); //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $9 = $74; //@line 113 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = 1; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $75 = $18; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $76 = ($75|0)<(10); //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $77 = $16; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $78 = $77 >>> 1; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $16 = $78; //@line 117 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($76)) {
    break;
   }
   $79 = $16; //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $80 = $79 & 1; //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $81 = ($80|0)!=(0); //@line 119 "c_src/crypto_sign/sphincs256/ref/horst.c"
   L17: do {
    if ($81) {
     $99 = ((($14)) + 32|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $100 = $12; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $101 = $18; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $102 = (($101) - 1)|0; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $103 = $102<<1; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $104 = $103<<5; //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $105 = (($100) + ($104)|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     (_hash_2n_n_mask($99,$14,$105)|0); //@line 127 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $19 = 0; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
     while(1) {
      $106 = $19; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $107 = ($106|0)<(32); //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      if (!($107)) {
       break L17;
      }
      $108 = $19; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $109 = $9; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $110 = (($109) + ($108)|0); //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $111 = HEAP8[$110>>0]|0; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $112 = $19; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $113 = (($14) + ($112)|0); //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      HEAP8[$113>>0] = $111; //@line 129 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $114 = $19; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $115 = (($114) + 1)|0; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $19 = $115; //@line 128 "c_src/crypto_sign/sphincs256/ref/horst.c"
     }
    } else {
     $82 = $12; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $83 = $18; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $84 = (($83) - 1)|0; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $85 = $84<<1; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $86 = $85<<5; //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $87 = (($82) + ($86)|0); //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     (_hash_2n_n_mask($14,$14,$87)|0); //@line 121 "c_src/crypto_sign/sphincs256/ref/horst.c"
     $19 = 0; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
     while(1) {
      $88 = $19; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $89 = ($88|0)<(32); //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      if (!($89)) {
       break L17;
      }
      $90 = $19; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $91 = $9; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $92 = (($91) + ($90)|0); //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $93 = HEAP8[$92>>0]|0; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $94 = $19; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $95 = (32 + ($94))|0; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $96 = (($14) + ($95)|0); //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      HEAP8[$96>>0] = $93; //@line 123 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $97 = $19; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $98 = (($97) + 1)|0; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
      $19 = $98; //@line 122 "c_src/crypto_sign/sphincs256/ref/horst.c"
     }
    }
   } while(0);
   $116 = $9; //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $117 = ((($116)) + 32|0); //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $9 = $117; //@line 131 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $118 = $18; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $119 = (($118) + 1)|0; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $18 = $119; //@line 115 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $120 = $12; //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $121 = ((($120)) + 576|0); //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($14,$14,$121)|0); //@line 135 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $19 = 0; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $122 = $19; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $123 = ($122|0)<(32); //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($123)) {
    break;
   }
   $124 = $16; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $125 = $124<<5; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $126 = $19; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $127 = (($125) + ($126))|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $128 = $15; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $129 = (($128) + ($127)|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $130 = HEAP8[$129>>0]|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $131 = $130&255; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $132 = $19; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $133 = (($14) + ($132)|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $134 = HEAP8[$133>>0]|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $135 = $134&255; //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $136 = ($131|0)!=($135|0); //@line 138 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if ($136) {
    label = 41;
    break L1;
   }
   $137 = $19; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $138 = (($137) + 1)|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $19 = $138; //@line 137 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $139 = $17; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $140 = (($139) + 1)|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $17 = $140; //@line 93 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 if ((label|0) == 41) {
  $19 = 0; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
  while(1) {
   $210 = $19; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $211 = ($210|0)<(32); //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   if (!($211)) {
    break;
   }
   $212 = $19; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $213 = $8; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $214 = (($213) + ($212)|0); //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   HEAP8[$214>>0] = 0; //@line 165 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $215 = $19; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $216 = (($215) + 1)|0; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
   $19 = $216; //@line 164 "c_src/crypto_sign/sphincs256/ref/horst.c"
  }
  $7 = -1; //@line 166 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $217 = $7; //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
  STACKTOP = sp;return ($217|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $18 = 0; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $141 = $18; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $142 = ($141|0)<(32); //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($142)) {
   break;
  }
  $143 = $18; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $144 = $143<<5; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $145 = (($14) + ($144)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $146 = $15; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $147 = $18; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $148 = $147<<1; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $149 = $148<<5; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $150 = (($146) + ($149)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $151 = $12; //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $152 = ((($151)) + 640|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($145,$150,$152)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $153 = $18; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $154 = (($153) + 1)|0; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $154; //@line 143 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $18 = 0; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $155 = $18; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $156 = ($155|0)<(16); //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($156)) {
   break;
  }
  $157 = $18; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $158 = $157<<5; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $159 = (($14) + ($158)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $160 = $18; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $161 = $160<<1; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $162 = $161<<5; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $163 = (($14) + ($162)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $164 = $12; //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $165 = ((($164)) + 704|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($159,$163,$165)|0); //@line 147 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $166 = $18; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $167 = (($166) + 1)|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $167; //@line 146 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $18 = 0; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $168 = $18; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $169 = ($168|0)<(8); //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($169)) {
   break;
  }
  $170 = $18; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $171 = $170<<5; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $172 = (($14) + ($171)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $173 = $18; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $174 = $173<<1; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $175 = $174<<5; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $176 = (($14) + ($175)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $177 = $12; //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $178 = ((($177)) + 768|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($172,$176,$178)|0); //@line 150 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $179 = $18; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $180 = (($179) + 1)|0; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $180; //@line 149 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $18 = 0; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $181 = $18; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $182 = ($181|0)<(4); //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($182)) {
   break;
  }
  $183 = $18; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $184 = $183<<5; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $185 = (($14) + ($184)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $186 = $18; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $187 = $186<<1; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $188 = $187<<5; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $189 = (($14) + ($188)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $190 = $12; //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $191 = ((($190)) + 832|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($185,$189,$191)|0); //@line 153 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $192 = $18; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $193 = (($192) + 1)|0; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $193; //@line 152 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $18 = 0; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
 while(1) {
  $194 = $18; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $195 = ($194|0)<(2); //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  if (!($195)) {
   break;
  }
  $196 = $18; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $197 = $196<<5; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $198 = (($14) + ($197)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $199 = $18; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $200 = $199<<1; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $201 = $200<<5; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $202 = (($14) + ($201)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $203 = $12; //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $204 = ((($203)) + 896|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  (_hash_2n_n_mask($198,$202,$204)|0); //@line 156 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $205 = $18; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $206 = (($205) + 1)|0; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
  $18 = $206; //@line 155 "c_src/crypto_sign/sphincs256/ref/horst.c"
 }
 $207 = $8; //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $208 = $12; //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $209 = ((($208)) + 960|0); //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 (_hash_2n_n_mask($207,$14,$209)|0); //@line 158 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $7 = 0; //@line 160 "c_src/crypto_sign/sphincs256/ref/horst.c"
 $217 = $7; //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
 STACKTOP = sp;return ($217|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/horst.c"
}
function _chacha_permute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0;
 var $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0;
 var $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $6 = $5; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $7 = ($6|0)<(16); //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($7)) {
   break;
  }
  $8 = $5; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $9 = $8<<2; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $10 = (($9) + 3)|0; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $11 = $3; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $12 = (($11) + ($10)|0); //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $13 = HEAP8[$12>>0]|0; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $14 = $13&255; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $15 = $5; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $16 = (($4) + ($15<<2)|0); //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$16>>2] = $14; //@line 30 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $17 = $5; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $18 = (($4) + ($17<<2)|0); //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $19 = HEAP32[$18>>2]|0; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $20 = $19 << 8; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$18>>2] = $20; //@line 31 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $21 = $5; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $22 = $21<<2; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $23 = (($22) + 2)|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $24 = $3; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $25 = (($24) + ($23)|0); //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $26 = HEAP8[$25>>0]|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $27 = $26&255; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $28 = $5; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $29 = (($4) + ($28<<2)|0); //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $30 = HEAP32[$29>>2]|0; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $31 = $30 | $27; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$29>>2] = $31; //@line 32 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $32 = $5; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $33 = (($4) + ($32<<2)|0); //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $34 = HEAP32[$33>>2]|0; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $35 = $34 << 8; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$33>>2] = $35; //@line 33 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $36 = $5; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $37 = $36<<2; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $38 = (($37) + 1)|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $39 = $3; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $40 = (($39) + ($38)|0); //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $41 = HEAP8[$40>>0]|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $42 = $41&255; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $43 = $5; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $44 = (($4) + ($43<<2)|0); //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $45 = HEAP32[$44>>2]|0; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $46 = $45 | $42; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$44>>2] = $46; //@line 34 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $47 = $5; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $48 = (($4) + ($47<<2)|0); //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $49 = HEAP32[$48>>2]|0; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $50 = $49 << 8; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$48>>2] = $50; //@line 35 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $51 = $5; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $52 = $51<<2; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $53 = (($52) + 0)|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $54 = $3; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $55 = (($54) + ($53)|0); //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $56 = HEAP8[$55>>0]|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $57 = $56&255; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $58 = $5; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $59 = (($4) + ($58<<2)|0); //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $60 = HEAP32[$59>>2]|0; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $61 = $60 | $57; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$59>>2] = $61; //@line 36 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $62 = $5; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $63 = (($62) + 1)|0; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $5 = $63; //@line 28 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 $5 = 12; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $64 = $5; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $65 = ($64|0)>(0); //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($65)) {
   break;
  }
  $66 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $67 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $68 = HEAP32[$67>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $69 = (($66) + ($68))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$4>>2] = $69; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $70 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $71 = HEAP32[$70>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $72 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $73 = $71 ^ $72; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $74 = $73 << 16; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $75 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $76 = HEAP32[$75>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $77 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $78 = $76 ^ $77; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $79 = $78 >>> 16; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $80 = $74 | $79; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $81 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$81>>2] = $80; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $82 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $83 = HEAP32[$82>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $84 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $85 = HEAP32[$84>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $86 = (($83) + ($85))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $87 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$87>>2] = $86; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $88 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $89 = HEAP32[$88>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $90 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $91 = HEAP32[$90>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $92 = $89 ^ $91; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $93 = $92 << 12; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $94 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $95 = HEAP32[$94>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $96 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $97 = HEAP32[$96>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $98 = $95 ^ $97; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $99 = $98 >>> 20; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $100 = $93 | $99; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $101 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$101>>2] = $100; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $102 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $103 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $104 = HEAP32[$103>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $105 = (($102) + ($104))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$4>>2] = $105; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $106 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $107 = HEAP32[$106>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $108 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $109 = $107 ^ $108; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $110 = $109 << 8; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $111 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $112 = HEAP32[$111>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $113 = HEAP32[$4>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $114 = $112 ^ $113; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $115 = $114 >>> 24; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $116 = $110 | $115; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $117 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$117>>2] = $116; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $118 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $119 = HEAP32[$118>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $120 = ((($4)) + 48|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $121 = HEAP32[$120>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $122 = (($119) + ($121))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $123 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$123>>2] = $122; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $124 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $125 = HEAP32[$124>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $126 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $127 = HEAP32[$126>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $128 = $125 ^ $127; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $129 = $128 << 7; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $130 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $131 = HEAP32[$130>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $132 = ((($4)) + 32|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $133 = HEAP32[$132>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $134 = $131 ^ $133; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $135 = $134 >>> 25; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $136 = $129 | $135; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $137 = ((($4)) + 16|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$137>>2] = $136; //@line 41 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $138 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $139 = HEAP32[$138>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $140 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $141 = HEAP32[$140>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $142 = (($139) + ($141))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $143 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$143>>2] = $142; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $144 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $145 = HEAP32[$144>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $146 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $147 = HEAP32[$146>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $148 = $145 ^ $147; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $149 = $148 << 16; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $150 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $151 = HEAP32[$150>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $152 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $153 = HEAP32[$152>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $154 = $151 ^ $153; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $155 = $154 >>> 16; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $156 = $149 | $155; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $157 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$157>>2] = $156; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $158 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $159 = HEAP32[$158>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $160 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $161 = HEAP32[$160>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $162 = (($159) + ($161))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $163 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$163>>2] = $162; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $164 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $165 = HEAP32[$164>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $166 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $167 = HEAP32[$166>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $168 = $165 ^ $167; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $169 = $168 << 12; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $170 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $171 = HEAP32[$170>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $172 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $173 = HEAP32[$172>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $174 = $171 ^ $173; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $175 = $174 >>> 20; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $176 = $169 | $175; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $177 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$177>>2] = $176; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $178 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $179 = HEAP32[$178>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $180 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $181 = HEAP32[$180>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $182 = (($179) + ($181))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $183 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$183>>2] = $182; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $184 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $185 = HEAP32[$184>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $186 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $187 = HEAP32[$186>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $188 = $185 ^ $187; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $189 = $188 << 8; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $190 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $191 = HEAP32[$190>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $192 = ((($4)) + 4|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $193 = HEAP32[$192>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $194 = $191 ^ $193; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $195 = $194 >>> 24; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $196 = $189 | $195; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $197 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$197>>2] = $196; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $198 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $199 = HEAP32[$198>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $200 = ((($4)) + 52|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $201 = HEAP32[$200>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $202 = (($199) + ($201))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $203 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$203>>2] = $202; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $204 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $205 = HEAP32[$204>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $206 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $207 = HEAP32[$206>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $208 = $205 ^ $207; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $209 = $208 << 7; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $210 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $211 = HEAP32[$210>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $212 = ((($4)) + 36|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $213 = HEAP32[$212>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $214 = $211 ^ $213; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $215 = $214 >>> 25; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $216 = $209 | $215; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $217 = ((($4)) + 20|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$217>>2] = $216; //@line 42 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $218 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $219 = HEAP32[$218>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $220 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $221 = HEAP32[$220>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $222 = (($219) + ($221))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $223 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$223>>2] = $222; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $224 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $225 = HEAP32[$224>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $226 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $227 = HEAP32[$226>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $228 = $225 ^ $227; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $229 = $228 << 16; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $230 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $231 = HEAP32[$230>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $232 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $233 = HEAP32[$232>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $234 = $231 ^ $233; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $235 = $234 >>> 16; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $236 = $229 | $235; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $237 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$237>>2] = $236; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $238 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $239 = HEAP32[$238>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $240 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $241 = HEAP32[$240>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $242 = (($239) + ($241))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $243 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$243>>2] = $242; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $244 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $245 = HEAP32[$244>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $246 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $247 = HEAP32[$246>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $248 = $245 ^ $247; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $249 = $248 << 12; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $250 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $251 = HEAP32[$250>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $252 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $253 = HEAP32[$252>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $254 = $251 ^ $253; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $255 = $254 >>> 20; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $256 = $249 | $255; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $257 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$257>>2] = $256; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $258 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $259 = HEAP32[$258>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $260 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $261 = HEAP32[$260>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $262 = (($259) + ($261))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $263 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$263>>2] = $262; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $264 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $265 = HEAP32[$264>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $266 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $267 = HEAP32[$266>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $268 = $265 ^ $267; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $269 = $268 << 8; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $270 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $271 = HEAP32[$270>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $272 = ((($4)) + 8|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $273 = HEAP32[$272>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $274 = $271 ^ $273; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $275 = $274 >>> 24; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $276 = $269 | $275; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $277 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$277>>2] = $276; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $278 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $279 = HEAP32[$278>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $280 = ((($4)) + 56|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $281 = HEAP32[$280>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $282 = (($279) + ($281))|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $283 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$283>>2] = $282; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $284 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $285 = HEAP32[$284>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $286 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $287 = HEAP32[$286>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $288 = $285 ^ $287; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $289 = $288 << 7; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $290 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $291 = HEAP32[$290>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $292 = ((($4)) + 40|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $293 = HEAP32[$292>>2]|0; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $294 = $291 ^ $293; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $295 = $294 >>> 25; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $296 = $289 | $295; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $297 = ((($4)) + 24|0); //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$297>>2] = $296; //@line 43 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $298 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $299 = HEAP32[$298>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $300 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $301 = HEAP32[$300>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $302 = (($299) + ($301))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $303 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$303>>2] = $302; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $304 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $305 = HEAP32[$304>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $306 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $307 = HEAP32[$306>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $308 = $305 ^ $307; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $309 = $308 << 16; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $310 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $311 = HEAP32[$310>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $312 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $313 = HEAP32[$312>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $314 = $311 ^ $313; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $315 = $314 >>> 16; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $316 = $309 | $315; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $317 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$317>>2] = $316; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $318 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $319 = HEAP32[$318>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $320 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $321 = HEAP32[$320>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $322 = (($319) + ($321))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $323 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$323>>2] = $322; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $324 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $325 = HEAP32[$324>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $326 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $327 = HEAP32[$326>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $328 = $325 ^ $327; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $329 = $328 << 12; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $330 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $331 = HEAP32[$330>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $332 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $333 = HEAP32[$332>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $334 = $331 ^ $333; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $335 = $334 >>> 20; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $336 = $329 | $335; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $337 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$337>>2] = $336; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $338 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $339 = HEAP32[$338>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $340 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $341 = HEAP32[$340>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $342 = (($339) + ($341))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $343 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$343>>2] = $342; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $344 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $345 = HEAP32[$344>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $346 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $347 = HEAP32[$346>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $348 = $345 ^ $347; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $349 = $348 << 8; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $350 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $351 = HEAP32[$350>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $352 = ((($4)) + 12|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $353 = HEAP32[$352>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $354 = $351 ^ $353; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $355 = $354 >>> 24; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $356 = $349 | $355; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $357 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$357>>2] = $356; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $358 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $359 = HEAP32[$358>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $360 = ((($4)) + 60|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $361 = HEAP32[$360>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $362 = (($359) + ($361))|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $363 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$363>>2] = $362; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $364 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $365 = HEAP32[$364>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $366 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $367 = HEAP32[$366>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $368 = $365 ^ $367; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $369 = $368 << 7; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $370 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $371 = HEAP32[$370>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $372 = ((($4)) + 44|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $373 = HEAP32[$372>>2]|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $374 = $371 ^ $373; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $375 = $374 >>> 25; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $376 = $369 | $375; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $377 = ((($4)) + 28|0); //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$377>>2] = $376; //@line 44 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $378 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $379 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $380 = HEAP32[$379>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $381 = (($378) + ($380))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$4>>2] = $381; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $382 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $383 = HEAP32[$382>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $384 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $385 = $383 ^ $384; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $386 = $385 << 16; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $387 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $388 = HEAP32[$387>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $389 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $390 = $388 ^ $389; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $391 = $390 >>> 16; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $392 = $386 | $391; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $393 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$393>>2] = $392; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $394 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $395 = HEAP32[$394>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $396 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $397 = HEAP32[$396>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $398 = (($395) + ($397))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $399 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$399>>2] = $398; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $400 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $401 = HEAP32[$400>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $402 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $403 = HEAP32[$402>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $404 = $401 ^ $403; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $405 = $404 << 12; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $406 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $407 = HEAP32[$406>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $408 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $409 = HEAP32[$408>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $410 = $407 ^ $409; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $411 = $410 >>> 20; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $412 = $405 | $411; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $413 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$413>>2] = $412; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $414 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $415 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $416 = HEAP32[$415>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $417 = (($414) + ($416))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$4>>2] = $417; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $418 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $419 = HEAP32[$418>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $420 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $421 = $419 ^ $420; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $422 = $421 << 8; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $423 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $424 = HEAP32[$423>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $425 = HEAP32[$4>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $426 = $424 ^ $425; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $427 = $426 >>> 24; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $428 = $422 | $427; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $429 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$429>>2] = $428; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $430 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $431 = HEAP32[$430>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $432 = ((($4)) + 60|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $433 = HEAP32[$432>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $434 = (($431) + ($433))|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $435 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$435>>2] = $434; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $436 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $437 = HEAP32[$436>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $438 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $439 = HEAP32[$438>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $440 = $437 ^ $439; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $441 = $440 << 7; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $442 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $443 = HEAP32[$442>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $444 = ((($4)) + 40|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $445 = HEAP32[$444>>2]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $446 = $443 ^ $445; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $447 = $446 >>> 25; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $448 = $441 | $447; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $449 = ((($4)) + 20|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$449>>2] = $448; //@line 45 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $450 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $451 = HEAP32[$450>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $452 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $453 = HEAP32[$452>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $454 = (($451) + ($453))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $455 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$455>>2] = $454; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $456 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $457 = HEAP32[$456>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $458 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $459 = HEAP32[$458>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $460 = $457 ^ $459; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $461 = $460 << 16; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $462 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $463 = HEAP32[$462>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $464 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $465 = HEAP32[$464>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $466 = $463 ^ $465; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $467 = $466 >>> 16; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $468 = $461 | $467; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $469 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$469>>2] = $468; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $470 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $471 = HEAP32[$470>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $472 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $473 = HEAP32[$472>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $474 = (($471) + ($473))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $475 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$475>>2] = $474; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $476 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $477 = HEAP32[$476>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $478 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $479 = HEAP32[$478>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $480 = $477 ^ $479; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $481 = $480 << 12; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $482 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $483 = HEAP32[$482>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $484 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $485 = HEAP32[$484>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $486 = $483 ^ $485; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $487 = $486 >>> 20; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $488 = $481 | $487; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $489 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$489>>2] = $488; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $490 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $491 = HEAP32[$490>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $492 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $493 = HEAP32[$492>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $494 = (($491) + ($493))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $495 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$495>>2] = $494; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $496 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $497 = HEAP32[$496>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $498 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $499 = HEAP32[$498>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $500 = $497 ^ $499; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $501 = $500 << 8; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $502 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $503 = HEAP32[$502>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $504 = ((($4)) + 4|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $505 = HEAP32[$504>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $506 = $503 ^ $505; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $507 = $506 >>> 24; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $508 = $501 | $507; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $509 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$509>>2] = $508; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $510 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $511 = HEAP32[$510>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $512 = ((($4)) + 48|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $513 = HEAP32[$512>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $514 = (($511) + ($513))|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $515 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$515>>2] = $514; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $516 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $517 = HEAP32[$516>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $518 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $519 = HEAP32[$518>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $520 = $517 ^ $519; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $521 = $520 << 7; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $522 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $523 = HEAP32[$522>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $524 = ((($4)) + 44|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $525 = HEAP32[$524>>2]|0; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $526 = $523 ^ $525; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $527 = $526 >>> 25; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $528 = $521 | $527; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $529 = ((($4)) + 24|0); //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$529>>2] = $528; //@line 46 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $530 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $531 = HEAP32[$530>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $532 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $533 = HEAP32[$532>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $534 = (($531) + ($533))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $535 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$535>>2] = $534; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $536 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $537 = HEAP32[$536>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $538 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $539 = HEAP32[$538>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $540 = $537 ^ $539; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $541 = $540 << 16; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $542 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $543 = HEAP32[$542>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $544 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $545 = HEAP32[$544>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $546 = $543 ^ $545; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $547 = $546 >>> 16; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $548 = $541 | $547; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $549 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$549>>2] = $548; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $550 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $551 = HEAP32[$550>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $552 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $553 = HEAP32[$552>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $554 = (($551) + ($553))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $555 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$555>>2] = $554; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $556 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $557 = HEAP32[$556>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $558 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $559 = HEAP32[$558>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $560 = $557 ^ $559; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $561 = $560 << 12; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $562 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $563 = HEAP32[$562>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $564 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $565 = HEAP32[$564>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $566 = $563 ^ $565; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $567 = $566 >>> 20; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $568 = $561 | $567; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $569 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$569>>2] = $568; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $570 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $571 = HEAP32[$570>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $572 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $573 = HEAP32[$572>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $574 = (($571) + ($573))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $575 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$575>>2] = $574; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $576 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $577 = HEAP32[$576>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $578 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $579 = HEAP32[$578>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $580 = $577 ^ $579; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $581 = $580 << 8; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $582 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $583 = HEAP32[$582>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $584 = ((($4)) + 8|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $585 = HEAP32[$584>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $586 = $583 ^ $585; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $587 = $586 >>> 24; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $588 = $581 | $587; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $589 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$589>>2] = $588; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $590 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $591 = HEAP32[$590>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $592 = ((($4)) + 52|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $593 = HEAP32[$592>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $594 = (($591) + ($593))|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $595 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$595>>2] = $594; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $596 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $597 = HEAP32[$596>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $598 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $599 = HEAP32[$598>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $600 = $597 ^ $599; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $601 = $600 << 7; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $602 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $603 = HEAP32[$602>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $604 = ((($4)) + 32|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $605 = HEAP32[$604>>2]|0; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $606 = $603 ^ $605; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $607 = $606 >>> 25; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $608 = $601 | $607; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $609 = ((($4)) + 28|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$609>>2] = $608; //@line 47 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $610 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $611 = HEAP32[$610>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $612 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $613 = HEAP32[$612>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $614 = (($611) + ($613))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $615 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$615>>2] = $614; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $616 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $617 = HEAP32[$616>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $618 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $619 = HEAP32[$618>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $620 = $617 ^ $619; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $621 = $620 << 16; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $622 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $623 = HEAP32[$622>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $624 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $625 = HEAP32[$624>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $626 = $623 ^ $625; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $627 = $626 >>> 16; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $628 = $621 | $627; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $629 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$629>>2] = $628; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $630 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $631 = HEAP32[$630>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $632 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $633 = HEAP32[$632>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $634 = (($631) + ($633))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $635 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$635>>2] = $634; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $636 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $637 = HEAP32[$636>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $638 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $639 = HEAP32[$638>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $640 = $637 ^ $639; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $641 = $640 << 12; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $642 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $643 = HEAP32[$642>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $644 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $645 = HEAP32[$644>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $646 = $643 ^ $645; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $647 = $646 >>> 20; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $648 = $641 | $647; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $649 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$649>>2] = $648; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $650 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $651 = HEAP32[$650>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $652 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $653 = HEAP32[$652>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $654 = (($651) + ($653))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $655 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$655>>2] = $654; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $656 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $657 = HEAP32[$656>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $658 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $659 = HEAP32[$658>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $660 = $657 ^ $659; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $661 = $660 << 8; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $662 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $663 = HEAP32[$662>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $664 = ((($4)) + 12|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $665 = HEAP32[$664>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $666 = $663 ^ $665; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $667 = $666 >>> 24; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $668 = $661 | $667; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $669 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$669>>2] = $668; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $670 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $671 = HEAP32[$670>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $672 = ((($4)) + 56|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $673 = HEAP32[$672>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $674 = (($671) + ($673))|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $675 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$675>>2] = $674; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $676 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $677 = HEAP32[$676>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $678 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $679 = HEAP32[$678>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $680 = $677 ^ $679; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $681 = $680 << 7; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $682 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $683 = HEAP32[$682>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $684 = ((($4)) + 36|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $685 = HEAP32[$684>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $686 = $683 ^ $685; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $687 = $686 >>> 25; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $688 = $681 | $687; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $689 = ((($4)) + 16|0); //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP32[$689>>2] = $688; //@line 48 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $690 = $5; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $691 = (($690) - 2)|0; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $5 = $691; //@line 39 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 $5 = 0; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
 while(1) {
  $692 = $5; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $693 = ($692|0)<(16); //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  if (!($693)) {
   break;
  }
  $694 = $5; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $695 = (($4) + ($694<<2)|0); //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $696 = HEAP32[$695>>2]|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $697 = $696 & 255; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $698 = $697&255; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $699 = $5; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $700 = $699<<2; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $701 = $2; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $702 = (($701) + ($700)|0); //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$702>>0] = $698; //@line 54 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $703 = $5; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $704 = (($4) + ($703<<2)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $705 = HEAP32[$704>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $706 = $705 >>> 8; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $707 = $706 & 255; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $708 = $707&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $709 = $5; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $710 = $709<<2; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $711 = (($710) + 1)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $712 = $2; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $713 = (($712) + ($711)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$713>>0] = $708; //@line 55 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $714 = $5; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $715 = (($4) + ($714<<2)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $716 = HEAP32[$715>>2]|0; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $717 = $716 >>> 16; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $718 = $717 & 255; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $719 = $718&255; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $720 = $5; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $721 = $720<<2; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $722 = (($721) + 2)|0; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $723 = $2; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $724 = (($723) + ($722)|0); //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$724>>0] = $719; //@line 56 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $725 = $5; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $726 = (($4) + ($725<<2)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $727 = HEAP32[$726>>2]|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $728 = $727 >>> 24; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $729 = $728 & 255; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $730 = $729&255; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $731 = $5; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $732 = $731<<2; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $733 = (($732) + 3)|0; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $734 = $2; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $735 = (($734) + ($733)|0); //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  HEAP8[$735>>0] = $730; //@line 57 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $736 = $5; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $737 = (($736) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
  $5 = $737; //@line 52 "c_src/crypto_sign/sphincs256/ref/permute.c"
 }
 STACKTOP = sp;return; //@line 59 "c_src/crypto_sign/sphincs256/ref/permute.c"
}
function _prg($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 $4 = $0;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $6 = $3;
 $11 = $4; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $12 = $5; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $13 = $12; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $14 = HEAP32[$13>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $15 = (($12) + 4)|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $16 = $15; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $17 = HEAP32[$16>>2]|0; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 $18 = $6; //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 (_crypto_stream_chacha12_ref($11,$14,$17,2376,$18)|0); //@line 13 "c_src/crypto_sign/sphincs256/ref/prg.c"
 STACKTOP = sp;return; //@line 14 "c_src/crypto_sign/sphincs256/ref/prg.c"
}
function _crypto_sign_sphincs_keypair($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 223 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _randombytes($5,1088,0); //@line 223 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $6 = $2; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = $3; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = ((($7)) + 32|0); //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($6|0),($8|0),1024)|0; //@line 224 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$4>>2] = 11; //@line 227 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = ((($4)) + 8|0); //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $10 = $9; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = $10; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$11>>2] = 0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = (($10) + 4)|0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = $12; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$13>>2] = 0; //@line 228 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = ((($4)) + 16|0); //@line 229 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$14>>2] = 0; //@line 229 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = $2; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $16 = ((($15)) + 1024|0); //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $3; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $18 = $2; //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _treehash($16,5,$17,$4,$18); //@line 232 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return 0; //@line 233 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _treehash($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$alloca_mul = 0, $$alloca_mul12 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $10 = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $16 = $8; //@line 100 "c_src/crypto_sign/sphincs256/ref/sign.c"
 ;HEAP32[$10>>2]=HEAP32[$16>>2]|0;HEAP32[$10+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$10+8>>2]=HEAP32[$16+8>>2]|0;HEAP32[$10+12>>2]=HEAP32[$16+12>>2]|0;HEAP32[$10+16>>2]=HEAP32[$16+16>>2]|0;HEAP32[$10+20>>2]=HEAP32[$16+20>>2]|0; //@line 100 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $6; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $18 = (($17) + 1)|0; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $19 = $18<<5; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $20 = (_llvm_stacksave()|0); //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = $20; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $$alloca_mul = $19; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $21 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;; //@line 102 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = $6; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $23 = (($22) + 1)|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $$alloca_mul12 = $23<<2; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $24 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul12)|0)+15)&-16)|0;; //@line 103 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = 0; //@line 104 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $15 = 0; //@line 105 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $25 = ((($10)) + 16|0); //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $26 = HEAP32[$25>>2]|0; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $27 = $6; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $28 = 1 << $27; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $29 = (($26) + ($28))|0; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = $29; //@line 107 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $30 = ((($10)) + 16|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = HEAP32[$30>>2]|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = $11; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = ($31|0)<($32|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($33)) {
   break;
  }
  $34 = $14; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = $34<<5; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = (($21) + ($35)|0); //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $37 = $9; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = $7; //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _gen_leaf_wots($36,$37,$38,$10); //@line 111 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = $14; //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = (($24) + ($39<<2)|0); //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$40>>2] = 0; //@line 112 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = $14; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = (($41) + 1)|0; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $14 = $42; //@line 113 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $43 = $14; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $44 = ($43>>>0)>(1); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($44)) {
    break;
   }
   $45 = $14; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $46 = (($45) - 1)|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $47 = (($24) + ($46<<2)|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $48 = HEAP32[$47>>2]|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $49 = $14; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $50 = (($49) - 2)|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $51 = (($24) + ($50<<2)|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $52 = HEAP32[$51>>2]|0; //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $53 = ($48|0)==($52|0); //@line 114 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($53)) {
    break;
   }
   $54 = $14; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $55 = (($54) - 1)|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $56 = (($24) + ($55<<2)|0); //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $57 = HEAP32[$56>>2]|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $58 = (($57) + 7)|0; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $59 = $58<<1; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $60 = $59<<5; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $15 = $60; //@line 117 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $61 = $14; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $62 = (($61) - 2)|0; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $63 = $62<<5; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $64 = (($21) + ($63)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $65 = $14; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $66 = (($65) - 2)|0; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $67 = $66<<5; //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $68 = (($21) + ($67)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $69 = $9; //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $70 = $15; //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $71 = (($69) + ($70)|0); //@line 119 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($64,$68,$71)|0); //@line 118 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $72 = $14; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $73 = (($72) - 2)|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $74 = (($24) + ($73<<2)|0); //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $75 = HEAP32[$74>>2]|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $76 = (($75) + 1)|0; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$74>>2] = $76; //@line 120 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $77 = $14; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $78 = (($77) + -1)|0; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $14 = $78; //@line 121 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $79 = ((($10)) + 16|0); //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = HEAP32[$79>>2]|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = (($80) + 1)|0; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$79>>2] = $81; //@line 109 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $12 = 0; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $82 = $12; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = ($82|0)<(32); //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($83)) {
   break;
  }
  $84 = $12; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = (($21) + ($84)|0); //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $86 = HEAP8[$85>>0]|0; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $87 = $12; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $88 = $5; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = (($88) + ($87)|0); //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$89>>0] = $86; //@line 125 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = $12; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $91 = (($90) + 1)|0; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = $91; //@line 124 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $92 = $13; //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _llvm_stackrestore(($92|0)); //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 126 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _gen_leaf_wots($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2192|0;
 $8 = sp + 2160|0;
 $9 = sp + 16|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = $6; //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $11 = $7; //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _get_seed($8,$10,$11); //@line 90 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = $5; //@line 91 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _wots_pkgen($9,$8,$12); //@line 91 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = $4; //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $14 = $5; //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _l_tree($13,$9,$14); //@line 93 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 94 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _get_seed($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $6 = sp + 24|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = 0; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $9 = $8; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $10 = ($9|0)<(32); //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($10)) {
   break;
  }
  $11 = $8; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = $4; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $13 = (($12) + ($11)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $14 = HEAP8[$13>>0]|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $15 = $8; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $16 = (($6) + ($15)|0); //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$16>>0] = $14; //@line 45 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = $8; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $18 = (($17) + 1)|0; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $8 = $18; //@line 44 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $19 = $5; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $20 = HEAP32[$19>>2]|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $21 = ($20|0)<(0); //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = $21 << 31 >> 31; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $23 = $7; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $24 = $23; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$24>>2] = $20; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $25 = (($23) + 4)|0; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $26 = $25; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$26>>2] = $22; //@line 48 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $27 = $5; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $28 = ((($27)) + 8|0); //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $29 = $28; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $30 = $29; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $31 = HEAP32[$30>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $32 = (($29) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $33 = $32; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $34 = HEAP32[$33>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $35 = (_bitshift64Shl(($31|0),($34|0),4)|0); //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $36 = tempRet0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $37 = $7; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $38 = $37; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $39 = HEAP32[$38>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $40 = (($37) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $41 = $40; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $42 = HEAP32[$41>>2]|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $43 = $39 | $35; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $44 = $42 | $36; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $45 = $7; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $46 = $45; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$46>>2] = $43; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $47 = (($45) + 4)|0; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $48 = $47; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$48>>2] = $44; //@line 50 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $49 = $5; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $50 = ((($49)) + 16|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $51 = HEAP32[$50>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $52 = ($51|0)<(0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $53 = $52 << 31 >> 31; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $54 = (_bitshift64Shl(($51|0),($53|0),59)|0); //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $55 = tempRet0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $56 = $7; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $57 = $56; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $58 = HEAP32[$57>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $59 = (($56) + 4)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $60 = $59; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $61 = HEAP32[$60>>2]|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $62 = $58 | $54; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $63 = $61 | $55; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $64 = $7; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $65 = $64; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$65>>2] = $62; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $66 = (($64) + 4)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $67 = $66; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$67>>2] = $63; //@line 52 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = 0; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $68 = $8; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = ($68|0)<(8); //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($69)) {
   break;
  }
  $70 = $7; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = $70; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $72 = HEAP32[$71>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $73 = (($70) + 4)|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $74 = $73; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $75 = HEAP32[$74>>2]|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = $8; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = $76<<3; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = (_bitshift64Lshr(($72|0),($75|0),($77|0))|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = tempRet0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = $78 & 255; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = $80&255; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = $8; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = (32 + ($82))|0; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = (($6) + ($83)|0); //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$84>>0] = $81; //@line 55 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = $8; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $86 = (($85) + 1)|0; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $8 = $86; //@line 54 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $87 = $3; //@line 60 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_varlen_hash($87,$6,40,0)|0); //@line 60 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 61 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _l_tree($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 67; //@line 66 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $8 = 0; //@line 67 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $7 = 0; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $9 = $7; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $10 = ($9|0)<(7); //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($10)) {
   break;
  }
  $8 = 0; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $11 = $8; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $12 = $6; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $13 = $12 >> 1; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $14 = ($11|0)<($13|0); //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($14)) {
    break;
   }
   $15 = $4; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $16 = $8; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $17 = $16<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $18 = (($15) + ($17)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $19 = $4; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $20 = $8; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $21 = $20<<1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $22 = $21<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $23 = (($19) + ($22)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $24 = $5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $25 = $7; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $26 = $25<<1; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $27 = $26<<5; //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $28 = (($24) + ($27)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($18,$23,$28)|0); //@line 71 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $29 = $8; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $30 = (($29) + 1)|0; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $8 = $30; //@line 70 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $31 = $6; //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = $31 & 1; //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = ($32|0)!=(0); //@line 73 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if ($33) {
   $34 = $4; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $35 = $6; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $36 = $35 >> 1; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $37 = $36<<5; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $38 = (($34) + ($37)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $39 = $4; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $40 = $6; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $41 = (($40) - 1)|0; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $42 = $41<<5; //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $43 = (($39) + ($42)|0); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   dest=$38; src=$43; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 75 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $44 = $6; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $45 = $44 >> 1; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $46 = (($45) + 1)|0; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $6 = $46; //@line 76 "c_src/crypto_sign/sphincs256/ref/sign.c"
  } else {
   $47 = $6; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $48 = $47 >> 1; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $6 = $48; //@line 79 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $49 = $7; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $50 = (($49) + 1)|0; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $7 = $50; //@line 68 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $51 = $3; //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $52 = $4; //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$51; src=$52; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 81 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 82 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _crypto_sign_sphincs($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2448|0;
 $10 = sp + 112|0;
 $11 = sp + 104|0;
 $12 = sp + 96|0;
 $13 = sp + 2408|0;
 $14 = sp + 2344|0;
 $15 = sp + 32|0;
 $16 = sp + 24|0;
 $17 = sp + 2312|0;
 $18 = sp + 2280|0;
 $19 = sp + 1256|0;
 $21 = sp + 168|0;
 $23 = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $24 = $11; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $25 = $24; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$25>>2] = 0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $26 = (($24) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $27 = $26; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$27>>2] = 0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $28 = $11; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = $28; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = HEAP32[$29>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = (($28) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = $31; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $33 = HEAP32[$32>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $34 = ($33>>>0)<(0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = ($30>>>0)<(1088); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = ($33|0)==(0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $37 = $36 & $35; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = $34 | $37; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($38)) {
   break;
  }
  $39 = $11; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = $39; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = HEAP32[$40>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = (($39) + 4)|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = $42; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = HEAP32[$43>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = $9; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = (($45) + ($41)|0); //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = HEAP8[$46>>0]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $48 = $11; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $49 = $48; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $50 = HEAP32[$49>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $51 = (($48) + 4)|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $52 = $51; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $53 = HEAP32[$52>>2]|0; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $54 = (($21) + ($50)|0); //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$54>>0] = $47; //@line 253 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $55 = $11; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $56 = $55; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $57 = HEAP32[$56>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $58 = (($55) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $59 = $58; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = HEAP32[$59>>2]|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = (_i64Add(($57|0),($60|0),1,0)|0); //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $62 = tempRet0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = $11; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = $63; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$64>>2] = $61; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = (($63) + 4)|0; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = $65; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$66>>2] = $62; //@line 252 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $67 = $5; //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $68 = ((($67)) + 41000|0); //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $69 = ((($68)) + -32|0); //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = $69; //@line 258 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $70 = $8; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $71 = $11; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $72 = $71; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$72>>2] = $70; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $73 = (($71) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $74 = $73; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$74>>2] = 0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $75 = $11; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $76 = $75; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = HEAP32[$76>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = (($75) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = $78; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = HEAP32[$79>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = ($80>>>0)>(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = ($77>>>0)>(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = ($80|0)==(0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = $83 & $82; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = $81 | $84; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($85)) {
   break;
  }
  $86 = $11; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $87 = $86; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $88 = HEAP32[$87>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = (($86) + 4)|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = $89; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $91 = HEAP32[$90>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $92 = (_i64Subtract(($88|0),($91|0),1,0)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $93 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $94 = $7; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $95 = (($94) + ($92)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = HEAP8[$95>>0]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = $11; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = $97; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $99 = HEAP32[$98>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $100 = (($97) + 4)|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $101 = $100; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $102 = HEAP32[$101>>2]|0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $103 = (_i64Add(32,0,($99|0),($102|0))|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $104 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $105 = (_i64Subtract(($103|0),($104|0),1,0)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $106 = tempRet0; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $107 = $22; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $108 = (($107) + ($105)|0); //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$108>>0] = $96; //@line 262 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $109 = $11; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $110 = $109; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $111 = HEAP32[$110>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $112 = (($109) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $113 = $112; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $114 = HEAP32[$113>>2]|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $115 = (_i64Add(($111|0),($114|0),-1,-1)|0); //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $116 = tempRet0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $117 = $11; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $118 = $117; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$118>>2] = $115; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $119 = (($117) + 4)|0; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $120 = $119; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$120>>2] = $116; //@line 261 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $121 = $22; //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $122 = ((($21)) + 1088|0); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $123 = ((($122)) + -32|0); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$121; src=$123; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 264 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $124 = $22; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $125 = $8; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $126 = (32 + ($125))|0; //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_crypto_hash_blake512_ref($15,$124,$126,0)|0); //@line 266 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $127 = $22; //@line 269 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_zerobytes($127,32,0)|0); //@line 269 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $128 = $15; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $129 = $128; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $130 = HEAP32[$129>>2]|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $131 = (($128) + 4)|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $132 = $131; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $133 = HEAP32[$132>>2]|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $134 = $133 & 268435455; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $135 = $12; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $136 = $135; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$136>>2] = $130; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $137 = (($135) + 4)|0; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $138 = $137; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$138>>2] = $134; //@line 275 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $139 = ((($15)) + 16|0); //@line 280 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$13; src=$139; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 280 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $140 = $5; //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $141 = ((($140)) + 41000|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $142 = ((($141)) + -32|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $143 = ((($142)) + -1056|0); //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = $143; //@line 283 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $144 = $22; //@line 286 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$144; src=$13; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 286 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$23>>2] = 11; //@line 290 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $145 = ((($23)) + 8|0); //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $146 = $145; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $147 = $146; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$147>>2] = 0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $148 = (($146) + 4)|0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $149 = $148; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$149>>2] = 0; //@line 291 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $150 = ((($23)) + 16|0); //@line 292 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$150>>2] = 0; //@line 292 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $151 = $22; //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $152 = ((($151)) + 32|0); //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $20 = $152; //@line 294 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $153 = $20; //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $154 = ((($21)) + 32|0); //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($153|0),($154|0),1024)|0; //@line 296 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $155 = $20; //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $156 = ((($155)) + 1024|0); //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $157 = $20; //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _treehash($156,5,$21,$23,$157); //@line 298 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $158 = $22; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $159 = $8; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $160 = (($159) + 32)|0; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $161 = (($160) + 1056)|0; //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_msg_hash($14,$158,$161,0)|0); //@line 302 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$10>>2] = 12; //@line 305 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $162 = $12; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $163 = $162; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $164 = HEAP32[$163>>2]|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $165 = (($162) + 4)|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $166 = $165; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $167 = HEAP32[$166>>2]|0; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $168 = $164 & 31; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $169 = ((($10)) + 16|0); //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$169>>2] = $168; //@line 306 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $170 = $12; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $171 = $170; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $172 = HEAP32[$171>>2]|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $173 = (($170) + 4)|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $174 = $173; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $175 = HEAP32[$174>>2]|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $176 = (_bitshift64Lshr(($172|0),($175|0),5)|0); //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $177 = tempRet0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $178 = ((($10)) + 8|0); //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $179 = $178; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $180 = $179; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$180>>2] = $176; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $181 = (($179) + 4)|0; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $182 = $181; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$182>>2] = $177; //@line 307 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $183 = $6; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $184 = $183; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $185 = $184; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$185>>2] = 0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $186 = (($184) + 4)|0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $187 = $186; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$187>>2] = 0; //@line 309 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $188 = $11; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $189 = $188; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$189>>2] = 0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $190 = (($188) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $191 = $190; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$191>>2] = 0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $192 = $11; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $193 = $192; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $194 = HEAP32[$193>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $195 = (($192) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $196 = $195; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $197 = HEAP32[$196>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $198 = ($197>>>0)<(0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $199 = ($194>>>0)<(32); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $200 = ($197|0)==(0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $201 = $200 & $199; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $202 = $198 | $201; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($202)) {
   break;
  }
  $203 = $11; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $204 = $203; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $205 = HEAP32[$204>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $206 = (($203) + 4)|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $207 = $206; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $208 = HEAP32[$207>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $209 = (($13) + ($205)|0); //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $210 = HEAP8[$209>>0]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $211 = $11; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $212 = $211; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $213 = HEAP32[$212>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $214 = (($211) + 4)|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $215 = $214; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $216 = HEAP32[$215>>2]|0; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $217 = $5; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $218 = (($217) + ($213)|0); //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$218>>0] = $210; //@line 312 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $219 = $11; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $220 = $219; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $221 = HEAP32[$220>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $222 = (($219) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $223 = $222; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $224 = HEAP32[$223>>2]|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $225 = (_i64Add(($221|0),($224|0),1,0)|0); //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $226 = tempRet0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $227 = $11; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $228 = $227; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$228>>2] = $225; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $229 = (($227) + 4)|0; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $230 = $229; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$230>>2] = $226; //@line 311 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $231 = $5; //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $232 = ((($231)) + 32|0); //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = $232; //@line 314 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $233 = $6; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $234 = $233; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $235 = $234; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $236 = HEAP32[$235>>2]|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $237 = (($234) + 4)|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $238 = $237; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $239 = HEAP32[$238>>2]|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $240 = (_i64Add(($236|0),($239|0),32,0)|0); //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $241 = tempRet0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $242 = $233; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $243 = $242; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$243>>2] = $240; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $244 = (($242) + 4)|0; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $245 = $244; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$245>>2] = $241; //@line 315 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $246 = ((($21)) + 32|0); //@line 317 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($19|0),($246|0),1024)|0; //@line 317 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $247 = $11; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $248 = $247; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$248>>2] = 0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $249 = (($247) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $250 = $249; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$250>>2] = 0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $251 = $11; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $252 = $251; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $253 = HEAP32[$252>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $254 = (($251) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $255 = $254; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $256 = HEAP32[$255>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $257 = ($256>>>0)<(0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $258 = ($253>>>0)<(8); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $259 = ($256|0)==(0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $260 = $259 & $258; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $261 = $257 | $260; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($261)) {
   break;
  }
  $262 = $12; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $263 = $262; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $264 = HEAP32[$263>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $265 = (($262) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $266 = $265; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $267 = HEAP32[$266>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $268 = $11; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $269 = $268; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $270 = HEAP32[$269>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $271 = (($268) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $272 = $271; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $273 = HEAP32[$272>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $274 = (___muldi3(8,0,($270|0),($273|0))|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $275 = tempRet0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $276 = (_bitshift64Lshr(($264|0),($267|0),($274|0))|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $277 = tempRet0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $278 = $276 & 255; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $279 = $278&255; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $280 = $11; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $281 = $280; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $282 = HEAP32[$281>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $283 = (($280) + 4)|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $284 = $283; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $285 = HEAP32[$284>>2]|0; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $286 = $5; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $287 = (($286) + ($282)|0); //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$287>>0] = $279; //@line 319 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $288 = $11; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $289 = $288; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $290 = HEAP32[$289>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $291 = (($288) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $292 = $291; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $293 = HEAP32[$292>>2]|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $294 = (_i64Add(($290|0),($293|0),1,0)|0); //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $295 = tempRet0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $296 = $11; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $297 = $296; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$297>>2] = $294; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $298 = (($296) + 4)|0; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $299 = $298; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$299>>2] = $295; //@line 318 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $300 = $5; //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $301 = ((($300)) + 8|0); //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = $301; //@line 321 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $302 = $6; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $303 = $302; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $304 = $303; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $305 = HEAP32[$304>>2]|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $306 = (($303) + 4)|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $307 = $306; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $308 = HEAP32[$307>>2]|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $309 = (_i64Add(($305|0),($308|0),8,0)|0); //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $310 = tempRet0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $311 = $302; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $312 = $311; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$312>>2] = $309; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $313 = (($311) + 4)|0; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $314 = $313; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$314>>2] = $310; //@line 322 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _get_seed($18,$21,$10); //@line 324 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $315 = $5; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $316 = $7; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $317 = $8; //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_horst_sign($315,$17,$16,$316,$317,0,$18,$19,$14)|0); //@line 325 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $318 = $16; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $319 = $318; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $320 = HEAP32[$319>>2]|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $321 = (($318) + 4)|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $322 = $321; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $323 = HEAP32[$322>>2]|0; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $324 = $5; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $325 = (($324) + ($320)|0); //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $5 = $325; //@line 327 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $326 = $16; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $327 = $326; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $328 = HEAP32[$327>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $329 = (($326) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $330 = $329; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $331 = HEAP32[$330>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $332 = $6; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $333 = $332; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $334 = $333; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $335 = HEAP32[$334>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $336 = (($333) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $337 = $336; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $338 = HEAP32[$337>>2]|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $339 = (_i64Add(($335|0),($338|0),($328|0),($331|0))|0); //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $340 = tempRet0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $341 = $332; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $342 = $341; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$342>>2] = $339; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $343 = (($341) + 4)|0; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $344 = $343; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$344>>2] = $340; //@line 328 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $345 = $11; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $346 = $345; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$346>>2] = 0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $347 = (($345) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $348 = $347; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$348>>2] = 0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $349 = $11; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $350 = $349; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $351 = HEAP32[$350>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $352 = (($349) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $353 = $352; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $354 = HEAP32[$353>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $355 = ($354>>>0)<(0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $356 = ($351>>>0)<(12); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $357 = ($354|0)==(0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $358 = $357 & $356; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $359 = $355 | $358; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($359)) {
   break;
  }
  $360 = $11; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $361 = $360; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $362 = HEAP32[$361>>2]|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $363 = (($360) + 4)|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $364 = $363; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $365 = HEAP32[$364>>2]|0; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$10>>2] = $362; //@line 332 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _get_seed($18,$21,$10); //@line 334 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $366 = $5; //@line 335 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_sign($366,$17,$18,$19); //@line 335 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $367 = $5; //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $368 = ((($367)) + 2144|0); //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $5 = $368; //@line 336 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $369 = $6; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $370 = $369; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $371 = $370; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $372 = HEAP32[$371>>2]|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $373 = (($370) + 4)|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $374 = $373; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $375 = HEAP32[$374>>2]|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $376 = (_i64Add(($372|0),($375|0),2144,0)|0); //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $377 = tempRet0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $378 = $369; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $379 = $378; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$379>>2] = $376; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $380 = (($378) + 4)|0; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $381 = $380; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$381>>2] = $377; //@line 337 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $382 = $5; //@line 339 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _compute_authpath_wots($17,$382,$10,$21,$19,5); //@line 339 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $383 = $5; //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $384 = ((($383)) + 160|0); //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $5 = $384; //@line 340 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $385 = $6; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $386 = $385; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $387 = $386; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $388 = HEAP32[$387>>2]|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $389 = (($386) + 4)|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $390 = $389; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $391 = HEAP32[$390>>2]|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $392 = (_i64Add(($388|0),($391|0),160,0)|0); //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $393 = tempRet0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $394 = $385; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $395 = $394; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$395>>2] = $392; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $396 = (($394) + 4)|0; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $397 = $396; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$397>>2] = $393; //@line 341 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $398 = ((($10)) + 8|0); //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $399 = $398; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $400 = $399; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $401 = HEAP32[$400>>2]|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $402 = (($399) + 4)|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $403 = $402; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $404 = HEAP32[$403>>2]|0; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $405 = $401 & 31; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $406 = ((($10)) + 16|0); //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$406>>2] = $405; //@line 343 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $407 = ((($10)) + 8|0); //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $408 = $407; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $409 = $408; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $410 = HEAP32[$409>>2]|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $411 = (($408) + 4)|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $412 = $411; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $413 = HEAP32[$412>>2]|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $414 = (_bitshift64Lshr(($410|0),($413|0),5)|0); //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $415 = tempRet0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $416 = $407; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $417 = $416; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$417>>2] = $414; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $418 = (($416) + 4)|0; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $419 = $418; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$419>>2] = $415; //@line 344 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $420 = $11; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $421 = $420; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $422 = HEAP32[$421>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $423 = (($420) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $424 = $423; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $425 = HEAP32[$424>>2]|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $426 = (_i64Add(($422|0),($425|0),1,0)|0); //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $427 = tempRet0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $428 = $11; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $429 = $428; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$429>>2] = $426; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $430 = (($428) + 4)|0; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $431 = $430; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$431>>2] = $427; //@line 330 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 (_zerobytes($21,1088,0)|0); //@line 347 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $432 = $8; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $433 = $6; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $434 = $433; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $435 = $434; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $436 = HEAP32[$435>>2]|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $437 = (($434) + 4)|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $438 = $437; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $439 = HEAP32[$438>>2]|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $440 = (_i64Add(($436|0),($439|0),($432|0),0)|0); //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $441 = tempRet0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $442 = $433; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $443 = $442; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$443>>2] = $440; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $444 = (($442) + 4)|0; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $445 = $444; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$445>>2] = $441; //@line 349 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return 0; //@line 351 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _compute_authpath_wots($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 71744|0;
 $15 = sp;
 $16 = sp + 69696|0;
 $17 = sp + 68672|0;
 $18 = sp + 64|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $20 = $8; //@line 174 "c_src/crypto_sign/sphincs256/ref/sign.c"
 ;HEAP32[$15>>2]=HEAP32[$20>>2]|0;HEAP32[$15+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$20+8>>2]|0;HEAP32[$15+12>>2]=HEAP32[$20+12>>2]|0;HEAP32[$15+16>>2]=HEAP32[$20+16>>2]|0;HEAP32[$15+20>>2]=HEAP32[$20+20>>2]|0; //@line 174 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $21 = ((($15)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$21>>2] = 0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $22 = ((($15)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $23 = HEAP32[$22>>2]|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $24 = ($23|0)<(32); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($24)) {
   break;
  }
  $25 = ((($15)) + 16|0); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $26 = HEAP32[$25>>2]|0; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $27 = $26<<5; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $28 = (($17) + ($27)|0); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $29 = $9; //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _get_seed($28,$29,$15); //@line 182 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $30 = ((($15)) + 16|0); //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $31 = HEAP32[$30>>2]|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $32 = (($31) + 1)|0; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$30>>2] = $32; //@line 181 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $33 = ((($15)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$33>>2] = 0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $34 = ((($15)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = HEAP32[$34>>2]|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = ($35|0)<(32); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($36)) {
   break;
  }
  $37 = ((($15)) + 16|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = HEAP32[$37>>2]|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = ($38*67)|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = $39<<5; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = (($18) + ($40)|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = ((($15)) + 16|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = HEAP32[$42>>2]|0; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $44 = $43<<5; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = (($17) + ($44)|0); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = $10; //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_pkgen($41,$45,$46); //@line 185 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = ((($15)) + 16|0); //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $48 = HEAP32[$47>>2]|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $49 = (($48) + 1)|0; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$47>>2] = $49; //@line 184 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $50 = ((($15)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$50>>2] = 0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $51 = ((($15)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $52 = HEAP32[$51>>2]|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $53 = ($52|0)<(32); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($53)) {
   break;
  }
  $54 = ((($16)) + 1024|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $55 = ((($15)) + 16|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $56 = HEAP32[$55>>2]|0; //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $57 = $56<<5; //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $58 = (($54) + ($57)|0); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $59 = ((($15)) + 16|0); //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = HEAP32[$59>>2]|0; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = ($60*67)|0; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $62 = $61<<5; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = (($18) + ($62)|0); //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = $10; //@line 189 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _l_tree($58,$63,$64); //@line 188 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = ((($15)) + 16|0); //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = HEAP32[$65>>2]|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $67 = (($66) + 1)|0; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$65>>2] = $67; //@line 187 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $19 = 0; //@line 191 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = 32; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $68 = $12; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = ($68|0)>(0); //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($69)) {
   break;
  }
  $14 = 0; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $70 = $14; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $71 = $12; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $72 = ($70|0)<($71|0); //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($72)) {
    break;
   }
   $73 = $12; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $74 = $73 >> 1; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $75 = $74<<5; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $76 = (($16) + ($75)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $77 = $14; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $78 = $77 >> 1; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $79 = $78<<5; //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $80 = (($76) + ($79)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $81 = $12; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $82 = $81<<5; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $83 = (($16) + ($82)|0); //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $84 = $14; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $85 = $84<<5; //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $86 = (($83) + ($85)|0); //@line 198 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $87 = $10; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $88 = $19; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $89 = (7 + ($88))|0; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $90 = $89<<1; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $91 = $90<<5; //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $92 = (($87) + ($91)|0); //@line 199 "c_src/crypto_sign/sphincs256/ref/sign.c"
   (_hash_2n_n_mask($80,$86,$92)|0); //@line 197 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $93 = $14; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $94 = (($93) + 2)|0; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $14 = $94; //@line 196 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $95 = $19; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = (($95) + 1)|0; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $19 = $96; //@line 201 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = $12; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = $97 >> 1; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = $98; //@line 194 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $99 = $8; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $100 = ((($99)) + 16|0); //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $101 = HEAP32[$100>>2]|0; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = $101; //@line 205 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = 0; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $102 = $12; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $103 = $11; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $104 = ($102>>>0)<($103>>>0); //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($104)) {
   break;
  }
  $105 = $7; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $106 = $12; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $107 = $106<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $108 = (($105) + ($107)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $109 = $12; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $110 = 32 >> $109; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $111 = $110<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $112 = (($16) + ($111)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $113 = $13; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $114 = $12; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $115 = $113 >> $114; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $116 = $115 ^ 1; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $117 = $116<<5; //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $118 = (($112) + ($117)|0); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  dest=$108; src=$118; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 209 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $119 = $12; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $120 = (($119) + 1)|0; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = $120; //@line 208 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $121 = $6; //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $122 = ((($16)) + 32|0); //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$121; src=$122; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 212 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 213 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _crypto_sign_sphincs_open($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 44416|0;
 $11 = sp + 8|0;
 $12 = sp;
 $13 = sp + 42272|0;
 $14 = sp + 42240|0;
 $15 = sp + 42208|0;
 $16 = sp + 1208|0;
 $18 = sp + 152|0;
 $19 = sp + 88|0;
 $20 = sp + 56|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $23 = $12; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $24 = $23; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$24>>2] = 0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $25 = (($23) + 4)|0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $26 = $25; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$26>>2] = 0; //@line 359 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $27 = $9; //@line 367 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $28 = ($27>>>0)<(41000); //@line 367 "c_src/crypto_sign/sphincs256/ref/sign.c"
 if ($28) {
  $5 = -1; //@line 368 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $431 = $5; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($431|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $29 = $11; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $30 = $29; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$30>>2] = 0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $31 = (($29) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $32 = $31; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$32>>2] = 0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $33 = $11; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $34 = $33; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $35 = HEAP32[$34>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $36 = (($33) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $37 = $36; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $38 = HEAP32[$37>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $39 = ($38>>>0)<(0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $40 = ($35>>>0)<(1056); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $41 = ($38|0)==(0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $42 = $41 & $40; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $43 = $39 | $42; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($43)) {
   break;
  }
  $44 = $11; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $45 = $44; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $46 = HEAP32[$45>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $47 = (($44) + 4)|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $48 = $47; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $49 = HEAP32[$48>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $50 = $10; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $51 = (($50) + ($46)|0); //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $52 = HEAP8[$51>>0]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $53 = $11; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $54 = $53; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $55 = HEAP32[$54>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $56 = (($53) + 4)|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $57 = $56; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $58 = HEAP32[$57>>2]|0; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $59 = (($18) + ($55)|0); //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$59>>0] = $52; //@line 373 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $60 = $11; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $61 = $60; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $62 = HEAP32[$61>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = (($60) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = $63; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = HEAP32[$64>>2]|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $66 = (_i64Add(($62|0),($65|0),1,0)|0); //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $67 = tempRet0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $68 = $11; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = $68; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$69>>2] = $66; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $70 = (($68) + 4)|0; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $71 = $70; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$71>>2] = $67; //@line 372 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $72 = $11; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $73 = $72; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$73>>2] = 0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $74 = (($72) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $75 = $74; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$75>>2] = 0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $76 = $11; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $77 = $76; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $78 = HEAP32[$77>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $79 = (($76) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $80 = $79; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $81 = HEAP32[$80>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $82 = ($81>>>0)<(0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $83 = ($78>>>0)<(32); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $84 = ($81|0)==(0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $85 = $84 & $83; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $86 = $82 | $85; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($86)) {
   break;
  }
  $87 = $11; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $88 = $87; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $89 = HEAP32[$88>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $90 = (($87) + 4)|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $91 = $90; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $92 = HEAP32[$91>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $93 = $8; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $94 = (($93) + ($89)|0); //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $95 = HEAP8[$94>>0]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $96 = $11; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $97 = $96; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $98 = HEAP32[$97>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $99 = (($96) + 4)|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $100 = $99; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $101 = HEAP32[$100>>2]|0; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $102 = (($20) + ($98)|0); //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP8[$102>>0] = $95; //@line 380 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $103 = $11; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $104 = $103; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $105 = HEAP32[$104>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $106 = (($103) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $107 = $106; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $108 = HEAP32[$107>>2]|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $109 = (_i64Add(($105|0),($108|0),1,0)|0); //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $110 = tempRet0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $111 = $11; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $112 = $111; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$112>>2] = $109; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $113 = (($111) + 4)|0; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $114 = $113; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$114>>2] = $110; //@line 379 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $115 = $9; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $116 = (($115) - 41000)|0; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $21 = $116; //@line 382 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $117 = $6; //@line 384 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $22 = $117; //@line 384 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $118 = $8; //@line 386 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($16|0),($118|0),41000)|0; //@line 386 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $119 = $22; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $120 = ((($119)) + 32|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $121 = ((($120)) + 1056|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $122 = $8; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $123 = ((($122)) + 41000|0); //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $124 = $21; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($121|0),($123|0),($124|0))|0; //@line 388 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $125 = $22; //@line 391 "c_src/crypto_sign/sphincs256/ref/sign.c"
 dest=$125; src=$20; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 391 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $126 = $22; //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $127 = ((($126)) + 32|0); //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 _memcpy(($127|0),($18|0),1056)|0; //@line 394 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $128 = $22; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $129 = $21; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $130 = (($129) + 32)|0; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $131 = (($130) + 1056)|0; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $132 = ($131|0)<(0); //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $133 = $132 << 31 >> 31; //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_msg_hash($19,$128,$131,$133)|0); //@line 396 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $16; //@line 398 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $134 = $17; //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $135 = ((($134)) + 32|0); //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $135; //@line 400 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $136 = $9; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $137 = (($136) - 32)|0; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $137; //@line 401 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $138 = $11; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $139 = $138; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$139>>2] = 0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $140 = (($138) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $141 = $140; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$141>>2] = 0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $142 = $11; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $143 = $142; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $144 = HEAP32[$143>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $145 = (($142) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $146 = $145; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $147 = HEAP32[$146>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $148 = ($147>>>0)<(0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $149 = ($144>>>0)<(8); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $150 = ($147|0)==(0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $151 = $150 & $149; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $152 = $148 | $151; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($152)) {
   break;
  }
  $153 = $11; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $154 = $153; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $155 = HEAP32[$154>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $156 = (($153) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $157 = $156; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $158 = HEAP32[$157>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $159 = $17; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $160 = (($159) + ($155)|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $161 = HEAP8[$160>>0]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $162 = $161&255; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $163 = $11; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $164 = $163; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $165 = HEAP32[$164>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $166 = (($163) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $167 = $166; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $168 = HEAP32[$167>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $169 = (___muldi3(8,0,($165|0),($168|0))|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $170 = tempRet0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $171 = (_bitshift64Shl(($162|0),0,($169|0))|0); //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $172 = tempRet0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $173 = $12; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $174 = $173; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $175 = HEAP32[$174>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $176 = (($173) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $177 = $176; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $178 = HEAP32[$177>>2]|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $179 = $175 ^ $171; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $180 = $178 ^ $172; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $181 = $12; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $182 = $181; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$182>>2] = $179; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $183 = (($181) + 4)|0; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $184 = $183; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$184>>2] = $180; //@line 405 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $185 = $11; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $186 = $185; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $187 = HEAP32[$186>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $188 = (($185) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $189 = $188; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $190 = HEAP32[$189>>2]|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $191 = (_i64Add(($187|0),($190|0),1,0)|0); //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $192 = tempRet0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $193 = $11; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $194 = $193; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$194>>2] = $191; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $195 = (($193) + 4)|0; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $196 = $195; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$196>>2] = $192; //@line 404 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $197 = $17; //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $198 = ((($197)) + 8|0); //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $199 = $17; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $200 = ((($199)) + 41000|0); //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $201 = ((($200)) + -32|0); //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $202 = $9; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $203 = (($202) - 41000)|0; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $204 = (($203) - 32)|0; //@line 409 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_horst_verify($15,$198,$201,$204,0,$18,$19)|0); //@line 408 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $205 = $17; //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $206 = ((($205)) + 8|0); //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $206; //@line 411 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $207 = $9; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $208 = (($207) - 8)|0; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $208; //@line 412 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $209 = $17; //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $210 = ((($209)) + 13312|0); //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = $210; //@line 414 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $211 = $9; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $212 = (($211) - 13312)|0; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $212; //@line 415 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $213 = $11; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $214 = $213; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$214>>2] = 0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $215 = (($213) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $216 = $215; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$216>>2] = 0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $217 = $11; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $218 = $217; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $219 = HEAP32[$218>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $220 = (($217) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $221 = $220; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $222 = HEAP32[$221>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $223 = ($222>>>0)<(0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $224 = ($219>>>0)<(12); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $225 = ($222|0)==(0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $226 = $225 & $224; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $227 = $223 | $226; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($227)) {
   break;
  }
  $228 = $17; //@line 419 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _wots_verify($13,$228,$15,$18); //@line 419 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $229 = $17; //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $230 = ((($229)) + 2144|0); //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = $230; //@line 421 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $231 = $9; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $232 = (($231) - 2144)|0; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $9 = $232; //@line 422 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _l_tree($14,$13,$18); //@line 424 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $233 = $12; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $234 = $233; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $235 = HEAP32[$234>>2]|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $236 = (($233) + 4)|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $237 = $236; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $238 = HEAP32[$237>>2]|0; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $239 = $235 & 31; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $240 = $17; //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  _validate_authpath($15,$14,$239,$240,$18,5); //@line 425 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $241 = $12; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $242 = $241; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $243 = HEAP32[$242>>2]|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $244 = (($241) + 4)|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $245 = $244; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $246 = HEAP32[$245>>2]|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $247 = (_bitshift64Lshr(($243|0),($246|0),5)|0); //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $248 = tempRet0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $249 = $12; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $250 = $249; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$250>>2] = $247; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $251 = (($249) + 4)|0; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $252 = $251; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$252>>2] = $248; //@line 426 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $253 = $17; //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $254 = ((($253)) + 160|0); //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $17 = $254; //@line 428 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $255 = $9; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $256 = (($255) - 160)|0; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $9 = $256; //@line 429 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $257 = $11; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $258 = $257; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $259 = HEAP32[$258>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $260 = (($257) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $261 = $260; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $262 = HEAP32[$261>>2]|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $263 = (_i64Add(($259|0),($262|0),1,0)|0); //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $264 = tempRet0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $265 = $11; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $266 = $265; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$266>>2] = $263; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $267 = (($265) + 4)|0; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $268 = $267; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$268>>2] = $264; //@line 417 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $269 = $11; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $270 = $269; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$270>>2] = 0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $271 = (($269) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $272 = $271; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 HEAP32[$272>>2] = 0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $273 = $11; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $274 = $273; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $275 = HEAP32[$274>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $276 = (($273) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $277 = $276; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $278 = HEAP32[$277>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $279 = ($278>>>0)<(0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $280 = ($275>>>0)<(32); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $281 = ($278|0)==(0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $282 = $281 & $280; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $283 = $279 | $282; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($283)) {
   label = 19;
   break;
  }
  $284 = $11; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $285 = $284; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $286 = HEAP32[$285>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $287 = (($284) + 4)|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $288 = $287; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $289 = HEAP32[$288>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $290 = (($15) + ($286)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $291 = HEAP8[$290>>0]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $292 = $291&255; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $293 = $11; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $294 = $293; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $295 = HEAP32[$294>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $296 = (($293) + 4)|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $297 = $296; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $298 = HEAP32[$297>>2]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $299 = (_i64Add(($295|0),($298|0),1024,0)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $300 = tempRet0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $301 = (($18) + ($299)|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $302 = HEAP8[$301>>0]|0; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $303 = $302&255; //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $304 = ($292|0)!=($303|0); //@line 433 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if ($304) {
   label = 23;
   break;
  }
  $305 = $11; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $306 = $305; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $307 = HEAP32[$306>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $308 = (($305) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $309 = $308; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $310 = HEAP32[$309>>2]|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $311 = (_i64Add(($307|0),($310|0),1,0)|0); //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $312 = tempRet0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $313 = $11; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $314 = $313; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$314>>2] = $311; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $315 = (($313) + 4)|0; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $316 = $315; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$316>>2] = $312; //@line 432 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 if ((label|0) == 19) {
  $317 = $9; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $318 = $7; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $319 = $318; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $320 = $319; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$320>>2] = $317; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $321 = (($319) + 4)|0; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $322 = $321; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$322>>2] = 0; //@line 436 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $323 = $11; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $324 = $323; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$324>>2] = 0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $325 = (($323) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $326 = $325; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$326>>2] = 0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $327 = $11; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $328 = $327; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $329 = HEAP32[$328>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $330 = (($327) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $331 = $330; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $332 = HEAP32[$331>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $333 = $7; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $334 = $333; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $335 = $334; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $336 = HEAP32[$335>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $337 = (($334) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $338 = $337; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $339 = HEAP32[$338>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $340 = ($332>>>0)<($339>>>0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $341 = ($329>>>0)<($336>>>0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $342 = ($332|0)==($339|0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $343 = $342 & $341; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $344 = $340 | $343; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($344)) {
    break;
   }
   $345 = $11; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $346 = $345; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $347 = HEAP32[$346>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $348 = (($345) + 4)|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $349 = $348; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $350 = HEAP32[$349>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $351 = (_i64Add(($347|0),($350|0),32,0)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $352 = tempRet0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $353 = (_i64Add(($351|0),($352|0),1056,0)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $354 = tempRet0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $355 = $6; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $356 = (($355) + ($353)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $357 = HEAP8[$356>>0]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $358 = $11; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $359 = $358; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $360 = HEAP32[$359>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $361 = (($358) + 4)|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $362 = $361; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $363 = HEAP32[$362>>2]|0; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $364 = $6; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $365 = (($364) + ($360)|0); //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP8[$365>>0] = $357; //@line 438 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $366 = $11; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $367 = $366; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $368 = HEAP32[$367>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $369 = (($366) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $370 = $369; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $371 = HEAP32[$370>>2]|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $372 = (_i64Add(($368|0),($371|0),1,0)|0); //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $373 = tempRet0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $374 = $11; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $375 = $374; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$375>>2] = $372; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $376 = (($374) + 4)|0; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $377 = $376; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$377>>2] = $373; //@line 437 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $5 = 0; //@line 440 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $431 = $5; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($431|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 else if ((label|0) == 23) {
  $378 = $9; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $379 = $7; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $380 = $379; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $381 = $380; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$381>>2] = $378; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $382 = (($380) + 4)|0; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $383 = $382; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$383>>2] = 0; //@line 444 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $384 = $11; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $385 = $384; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$385>>2] = 0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $386 = (($384) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $387 = $386; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$387>>2] = 0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  while(1) {
   $388 = $11; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $389 = $388; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $390 = HEAP32[$389>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $391 = (($388) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $392 = $391; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $393 = HEAP32[$392>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $394 = $7; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $395 = $394; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $396 = $395; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $397 = HEAP32[$396>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $398 = (($395) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $399 = $398; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $400 = HEAP32[$399>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $401 = ($393>>>0)<($400>>>0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $402 = ($390>>>0)<($397>>>0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $403 = ($393|0)==($400|0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $404 = $403 & $402; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $405 = $401 | $404; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   if (!($405)) {
    break;
   }
   $406 = $11; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $407 = $406; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $408 = HEAP32[$407>>2]|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $409 = (($406) + 4)|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $410 = $409; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $411 = HEAP32[$410>>2]|0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $412 = $6; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $413 = (($412) + ($408)|0); //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP8[$413>>0] = 0; //@line 446 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $414 = $11; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $415 = $414; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $416 = HEAP32[$415>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $417 = (($414) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $418 = $417; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $419 = HEAP32[$418>>2]|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $420 = (_i64Add(($416|0),($419|0),1,0)|0); //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $421 = tempRet0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $422 = $11; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $423 = $422; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$423>>2] = $420; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $424 = (($422) + 4)|0; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   $425 = $424; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
   HEAP32[$425>>2] = $421; //@line 445 "c_src/crypto_sign/sphincs256/ref/sign.c"
  }
  $426 = $7; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $427 = $426; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $428 = $427; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$428>>2] = -1; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $429 = (($427) + 4)|0; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $430 = $429; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  HEAP32[$430>>2] = -1; //@line 447 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $5 = -1; //@line 448 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $431 = $5; //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
  STACKTOP = sp;return ($431|0); //@line 449 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 return (0)|0;
}
function _validate_authpath($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $14 = sp + 32|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $15 = $8; //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $16 = $15 & 1; //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $17 = ($16|0)!=(0); //@line 134 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $13 = 0; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
 L1: do {
  if ($17) {
   while(1) {
    $18 = $13; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $19 = ($18|0)<(32); //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($19)) {
     break;
    }
    $20 = $13; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $21 = $7; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $22 = (($21) + ($20)|0); //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $23 = HEAP8[$22>>0]|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $24 = $13; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $25 = (32 + ($24))|0; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $26 = (($14) + ($25)|0); //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$26>>0] = $23; //@line 137 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $27 = $13; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $28 = (($27) + 1)|0; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = $28; //@line 136 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
   $13 = 0; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
   while(1) {
    $29 = $13; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $30 = ($29|0)<(32); //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($30)) {
     break L1;
    }
    $31 = $13; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $32 = $9; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $33 = (($32) + ($31)|0); //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $34 = HEAP8[$33>>0]|0; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $35 = $13; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $36 = (($14) + ($35)|0); //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$36>>0] = $34; //@line 139 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $37 = $13; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $38 = (($37) + 1)|0; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = $38; //@line 138 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
  } else {
   while(1) {
    $39 = $13; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $40 = ($39|0)<(32); //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($40)) {
     break;
    }
    $41 = $13; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $42 = $7; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $43 = (($42) + ($41)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $44 = HEAP8[$43>>0]|0; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $45 = $13; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $46 = (($14) + ($45)|0); //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$46>>0] = $44; //@line 144 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $47 = $13; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $48 = (($47) + 1)|0; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = $48; //@line 143 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
   $13 = 0; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
   while(1) {
    $49 = $13; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $50 = ($49|0)<(32); //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    if (!($50)) {
     break L1;
    }
    $51 = $13; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $52 = $9; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $53 = (($52) + ($51)|0); //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $54 = HEAP8[$53>>0]|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $55 = $13; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $56 = (32 + ($55))|0; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $57 = (($14) + ($56)|0); //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    HEAP8[$57>>0] = $54; //@line 146 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $58 = $13; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $59 = (($58) + 1)|0; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = $59; //@line 145 "c_src/crypto_sign/sphincs256/ref/sign.c"
   }
  }
 } while(0);
 $60 = $9; //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $61 = ((($60)) + 32|0); //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $9 = $61; //@line 148 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $12 = 0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
 while(1) {
  $62 = $12; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $63 = $11; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $64 = (($63) - 1)|0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $65 = ($62>>>0)<($64>>>0); //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  if (!($65)) {
   break;
  }
  $66 = $8; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $67 = $66 >>> 1; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $8 = $67; //@line 152 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $68 = $8; //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $69 = $68 & 1; //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $70 = ($69|0)!=(0); //@line 153 "c_src/crypto_sign/sphincs256/ref/sign.c"
  L20: do {
   if ($70) {
    $71 = ((($14)) + 32|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $72 = $10; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $73 = $12; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $74 = (7 + ($73))|0; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $75 = $74<<1; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $76 = $75<<5; //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $77 = (($72) + ($76)|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    (_hash_2n_n_mask($71,$14,$77)|0); //@line 155 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = 0; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
    while(1) {
     $78 = $13; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $79 = ($78|0)<(32); //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     if (!($79)) {
      break L20;
     }
     $80 = $13; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $81 = $9; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $82 = (($81) + ($80)|0); //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $83 = HEAP8[$82>>0]|0; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $84 = $13; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $85 = (($14) + ($84)|0); //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     HEAP8[$85>>0] = $83; //@line 157 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $86 = $13; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $87 = (($86) + 1)|0; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $13 = $87; //@line 156 "c_src/crypto_sign/sphincs256/ref/sign.c"
    }
   } else {
    $88 = $10; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $89 = $12; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $90 = (7 + ($89))|0; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $91 = $90<<1; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $92 = $91<<5; //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $93 = (($88) + ($92)|0); //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    (_hash_2n_n_mask($14,$14,$93)|0); //@line 161 "c_src/crypto_sign/sphincs256/ref/sign.c"
    $13 = 0; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
    while(1) {
     $94 = $13; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $95 = ($94|0)<(32); //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     if (!($95)) {
      break L20;
     }
     $96 = $13; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $97 = $9; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $98 = (($97) + ($96)|0); //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $99 = HEAP8[$98>>0]|0; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $100 = $13; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $101 = (($100) + 32)|0; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $102 = (($14) + ($101)|0); //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     HEAP8[$102>>0] = $99; //@line 163 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $103 = $13; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $104 = (($103) + 1)|0; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
     $13 = $104; //@line 162 "c_src/crypto_sign/sphincs256/ref/sign.c"
    }
   }
  } while(0);
  $105 = $9; //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $106 = ((($105)) + 32|0); //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $9 = $106; //@line 165 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $107 = $12; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $108 = (($107) + 1)|0; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
  $12 = $108; //@line 150 "c_src/crypto_sign/sphincs256/ref/sign.c"
 }
 $109 = $6; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $110 = $10; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $111 = $11; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $112 = (7 + ($111))|0; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $113 = (($112) - 1)|0; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $114 = $113<<1; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $115 = $114<<5; //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 $116 = (($110) + ($115)|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 (_hash_2n_n_mask($109,$14,$116)|0); //@line 167 "c_src/crypto_sign/sphincs256/ref/sign.c"
 STACKTOP = sp;return; //@line 168 "c_src/crypto_sign/sphincs256/ref/sign.c"
}
function _wots_pkgen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $8 = $4; //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _expand_seed_15($7,$8); //@line 26 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $6 = 0; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $9 = $6; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = ($9|0)<(67); //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($10)) {
   break;
  }
  $11 = $3; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = $6; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $12<<5; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($11) + ($13)|0); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $3; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = $6; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = $16<<5; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = (($15) + ($17)|0); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = $5; //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($14,$18,$19,15); //@line 28 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $6; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $21 = (($20) + 1)|0; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $6 = $21; //@line 27 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 29 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _expand_seed_15($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $5 = $3; //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _prg($4,2144,0,$5); //@line 8 "c_src/crypto_sign/sphincs256/ref/wots.c"
 STACKTOP = sp;return; //@line 9 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _gen_chain($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $10 = $9; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $11 = ($10|0)<(32); //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($11)) {
   break;
  }
  $12 = $9; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $13 = $5; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($13) + ($12)|0); //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = HEAP8[$14>>0]|0; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = $9; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = $4; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = (($17) + ($16)|0); //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP8[$18>>0] = $15; //@line 16 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = $9; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = (($19) + 1)|0; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $20; //@line 15 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $8 = 0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $21 = $8; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $7; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = ($21|0)<($22|0); //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = $8; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = ($24|0)<(16); //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = $23 ? $25 : 0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($26)) {
   break;
  }
  $27 = $4; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = $4; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $29 = $6; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $30 = $8; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $31 = $30<<5; //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $32 = (($29) + ($31)|0); //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  (_hash_n_n_mask($27,$28,$32)|0); //@line 19 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $33 = $8; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $34 = (($33) + 1)|0; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $8 = $34; //@line 18 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 20 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _wots_sign($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $8 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = 0; //@line 34 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $9 = 0; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $11 = $9; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = ($11|0)<(64); //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($12)) {
   break;
  }
  $13 = $9; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($13|0) / 2)&-1; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $5; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = (($15) + ($14)|0); //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = HEAP8[$16>>0]|0; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = $17&255; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = $18 & 15; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $9; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $21 = (($8) + ($20<<2)|0); //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$21>>2] = $19; //@line 39 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $9; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = (($22|0) / 2)&-1; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = $5; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = (($24) + ($23)|0); //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = HEAP8[$25>>0]|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $27 = $26&255; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = $27 >> 4; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $29 = $9; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $30 = (($29) + 1)|0; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $31 = (($8) + ($30<<2)|0); //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$31>>2] = $28; //@line 40 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $32 = $9; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $33 = (($8) + ($32<<2)|0); //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $34 = HEAP32[$33>>2]|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $35 = (15 - ($34))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $36 = $10; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $37 = (($36) + ($35))|0; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $37; //@line 41 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $38 = $9; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $39 = (($38) + 1)|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $40 = (($8) + ($39<<2)|0); //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $41 = HEAP32[$40>>2]|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $42 = (15 - ($41))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $43 = $10; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $44 = (($43) + ($42))|0; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $44; //@line 42 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $45 = $9; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $46 = (($45) + 2)|0; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $46; //@line 37 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 while(1) {
  $47 = $9; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $48 = ($47|0)<(67); //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($48)) {
   break;
  }
  $49 = $10; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $50 = $49 & 15; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $51 = $9; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $52 = (($8) + ($51<<2)|0); //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$52>>2] = $50; //@line 47 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $53 = $10; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $54 = $53 >> 4; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $54; //@line 48 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $55 = $9; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $56 = (($55) + 1)|0; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $56; //@line 45 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $57 = $4; //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $58 = $6; //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 _expand_seed_15($57,$58); //@line 51 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $9 = 0; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $59 = $9; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $60 = ($59|0)<(67); //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($60)) {
   break;
  }
  $61 = $4; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $62 = $9; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $63 = $62<<5; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $64 = (($61) + ($63)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $65 = $4; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $66 = $9; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $67 = $66<<5; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $68 = (($65) + ($67)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $69 = $7; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $70 = $9; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $71 = (($8) + ($70<<2)|0); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $72 = HEAP32[$71>>2]|0; //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($64,$68,$69,$72); //@line 53 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $73 = $9; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $74 = (($73) + 1)|0; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $74; //@line 52 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 81 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _wots_verify($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $8 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = 0; //@line 85 "c_src/crypto_sign/sphincs256/ref/wots.c"
 $9 = 0; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $11 = $9; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $12 = ($11|0)<(64); //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($12)) {
   break;
  }
  $13 = $9; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $14 = (($13|0) / 2)&-1; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $15 = $6; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $16 = (($15) + ($14)|0); //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $17 = HEAP8[$16>>0]|0; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $18 = $17&255; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $19 = $18 & 15; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $20 = $9; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $21 = (($8) + ($20<<2)|0); //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$21>>2] = $19; //@line 90 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $22 = $9; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $23 = (($22|0) / 2)&-1; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $24 = $6; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $25 = (($24) + ($23)|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $26 = HEAP8[$25>>0]|0; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $27 = $26&255; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $28 = $27 >> 4; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $29 = $9; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $30 = (($29) + 1)|0; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $31 = (($8) + ($30<<2)|0); //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$31>>2] = $28; //@line 91 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $32 = $9; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $33 = (($8) + ($32<<2)|0); //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $34 = HEAP32[$33>>2]|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $35 = (15 - ($34))|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $36 = $10; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $37 = (($36) + ($35))|0; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $37; //@line 92 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $38 = $9; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $39 = (($38) + 1)|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $40 = (($8) + ($39<<2)|0); //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $41 = HEAP32[$40>>2]|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $42 = (15 - ($41))|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $43 = $10; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $44 = (($43) + ($42))|0; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $44; //@line 93 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $45 = $9; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $46 = (($45) + 2)|0; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $46; //@line 88 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 while(1) {
  $47 = $9; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $48 = ($47|0)<(67); //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($48)) {
   break;
  }
  $49 = $10; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $50 = $49 & 15; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $51 = $9; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $52 = (($8) + ($51<<2)|0); //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  HEAP32[$52>>2] = $50; //@line 98 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $53 = $10; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $54 = $53 >> 4; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $10 = $54; //@line 99 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $55 = $9; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $56 = (($55) + 1)|0; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $56; //@line 96 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 $9 = 0; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
 while(1) {
  $57 = $9; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $58 = ($57|0)<(67); //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  if (!($58)) {
   break;
  }
  $59 = $4; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $60 = $9; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $61 = $60<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $62 = (($59) + ($61)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $63 = $5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $64 = $9; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $65 = $64<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $66 = (($63) + ($65)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $67 = $7; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $68 = $9; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $69 = (($8) + ($68<<2)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $70 = HEAP32[$69>>2]|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $71 = $70<<5; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $72 = (($67) + ($71)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $73 = $9; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $74 = (($8) + ($73<<2)|0); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $75 = HEAP32[$74>>2]|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $76 = (15 - ($75))|0; //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  _gen_chain($62,$66,$72,$76); //@line 103 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $77 = $9; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $78 = (($77) + 1)|0; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
  $9 = $78; //@line 102 "c_src/crypto_sign/sphincs256/ref/wots.c"
 }
 STACKTOP = sp;return; //@line 130 "c_src/crypto_sign/sphincs256/ref/wots.c"
}
function _zerobytes($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $3 = $0;
 $6 = $4;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $2;
 $10 = $3; //@line 5 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 $5 = $10; //@line 5 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 while(1) {
  $11 = $4; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $12 = $11; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $13 = HEAP32[$12>>2]|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $14 = (($11) + 4)|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $15 = $14; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $16 = HEAP32[$15>>2]|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $17 = (_i64Add(($13|0),($16|0),-1,-1)|0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $18 = tempRet0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $19 = $4; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $20 = $19; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP32[$20>>2] = $17; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $21 = (($19) + 4)|0; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $22 = $21; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP32[$22>>2] = $18; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $23 = ($13|0)!=(0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $24 = ($16|0)!=(0); //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $25 = $23 | $24; //@line 6 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  if (!($25)) {
   break;
  }
  $26 = $5; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $27 = ((($26)) + 1|0); //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  $5 = $27; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
  HEAP8[$26>>0] = 0; //@line 7 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 }
 $28 = $3; //@line 8 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
 STACKTOP = sp;return ($28|0); //@line 8 "c_src/crypto_sign/sphincs256/ref/zerobytes.c"
}
function _sphincsjs_public_key_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1056; //@line 5 "sphincs.c"
}
function _sphincsjs_secret_key_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1088; //@line 9 "sphincs.c"
}
function _sphincsjs_signature_bytes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 41000; //@line 13 "sphincs.c"
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[458]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 1876;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 64|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0190$i = 0, $$$0191$i = 0, $$$4349$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0;
 var $$024370$i = 0, $$0286$i$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$0342$i = 0, $$0343$i = 0, $$0345$i = 0, $$0351$i = 0, $$0356$i = 0, $$0357$$i = 0, $$0357$i = 0, $$0359$i = 0, $$0360$i = 0, $$0366$i = 0, $$1194$i = 0, $$1196$i = 0, $$124469$i = 0;
 var $$1290$i$i = 0, $$1292$i$i = 0, $$1341$i = 0, $$1346$i = 0, $$1361$i = 0, $$1368$i = 0, $$1372$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3348$i = 0, $$3370$i = 0, $$4$lcssa$i = 0, $$413$i = 0, $$4349$lcssa$i = 0, $$434912$i = 0, $$4355$$4$i = 0;
 var $$4355$ph$i = 0, $$435511$i = 0, $$5256$i = 0, $$723947$i = 0, $$748$i = 0, $$not$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i205 = 0, $$pre$i208 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i206Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre9$i$i = 0, $1 = 0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0;
 var $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0;
 var $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0;
 var $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0;
 var $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0;
 var $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0;
 var $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0;
 var $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i204 = 0, $exitcond$i$i = 0, $not$$i$i = 0, $not$$i22$i = 0;
 var $not$7$i = 0, $or$cond$i = 0, $or$cond$i211 = 0, $or$cond1$i = 0, $or$cond1$i210 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[470]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (1920 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[470] = $24;
     } else {
      $25 = HEAP32[(1896)>>2]|0;
      $26 = ($20>>>0)<($25>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(1888)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (1920 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($69|0)==($73|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[470] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(1896)>>2]|0;
       $79 = ($73>>>0)<($78>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($87) + ($84)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(1900)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (1920 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[470] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(1896)>>2]|0;
       $104 = ($102>>>0)<($103>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(1888)>>2] = $84;
     HEAP32[(1900)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(1884)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (2184 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $$0189$i = $134;$$0190$i = $134;$$0191$i = $138;
     while(1) {
      $139 = ((($$0189$i)) + 16|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ($140|0)==(0|0);
      if ($141) {
       $142 = ((($$0189$i)) + 20|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($143|0)==(0|0);
       if ($144) {
        break;
       } else {
        $146 = $143;
       }
      } else {
       $146 = $140;
      }
      $145 = ((($146)) + 4|0);
      $147 = HEAP32[$145>>2]|0;
      $148 = $147 & -8;
      $149 = (($148) - ($6))|0;
      $150 = ($149>>>0)<($$0191$i>>>0);
      $$$0191$i = $150 ? $149 : $$0191$i;
      $$$0190$i = $150 ? $146 : $$0190$i;
      $$0189$i = $146;$$0190$i = $$$0190$i;$$0191$i = $$$0191$i;
     }
     $151 = HEAP32[(1896)>>2]|0;
     $152 = ($$0190$i>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     }
     $153 = (($$0190$i) + ($6)|0);
     $154 = ($$0190$i>>>0)<($153>>>0);
     if (!($154)) {
      _abort();
      // unreachable;
     }
     $155 = ((($$0190$i)) + 24|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ((($$0190$i)) + 12|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = ($158|0)==($$0190$i|0);
     do {
      if ($159) {
       $169 = ((($$0190$i)) + 20|0);
       $170 = HEAP32[$169>>2]|0;
       $171 = ($170|0)==(0|0);
       if ($171) {
        $172 = ((($$0190$i)) + 16|0);
        $173 = HEAP32[$172>>2]|0;
        $174 = ($173|0)==(0|0);
        if ($174) {
         $$3$i = 0;
         break;
        } else {
         $$1194$i = $173;$$1196$i = $172;
        }
       } else {
        $$1194$i = $170;$$1196$i = $169;
       }
       while(1) {
        $175 = ((($$1194$i)) + 20|0);
        $176 = HEAP32[$175>>2]|0;
        $177 = ($176|0)==(0|0);
        if (!($177)) {
         $$1194$i = $176;$$1196$i = $175;
         continue;
        }
        $178 = ((($$1194$i)) + 16|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = ($179|0)==(0|0);
        if ($180) {
         break;
        } else {
         $$1194$i = $179;$$1196$i = $178;
        }
       }
       $181 = ($$1196$i>>>0)<($151>>>0);
       if ($181) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1196$i>>2] = 0;
        $$3$i = $$1194$i;
        break;
       }
      } else {
       $160 = ((($$0190$i)) + 8|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ($161>>>0)<($151>>>0);
       if ($162) {
        _abort();
        // unreachable;
       }
       $163 = ((($161)) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = ($164|0)==($$0190$i|0);
       if (!($165)) {
        _abort();
        // unreachable;
       }
       $166 = ((($158)) + 8|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($167|0)==($$0190$i|0);
       if ($168) {
        HEAP32[$163>>2] = $158;
        HEAP32[$166>>2] = $161;
        $$3$i = $158;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $182 = ($156|0)==(0|0);
     do {
      if (!($182)) {
       $183 = ((($$0190$i)) + 28|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (2184 + ($184<<2)|0);
       $186 = HEAP32[$185>>2]|0;
       $187 = ($$0190$i|0)==($186|0);
       if ($187) {
        HEAP32[$185>>2] = $$3$i;
        $cond$i = ($$3$i|0)==(0|0);
        if ($cond$i) {
         $188 = 1 << $184;
         $189 = $188 ^ -1;
         $190 = $108 & $189;
         HEAP32[(1884)>>2] = $190;
         break;
        }
       } else {
        $191 = HEAP32[(1896)>>2]|0;
        $192 = ($156>>>0)<($191>>>0);
        if ($192) {
         _abort();
         // unreachable;
        }
        $193 = ((($156)) + 16|0);
        $194 = HEAP32[$193>>2]|0;
        $195 = ($194|0)==($$0190$i|0);
        if ($195) {
         HEAP32[$193>>2] = $$3$i;
        } else {
         $196 = ((($156)) + 20|0);
         HEAP32[$196>>2] = $$3$i;
        }
        $197 = ($$3$i|0)==(0|0);
        if ($197) {
         break;
        }
       }
       $198 = HEAP32[(1896)>>2]|0;
       $199 = ($$3$i>>>0)<($198>>>0);
       if ($199) {
        _abort();
        // unreachable;
       }
       $200 = ((($$3$i)) + 24|0);
       HEAP32[$200>>2] = $156;
       $201 = ((($$0190$i)) + 16|0);
       $202 = HEAP32[$201>>2]|0;
       $203 = ($202|0)==(0|0);
       do {
        if (!($203)) {
         $204 = ($202>>>0)<($198>>>0);
         if ($204) {
          _abort();
          // unreachable;
         } else {
          $205 = ((($$3$i)) + 16|0);
          HEAP32[$205>>2] = $202;
          $206 = ((($202)) + 24|0);
          HEAP32[$206>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $207 = ((($$0190$i)) + 20|0);
       $208 = HEAP32[$207>>2]|0;
       $209 = ($208|0)==(0|0);
       if (!($209)) {
        $210 = HEAP32[(1896)>>2]|0;
        $211 = ($208>>>0)<($210>>>0);
        if ($211) {
         _abort();
         // unreachable;
        } else {
         $212 = ((($$3$i)) + 20|0);
         HEAP32[$212>>2] = $208;
         $213 = ((($208)) + 24|0);
         HEAP32[$213>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $214 = ($$0191$i>>>0)<(16);
     if ($214) {
      $215 = (($$0191$i) + ($6))|0;
      $216 = $215 | 3;
      $217 = ((($$0190$i)) + 4|0);
      HEAP32[$217>>2] = $216;
      $218 = (($$0190$i) + ($215)|0);
      $219 = ((($218)) + 4|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = $220 | 1;
      HEAP32[$219>>2] = $221;
     } else {
      $222 = $6 | 3;
      $223 = ((($$0190$i)) + 4|0);
      HEAP32[$223>>2] = $222;
      $224 = $$0191$i | 1;
      $225 = ((($153)) + 4|0);
      HEAP32[$225>>2] = $224;
      $226 = (($153) + ($$0191$i)|0);
      HEAP32[$226>>2] = $$0191$i;
      $227 = ($37|0)==(0);
      if (!($227)) {
       $228 = HEAP32[(1900)>>2]|0;
       $229 = $37 >>> 3;
       $230 = $229 << 1;
       $231 = (1920 + ($230<<2)|0);
       $232 = 1 << $229;
       $233 = $8 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $8 | $232;
        HEAP32[470] = $235;
        $$pre$i = ((($231)) + 8|0);
        $$0187$i = $231;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $236 = ((($231)) + 8|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(1896)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$0187$i = $237;$$pre$phi$iZ2D = $236;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $228;
       $240 = ((($$0187$i)) + 12|0);
       HEAP32[$240>>2] = $228;
       $241 = ((($228)) + 8|0);
       HEAP32[$241>>2] = $$0187$i;
       $242 = ((($228)) + 12|0);
       HEAP32[$242>>2] = $231;
      }
      HEAP32[(1888)>>2] = $$0191$i;
      HEAP32[(1900)>>2] = $153;
     }
     $243 = ((($$0190$i)) + 8|0);
     $$0 = $243;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $244 = ($0>>>0)>(4294967231);
   if ($244) {
    $$0197 = -1;
   } else {
    $245 = (($0) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(1884)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $$0197 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $$0356$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $$0356$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $$0356$i = $274;
      }
     }
     $275 = (2184 + ($$0356$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $$2353$i = 0;$$3$i201 = 0;$$3348$i = $249;
       label = 86;
      } else {
       $278 = ($$0356$i|0)==(31);
       $279 = $$0356$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $$0340$i = 0;$$0345$i = $249;$$0351$i = $276;$$0357$i = $282;$$0360$i = 0;
       while(1) {
        $283 = ((($$0351$i)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($$0345$i>>>0);
        if ($287) {
         $288 = ($286|0)==(0);
         if ($288) {
          $$413$i = $$0351$i;$$434912$i = 0;$$435511$i = $$0351$i;
          label = 90;
          break L123;
         } else {
          $$1341$i = $$0351$i;$$1346$i = $286;
         }
        } else {
         $$1341$i = $$0340$i;$$1346$i = $$0345$i;
        }
        $289 = ((($$0351$i)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $$0357$i >>> 31;
        $292 = (((($$0351$i)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond1$i = $294 | $295;
        $$1361$i = $or$cond1$i ? $$0360$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $296&1;
        $298 = $297 ^ 1;
        $$0357$$i = $$0357$i << $298;
        if ($296) {
         $$2353$i = $$1361$i;$$3$i201 = $$1341$i;$$3348$i = $$1346$i;
         label = 86;
         break;
        } else {
         $$0340$i = $$1341$i;$$0345$i = $$1346$i;$$0351$i = $293;$$0357$i = $$0357$$i;$$0360$i = $$1361$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $299 = ($$2353$i|0)==(0|0);
      $300 = ($$3$i201|0)==(0|0);
      $or$cond$i = $299 & $300;
      if ($or$cond$i) {
       $301 = 2 << $$0356$i;
       $302 = (0 - ($301))|0;
       $303 = $301 | $302;
       $304 = $247 & $303;
       $305 = ($304|0)==(0);
       if ($305) {
        $$0197 = $246;
        break;
       }
       $306 = (0 - ($304))|0;
       $307 = $304 & $306;
       $308 = (($307) + -1)|0;
       $309 = $308 >>> 12;
       $310 = $309 & 16;
       $311 = $308 >>> $310;
       $312 = $311 >>> 5;
       $313 = $312 & 8;
       $314 = $313 | $310;
       $315 = $311 >>> $313;
       $316 = $315 >>> 2;
       $317 = $316 & 4;
       $318 = $314 | $317;
       $319 = $315 >>> $317;
       $320 = $319 >>> 1;
       $321 = $320 & 2;
       $322 = $318 | $321;
       $323 = $319 >>> $321;
       $324 = $323 >>> 1;
       $325 = $324 & 1;
       $326 = $322 | $325;
       $327 = $323 >>> $325;
       $328 = (($326) + ($327))|0;
       $329 = (2184 + ($328<<2)|0);
       $330 = HEAP32[$329>>2]|0;
       $$4355$ph$i = $330;
      } else {
       $$4355$ph$i = $$2353$i;
      }
      $331 = ($$4355$ph$i|0)==(0|0);
      if ($331) {
       $$4$lcssa$i = $$3$i201;$$4349$lcssa$i = $$3348$i;
      } else {
       $$413$i = $$3$i201;$$434912$i = $$3348$i;$$435511$i = $$4355$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $332 = ((($$435511$i)) + 4|0);
       $333 = HEAP32[$332>>2]|0;
       $334 = $333 & -8;
       $335 = (($334) - ($246))|0;
       $336 = ($335>>>0)<($$434912$i>>>0);
       $$$4349$i = $336 ? $335 : $$434912$i;
       $$4355$$4$i = $336 ? $$435511$i : $$413$i;
       $337 = ((($$435511$i)) + 16|0);
       $338 = HEAP32[$337>>2]|0;
       $339 = ($338|0)==(0|0);
       if (!($339)) {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $338;
        label = 90;
        continue;
       }
       $340 = ((($$435511$i)) + 20|0);
       $341 = HEAP32[$340>>2]|0;
       $342 = ($341|0)==(0|0);
       if ($342) {
        $$4$lcssa$i = $$4355$$4$i;$$4349$lcssa$i = $$$4349$i;
        break;
       } else {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $341;
        label = 90;
       }
      }
     }
     $343 = ($$4$lcssa$i|0)==(0|0);
     if ($343) {
      $$0197 = $246;
     } else {
      $344 = HEAP32[(1888)>>2]|0;
      $345 = (($344) - ($246))|0;
      $346 = ($$4349$lcssa$i>>>0)<($345>>>0);
      if ($346) {
       $347 = HEAP32[(1896)>>2]|0;
       $348 = ($$4$lcssa$i>>>0)<($347>>>0);
       if ($348) {
        _abort();
        // unreachable;
       }
       $349 = (($$4$lcssa$i) + ($246)|0);
       $350 = ($$4$lcssa$i>>>0)<($349>>>0);
       if (!($350)) {
        _abort();
        // unreachable;
       }
       $351 = ((($$4$lcssa$i)) + 24|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = ((($$4$lcssa$i)) + 12|0);
       $354 = HEAP32[$353>>2]|0;
       $355 = ($354|0)==($$4$lcssa$i|0);
       do {
        if ($355) {
         $365 = ((($$4$lcssa$i)) + 20|0);
         $366 = HEAP32[$365>>2]|0;
         $367 = ($366|0)==(0|0);
         if ($367) {
          $368 = ((($$4$lcssa$i)) + 16|0);
          $369 = HEAP32[$368>>2]|0;
          $370 = ($369|0)==(0|0);
          if ($370) {
           $$3370$i = 0;
           break;
          } else {
           $$1368$i = $369;$$1372$i = $368;
          }
         } else {
          $$1368$i = $366;$$1372$i = $365;
         }
         while(1) {
          $371 = ((($$1368$i)) + 20|0);
          $372 = HEAP32[$371>>2]|0;
          $373 = ($372|0)==(0|0);
          if (!($373)) {
           $$1368$i = $372;$$1372$i = $371;
           continue;
          }
          $374 = ((($$1368$i)) + 16|0);
          $375 = HEAP32[$374>>2]|0;
          $376 = ($375|0)==(0|0);
          if ($376) {
           break;
          } else {
           $$1368$i = $375;$$1372$i = $374;
          }
         }
         $377 = ($$1372$i>>>0)<($347>>>0);
         if ($377) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1372$i>>2] = 0;
          $$3370$i = $$1368$i;
          break;
         }
        } else {
         $356 = ((($$4$lcssa$i)) + 8|0);
         $357 = HEAP32[$356>>2]|0;
         $358 = ($357>>>0)<($347>>>0);
         if ($358) {
          _abort();
          // unreachable;
         }
         $359 = ((($357)) + 12|0);
         $360 = HEAP32[$359>>2]|0;
         $361 = ($360|0)==($$4$lcssa$i|0);
         if (!($361)) {
          _abort();
          // unreachable;
         }
         $362 = ((($354)) + 8|0);
         $363 = HEAP32[$362>>2]|0;
         $364 = ($363|0)==($$4$lcssa$i|0);
         if ($364) {
          HEAP32[$359>>2] = $354;
          HEAP32[$362>>2] = $357;
          $$3370$i = $354;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $378 = ($352|0)==(0|0);
       do {
        if ($378) {
         $470 = $247;
        } else {
         $379 = ((($$4$lcssa$i)) + 28|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = (2184 + ($380<<2)|0);
         $382 = HEAP32[$381>>2]|0;
         $383 = ($$4$lcssa$i|0)==($382|0);
         if ($383) {
          HEAP32[$381>>2] = $$3370$i;
          $cond$i204 = ($$3370$i|0)==(0|0);
          if ($cond$i204) {
           $384 = 1 << $380;
           $385 = $384 ^ -1;
           $386 = $247 & $385;
           HEAP32[(1884)>>2] = $386;
           $470 = $386;
           break;
          }
         } else {
          $387 = HEAP32[(1896)>>2]|0;
          $388 = ($352>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($352)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($$4$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $$3370$i;
          } else {
           $392 = ((($352)) + 20|0);
           HEAP32[$392>>2] = $$3370$i;
          }
          $393 = ($$3370$i|0)==(0|0);
          if ($393) {
           $470 = $247;
           break;
          }
         }
         $394 = HEAP32[(1896)>>2]|0;
         $395 = ($$3370$i>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($$3370$i)) + 24|0);
         HEAP32[$396>>2] = $352;
         $397 = ((($$4$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($$3370$i)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $$3370$i;
            break;
           }
          }
         } while(0);
         $403 = ((($$4$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if ($405) {
          $470 = $247;
         } else {
          $406 = HEAP32[(1896)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($$3370$i)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $$3370$i;
           $470 = $247;
           break;
          }
         }
        }
       } while(0);
       $410 = ($$4349$lcssa$i>>>0)<(16);
       do {
        if ($410) {
         $411 = (($$4349$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $414 = (($$4$lcssa$i) + ($411)|0);
         $415 = ((($414)) + 4|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = $416 | 1;
         HEAP32[$415>>2] = $417;
        } else {
         $418 = $246 | 3;
         $419 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$419>>2] = $418;
         $420 = $$4349$lcssa$i | 1;
         $421 = ((($349)) + 4|0);
         HEAP32[$421>>2] = $420;
         $422 = (($349) + ($$4349$lcssa$i)|0);
         HEAP32[$422>>2] = $$4349$lcssa$i;
         $423 = $$4349$lcssa$i >>> 3;
         $424 = ($$4349$lcssa$i>>>0)<(256);
         if ($424) {
          $425 = $423 << 1;
          $426 = (1920 + ($425<<2)|0);
          $427 = HEAP32[470]|0;
          $428 = 1 << $423;
          $429 = $427 & $428;
          $430 = ($429|0)==(0);
          if ($430) {
           $431 = $427 | $428;
           HEAP32[470] = $431;
           $$pre$i205 = ((($426)) + 8|0);
           $$0366$i = $426;$$pre$phi$i206Z2D = $$pre$i205;
          } else {
           $432 = ((($426)) + 8|0);
           $433 = HEAP32[$432>>2]|0;
           $434 = HEAP32[(1896)>>2]|0;
           $435 = ($433>>>0)<($434>>>0);
           if ($435) {
            _abort();
            // unreachable;
           } else {
            $$0366$i = $433;$$pre$phi$i206Z2D = $432;
           }
          }
          HEAP32[$$pre$phi$i206Z2D>>2] = $349;
          $436 = ((($$0366$i)) + 12|0);
          HEAP32[$436>>2] = $349;
          $437 = ((($349)) + 8|0);
          HEAP32[$437>>2] = $$0366$i;
          $438 = ((($349)) + 12|0);
          HEAP32[$438>>2] = $426;
          break;
         }
         $439 = $$4349$lcssa$i >>> 8;
         $440 = ($439|0)==(0);
         if ($440) {
          $$0359$i = 0;
         } else {
          $441 = ($$4349$lcssa$i>>>0)>(16777215);
          if ($441) {
           $$0359$i = 31;
          } else {
           $442 = (($439) + 1048320)|0;
           $443 = $442 >>> 16;
           $444 = $443 & 8;
           $445 = $439 << $444;
           $446 = (($445) + 520192)|0;
           $447 = $446 >>> 16;
           $448 = $447 & 4;
           $449 = $448 | $444;
           $450 = $445 << $448;
           $451 = (($450) + 245760)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 2;
           $454 = $449 | $453;
           $455 = (14 - ($454))|0;
           $456 = $450 << $453;
           $457 = $456 >>> 15;
           $458 = (($455) + ($457))|0;
           $459 = $458 << 1;
           $460 = (($458) + 7)|0;
           $461 = $$4349$lcssa$i >>> $460;
           $462 = $461 & 1;
           $463 = $462 | $459;
           $$0359$i = $463;
          }
         }
         $464 = (2184 + ($$0359$i<<2)|0);
         $465 = ((($349)) + 28|0);
         HEAP32[$465>>2] = $$0359$i;
         $466 = ((($349)) + 16|0);
         $467 = ((($466)) + 4|0);
         HEAP32[$467>>2] = 0;
         HEAP32[$466>>2] = 0;
         $468 = 1 << $$0359$i;
         $469 = $470 & $468;
         $471 = ($469|0)==(0);
         if ($471) {
          $472 = $470 | $468;
          HEAP32[(1884)>>2] = $472;
          HEAP32[$464>>2] = $349;
          $473 = ((($349)) + 24|0);
          HEAP32[$473>>2] = $464;
          $474 = ((($349)) + 12|0);
          HEAP32[$474>>2] = $349;
          $475 = ((($349)) + 8|0);
          HEAP32[$475>>2] = $349;
          break;
         }
         $476 = HEAP32[$464>>2]|0;
         $477 = ($$0359$i|0)==(31);
         $478 = $$0359$i >>> 1;
         $479 = (25 - ($478))|0;
         $480 = $477 ? 0 : $479;
         $481 = $$4349$lcssa$i << $480;
         $$0342$i = $481;$$0343$i = $476;
         while(1) {
          $482 = ((($$0343$i)) + 4|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = $483 & -8;
          $485 = ($484|0)==($$4349$lcssa$i|0);
          if ($485) {
           label = 148;
           break;
          }
          $486 = $$0342$i >>> 31;
          $487 = (((($$0343$i)) + 16|0) + ($486<<2)|0);
          $488 = $$0342$i << 1;
          $489 = HEAP32[$487>>2]|0;
          $490 = ($489|0)==(0|0);
          if ($490) {
           label = 145;
           break;
          } else {
           $$0342$i = $488;$$0343$i = $489;
          }
         }
         if ((label|0) == 145) {
          $491 = HEAP32[(1896)>>2]|0;
          $492 = ($487>>>0)<($491>>>0);
          if ($492) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$487>>2] = $349;
           $493 = ((($349)) + 24|0);
           HEAP32[$493>>2] = $$0343$i;
           $494 = ((($349)) + 12|0);
           HEAP32[$494>>2] = $349;
           $495 = ((($349)) + 8|0);
           HEAP32[$495>>2] = $349;
           break;
          }
         }
         else if ((label|0) == 148) {
          $496 = ((($$0343$i)) + 8|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = HEAP32[(1896)>>2]|0;
          $499 = ($497>>>0)>=($498>>>0);
          $not$7$i = ($$0343$i>>>0)>=($498>>>0);
          $500 = $499 & $not$7$i;
          if ($500) {
           $501 = ((($497)) + 12|0);
           HEAP32[$501>>2] = $349;
           HEAP32[$496>>2] = $349;
           $502 = ((($349)) + 8|0);
           HEAP32[$502>>2] = $497;
           $503 = ((($349)) + 12|0);
           HEAP32[$503>>2] = $$0343$i;
           $504 = ((($349)) + 24|0);
           HEAP32[$504>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $505 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $505;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $506 = HEAP32[(1888)>>2]|0;
 $507 = ($506>>>0)<($$0197>>>0);
 if (!($507)) {
  $508 = (($506) - ($$0197))|0;
  $509 = HEAP32[(1900)>>2]|0;
  $510 = ($508>>>0)>(15);
  if ($510) {
   $511 = (($509) + ($$0197)|0);
   HEAP32[(1900)>>2] = $511;
   HEAP32[(1888)>>2] = $508;
   $512 = $508 | 1;
   $513 = ((($511)) + 4|0);
   HEAP32[$513>>2] = $512;
   $514 = (($511) + ($508)|0);
   HEAP32[$514>>2] = $508;
   $515 = $$0197 | 3;
   $516 = ((($509)) + 4|0);
   HEAP32[$516>>2] = $515;
  } else {
   HEAP32[(1888)>>2] = 0;
   HEAP32[(1900)>>2] = 0;
   $517 = $506 | 3;
   $518 = ((($509)) + 4|0);
   HEAP32[$518>>2] = $517;
   $519 = (($509) + ($506)|0);
   $520 = ((($519)) + 4|0);
   $521 = HEAP32[$520>>2]|0;
   $522 = $521 | 1;
   HEAP32[$520>>2] = $522;
  }
  $523 = ((($509)) + 8|0);
  $$0 = $523;
  STACKTOP = sp;return ($$0|0);
 }
 $524 = HEAP32[(1892)>>2]|0;
 $525 = ($524>>>0)>($$0197>>>0);
 if ($525) {
  $526 = (($524) - ($$0197))|0;
  HEAP32[(1892)>>2] = $526;
  $527 = HEAP32[(1904)>>2]|0;
  $528 = (($527) + ($$0197)|0);
  HEAP32[(1904)>>2] = $528;
  $529 = $526 | 1;
  $530 = ((($528)) + 4|0);
  HEAP32[$530>>2] = $529;
  $531 = $$0197 | 3;
  $532 = ((($527)) + 4|0);
  HEAP32[$532>>2] = $531;
  $533 = ((($527)) + 8|0);
  $$0 = $533;
  STACKTOP = sp;return ($$0|0);
 }
 $534 = HEAP32[588]|0;
 $535 = ($534|0)==(0);
 if ($535) {
  HEAP32[(2360)>>2] = 4096;
  HEAP32[(2356)>>2] = 4096;
  HEAP32[(2364)>>2] = -1;
  HEAP32[(2368)>>2] = -1;
  HEAP32[(2372)>>2] = 0;
  HEAP32[(2324)>>2] = 0;
  $536 = $1;
  $537 = $536 & -16;
  $538 = $537 ^ 1431655768;
  HEAP32[$1>>2] = $538;
  HEAP32[588] = $538;
  $542 = 4096;
 } else {
  $$pre$i208 = HEAP32[(2360)>>2]|0;
  $542 = $$pre$i208;
 }
 $539 = (($$0197) + 48)|0;
 $540 = (($$0197) + 47)|0;
 $541 = (($542) + ($540))|0;
 $543 = (0 - ($542))|0;
 $544 = $541 & $543;
 $545 = ($544>>>0)>($$0197>>>0);
 if (!($545)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $546 = HEAP32[(2320)>>2]|0;
 $547 = ($546|0)==(0);
 if (!($547)) {
  $548 = HEAP32[(2312)>>2]|0;
  $549 = (($548) + ($544))|0;
  $550 = ($549>>>0)<=($548>>>0);
  $551 = ($549>>>0)>($546>>>0);
  $or$cond1$i210 = $550 | $551;
  if ($or$cond1$i210) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $552 = HEAP32[(2324)>>2]|0;
 $553 = $552 & 4;
 $554 = ($553|0)==(0);
 L255: do {
  if ($554) {
   $555 = HEAP32[(1904)>>2]|0;
   $556 = ($555|0)==(0|0);
   L257: do {
    if ($556) {
     label = 172;
    } else {
     $$0$i17$i = (2328);
     while(1) {
      $557 = HEAP32[$$0$i17$i>>2]|0;
      $558 = ($557>>>0)>($555>>>0);
      if (!($558)) {
       $559 = ((($$0$i17$i)) + 4|0);
       $560 = HEAP32[$559>>2]|0;
       $561 = (($557) + ($560)|0);
       $562 = ($561>>>0)>($555>>>0);
       if ($562) {
        break;
       }
      }
      $563 = ((($$0$i17$i)) + 8|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = ($564|0)==(0|0);
      if ($565) {
       label = 172;
       break L257;
      } else {
       $$0$i17$i = $564;
      }
     }
     $588 = (($541) - ($524))|0;
     $589 = $588 & $543;
     $590 = ($589>>>0)<(2147483647);
     if ($590) {
      $591 = (_sbrk(($589|0))|0);
      $592 = HEAP32[$$0$i17$i>>2]|0;
      $593 = HEAP32[$559>>2]|0;
      $594 = (($592) + ($593)|0);
      $595 = ($591|0)==($594|0);
      if ($595) {
       $596 = ($591|0)==((-1)|0);
       if (!($596)) {
        $$723947$i = $589;$$748$i = $591;
        label = 190;
        break L255;
       }
      } else {
       $$2247$ph$i = $591;$$2253$ph$i = $589;
       label = 180;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 172) {
     $566 = (_sbrk(0)|0);
     $567 = ($566|0)==((-1)|0);
     if (!($567)) {
      $568 = $566;
      $569 = HEAP32[(2356)>>2]|0;
      $570 = (($569) + -1)|0;
      $571 = $570 & $568;
      $572 = ($571|0)==(0);
      $573 = (($570) + ($568))|0;
      $574 = (0 - ($569))|0;
      $575 = $573 & $574;
      $576 = (($575) - ($568))|0;
      $577 = $572 ? 0 : $576;
      $$$i = (($577) + ($544))|0;
      $578 = HEAP32[(2312)>>2]|0;
      $579 = (($$$i) + ($578))|0;
      $580 = ($$$i>>>0)>($$0197>>>0);
      $581 = ($$$i>>>0)<(2147483647);
      $or$cond$i211 = $580 & $581;
      if ($or$cond$i211) {
       $582 = HEAP32[(2320)>>2]|0;
       $583 = ($582|0)==(0);
       if (!($583)) {
        $584 = ($579>>>0)<=($578>>>0);
        $585 = ($579>>>0)>($582>>>0);
        $or$cond2$i = $584 | $585;
        if ($or$cond2$i) {
         break;
        }
       }
       $586 = (_sbrk(($$$i|0))|0);
       $587 = ($586|0)==($566|0);
       if ($587) {
        $$723947$i = $$$i;$$748$i = $566;
        label = 190;
        break L255;
       } else {
        $$2247$ph$i = $586;$$2253$ph$i = $$$i;
        label = 180;
       }
      }
     }
    }
   } while(0);
   L274: do {
    if ((label|0) == 180) {
     $597 = (0 - ($$2253$ph$i))|0;
     $598 = ($$2247$ph$i|0)!=((-1)|0);
     $599 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $599 & $598;
     $600 = ($539>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $600 & $or$cond7$i;
     do {
      if ($or$cond10$i) {
       $601 = HEAP32[(2360)>>2]|0;
       $602 = (($540) - ($$2253$ph$i))|0;
       $603 = (($602) + ($601))|0;
       $604 = (0 - ($601))|0;
       $605 = $603 & $604;
       $606 = ($605>>>0)<(2147483647);
       if ($606) {
        $607 = (_sbrk(($605|0))|0);
        $608 = ($607|0)==((-1)|0);
        if ($608) {
         (_sbrk(($597|0))|0);
         break L274;
        } else {
         $609 = (($605) + ($$2253$ph$i))|0;
         $$5256$i = $609;
         break;
        }
       } else {
        $$5256$i = $$2253$ph$i;
       }
      } else {
       $$5256$i = $$2253$ph$i;
      }
     } while(0);
     $610 = ($$2247$ph$i|0)==((-1)|0);
     if (!($610)) {
      $$723947$i = $$5256$i;$$748$i = $$2247$ph$i;
      label = 190;
      break L255;
     }
    }
   } while(0);
   $611 = HEAP32[(2324)>>2]|0;
   $612 = $611 | 4;
   HEAP32[(2324)>>2] = $612;
   label = 187;
  } else {
   label = 187;
  }
 } while(0);
 if ((label|0) == 187) {
  $613 = ($544>>>0)<(2147483647);
  if ($613) {
   $614 = (_sbrk(($544|0))|0);
   $615 = (_sbrk(0)|0);
   $616 = ($614|0)!=((-1)|0);
   $617 = ($615|0)!=((-1)|0);
   $or$cond5$i = $616 & $617;
   $618 = ($614>>>0)<($615>>>0);
   $or$cond11$i = $618 & $or$cond5$i;
   if ($or$cond11$i) {
    $619 = $615;
    $620 = $614;
    $621 = (($619) - ($620))|0;
    $622 = (($$0197) + 40)|0;
    $$not$i = ($621>>>0)>($622>>>0);
    if ($$not$i) {
     $$723947$i = $621;$$748$i = $614;
     label = 190;
    }
   }
  }
 }
 if ((label|0) == 190) {
  $623 = HEAP32[(2312)>>2]|0;
  $624 = (($623) + ($$723947$i))|0;
  HEAP32[(2312)>>2] = $624;
  $625 = HEAP32[(2316)>>2]|0;
  $626 = ($624>>>0)>($625>>>0);
  if ($626) {
   HEAP32[(2316)>>2] = $624;
  }
  $627 = HEAP32[(1904)>>2]|0;
  $628 = ($627|0)==(0|0);
  do {
   if ($628) {
    $629 = HEAP32[(1896)>>2]|0;
    $630 = ($629|0)==(0|0);
    $631 = ($$748$i>>>0)<($629>>>0);
    $or$cond12$i = $630 | $631;
    if ($or$cond12$i) {
     HEAP32[(1896)>>2] = $$748$i;
    }
    HEAP32[(2328)>>2] = $$748$i;
    HEAP32[(2332)>>2] = $$723947$i;
    HEAP32[(2340)>>2] = 0;
    $632 = HEAP32[588]|0;
    HEAP32[(1916)>>2] = $632;
    HEAP32[(1912)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $633 = $$01$i$i << 1;
     $634 = (1920 + ($633<<2)|0);
     $635 = ((($634)) + 12|0);
     HEAP32[$635>>2] = $634;
     $636 = ((($634)) + 8|0);
     HEAP32[$636>>2] = $634;
     $637 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($637|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $637;
     }
    }
    $638 = (($$723947$i) + -40)|0;
    $639 = ((($$748$i)) + 8|0);
    $640 = $639;
    $641 = $640 & 7;
    $642 = ($641|0)==(0);
    $643 = (0 - ($640))|0;
    $644 = $643 & 7;
    $645 = $642 ? 0 : $644;
    $646 = (($$748$i) + ($645)|0);
    $647 = (($638) - ($645))|0;
    HEAP32[(1904)>>2] = $646;
    HEAP32[(1892)>>2] = $647;
    $648 = $647 | 1;
    $649 = ((($646)) + 4|0);
    HEAP32[$649>>2] = $648;
    $650 = (($646) + ($647)|0);
    $651 = ((($650)) + 4|0);
    HEAP32[$651>>2] = 40;
    $652 = HEAP32[(2368)>>2]|0;
    HEAP32[(1908)>>2] = $652;
   } else {
    $$024370$i = (2328);
    while(1) {
     $653 = HEAP32[$$024370$i>>2]|0;
     $654 = ((($$024370$i)) + 4|0);
     $655 = HEAP32[$654>>2]|0;
     $656 = (($653) + ($655)|0);
     $657 = ($$748$i|0)==($656|0);
     if ($657) {
      label = 200;
      break;
     }
     $658 = ((($$024370$i)) + 8|0);
     $659 = HEAP32[$658>>2]|0;
     $660 = ($659|0)==(0|0);
     if ($660) {
      break;
     } else {
      $$024370$i = $659;
     }
    }
    if ((label|0) == 200) {
     $661 = ((($$024370$i)) + 12|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = $662 & 8;
     $664 = ($663|0)==(0);
     if ($664) {
      $665 = ($627>>>0)>=($653>>>0);
      $666 = ($627>>>0)<($$748$i>>>0);
      $or$cond50$i = $666 & $665;
      if ($or$cond50$i) {
       $667 = (($655) + ($$723947$i))|0;
       HEAP32[$654>>2] = $667;
       $668 = HEAP32[(1892)>>2]|0;
       $669 = ((($627)) + 8|0);
       $670 = $669;
       $671 = $670 & 7;
       $672 = ($671|0)==(0);
       $673 = (0 - ($670))|0;
       $674 = $673 & 7;
       $675 = $672 ? 0 : $674;
       $676 = (($627) + ($675)|0);
       $677 = (($$723947$i) - ($675))|0;
       $678 = (($677) + ($668))|0;
       HEAP32[(1904)>>2] = $676;
       HEAP32[(1892)>>2] = $678;
       $679 = $678 | 1;
       $680 = ((($676)) + 4|0);
       HEAP32[$680>>2] = $679;
       $681 = (($676) + ($678)|0);
       $682 = ((($681)) + 4|0);
       HEAP32[$682>>2] = 40;
       $683 = HEAP32[(2368)>>2]|0;
       HEAP32[(1908)>>2] = $683;
       break;
      }
     }
    }
    $684 = HEAP32[(1896)>>2]|0;
    $685 = ($$748$i>>>0)<($684>>>0);
    if ($685) {
     HEAP32[(1896)>>2] = $$748$i;
     $749 = $$748$i;
    } else {
     $749 = $684;
    }
    $686 = (($$748$i) + ($$723947$i)|0);
    $$124469$i = (2328);
    while(1) {
     $687 = HEAP32[$$124469$i>>2]|0;
     $688 = ($687|0)==($686|0);
     if ($688) {
      label = 208;
      break;
     }
     $689 = ((($$124469$i)) + 8|0);
     $690 = HEAP32[$689>>2]|0;
     $691 = ($690|0)==(0|0);
     if ($691) {
      $$0$i$i$i = (2328);
      break;
     } else {
      $$124469$i = $690;
     }
    }
    if ((label|0) == 208) {
     $692 = ((($$124469$i)) + 12|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = $693 & 8;
     $695 = ($694|0)==(0);
     if ($695) {
      HEAP32[$$124469$i>>2] = $$748$i;
      $696 = ((($$124469$i)) + 4|0);
      $697 = HEAP32[$696>>2]|0;
      $698 = (($697) + ($$723947$i))|0;
      HEAP32[$696>>2] = $698;
      $699 = ((($$748$i)) + 8|0);
      $700 = $699;
      $701 = $700 & 7;
      $702 = ($701|0)==(0);
      $703 = (0 - ($700))|0;
      $704 = $703 & 7;
      $705 = $702 ? 0 : $704;
      $706 = (($$748$i) + ($705)|0);
      $707 = ((($686)) + 8|0);
      $708 = $707;
      $709 = $708 & 7;
      $710 = ($709|0)==(0);
      $711 = (0 - ($708))|0;
      $712 = $711 & 7;
      $713 = $710 ? 0 : $712;
      $714 = (($686) + ($713)|0);
      $715 = $714;
      $716 = $706;
      $717 = (($715) - ($716))|0;
      $718 = (($706) + ($$0197)|0);
      $719 = (($717) - ($$0197))|0;
      $720 = $$0197 | 3;
      $721 = ((($706)) + 4|0);
      HEAP32[$721>>2] = $720;
      $722 = ($714|0)==($627|0);
      do {
       if ($722) {
        $723 = HEAP32[(1892)>>2]|0;
        $724 = (($723) + ($719))|0;
        HEAP32[(1892)>>2] = $724;
        HEAP32[(1904)>>2] = $718;
        $725 = $724 | 1;
        $726 = ((($718)) + 4|0);
        HEAP32[$726>>2] = $725;
       } else {
        $727 = HEAP32[(1900)>>2]|0;
        $728 = ($714|0)==($727|0);
        if ($728) {
         $729 = HEAP32[(1888)>>2]|0;
         $730 = (($729) + ($719))|0;
         HEAP32[(1888)>>2] = $730;
         HEAP32[(1900)>>2] = $718;
         $731 = $730 | 1;
         $732 = ((($718)) + 4|0);
         HEAP32[$732>>2] = $731;
         $733 = (($718) + ($730)|0);
         HEAP32[$733>>2] = $730;
         break;
        }
        $734 = ((($714)) + 4|0);
        $735 = HEAP32[$734>>2]|0;
        $736 = $735 & 3;
        $737 = ($736|0)==(1);
        if ($737) {
         $738 = $735 & -8;
         $739 = $735 >>> 3;
         $740 = ($735>>>0)<(256);
         L326: do {
          if ($740) {
           $741 = ((($714)) + 8|0);
           $742 = HEAP32[$741>>2]|0;
           $743 = ((($714)) + 12|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = $739 << 1;
           $746 = (1920 + ($745<<2)|0);
           $747 = ($742|0)==($746|0);
           do {
            if (!($747)) {
             $748 = ($742>>>0)<($749>>>0);
             if ($748) {
              _abort();
              // unreachable;
             }
             $750 = ((($742)) + 12|0);
             $751 = HEAP32[$750>>2]|0;
             $752 = ($751|0)==($714|0);
             if ($752) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $753 = ($744|0)==($742|0);
           if ($753) {
            $754 = 1 << $739;
            $755 = $754 ^ -1;
            $756 = HEAP32[470]|0;
            $757 = $756 & $755;
            HEAP32[470] = $757;
            break;
           }
           $758 = ($744|0)==($746|0);
           do {
            if ($758) {
             $$pre9$i$i = ((($744)) + 8|0);
             $$pre$phi10$i$iZ2D = $$pre9$i$i;
            } else {
             $759 = ($744>>>0)<($749>>>0);
             if ($759) {
              _abort();
              // unreachable;
             }
             $760 = ((($744)) + 8|0);
             $761 = HEAP32[$760>>2]|0;
             $762 = ($761|0)==($714|0);
             if ($762) {
              $$pre$phi10$i$iZ2D = $760;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $763 = ((($742)) + 12|0);
           HEAP32[$763>>2] = $744;
           HEAP32[$$pre$phi10$i$iZ2D>>2] = $742;
          } else {
           $764 = ((($714)) + 24|0);
           $765 = HEAP32[$764>>2]|0;
           $766 = ((($714)) + 12|0);
           $767 = HEAP32[$766>>2]|0;
           $768 = ($767|0)==($714|0);
           do {
            if ($768) {
             $778 = ((($714)) + 16|0);
             $779 = ((($778)) + 4|0);
             $780 = HEAP32[$779>>2]|0;
             $781 = ($780|0)==(0|0);
             if ($781) {
              $782 = HEAP32[$778>>2]|0;
              $783 = ($782|0)==(0|0);
              if ($783) {
               $$3$i$i = 0;
               break;
              } else {
               $$1290$i$i = $782;$$1292$i$i = $778;
              }
             } else {
              $$1290$i$i = $780;$$1292$i$i = $779;
             }
             while(1) {
              $784 = ((($$1290$i$i)) + 20|0);
              $785 = HEAP32[$784>>2]|0;
              $786 = ($785|0)==(0|0);
              if (!($786)) {
               $$1290$i$i = $785;$$1292$i$i = $784;
               continue;
              }
              $787 = ((($$1290$i$i)) + 16|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               break;
              } else {
               $$1290$i$i = $788;$$1292$i$i = $787;
              }
             }
             $790 = ($$1292$i$i>>>0)<($749>>>0);
             if ($790) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1292$i$i>>2] = 0;
              $$3$i$i = $$1290$i$i;
              break;
             }
            } else {
             $769 = ((($714)) + 8|0);
             $770 = HEAP32[$769>>2]|0;
             $771 = ($770>>>0)<($749>>>0);
             if ($771) {
              _abort();
              // unreachable;
             }
             $772 = ((($770)) + 12|0);
             $773 = HEAP32[$772>>2]|0;
             $774 = ($773|0)==($714|0);
             if (!($774)) {
              _abort();
              // unreachable;
             }
             $775 = ((($767)) + 8|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776|0)==($714|0);
             if ($777) {
              HEAP32[$772>>2] = $767;
              HEAP32[$775>>2] = $770;
              $$3$i$i = $767;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $791 = ($765|0)==(0|0);
           if ($791) {
            break;
           }
           $792 = ((($714)) + 28|0);
           $793 = HEAP32[$792>>2]|0;
           $794 = (2184 + ($793<<2)|0);
           $795 = HEAP32[$794>>2]|0;
           $796 = ($714|0)==($795|0);
           do {
            if ($796) {
             HEAP32[$794>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $797 = 1 << $793;
             $798 = $797 ^ -1;
             $799 = HEAP32[(1884)>>2]|0;
             $800 = $799 & $798;
             HEAP32[(1884)>>2] = $800;
             break L326;
            } else {
             $801 = HEAP32[(1896)>>2]|0;
             $802 = ($765>>>0)<($801>>>0);
             if ($802) {
              _abort();
              // unreachable;
             }
             $803 = ((($765)) + 16|0);
             $804 = HEAP32[$803>>2]|0;
             $805 = ($804|0)==($714|0);
             if ($805) {
              HEAP32[$803>>2] = $$3$i$i;
             } else {
              $806 = ((($765)) + 20|0);
              HEAP32[$806>>2] = $$3$i$i;
             }
             $807 = ($$3$i$i|0)==(0|0);
             if ($807) {
              break L326;
             }
            }
           } while(0);
           $808 = HEAP32[(1896)>>2]|0;
           $809 = ($$3$i$i>>>0)<($808>>>0);
           if ($809) {
            _abort();
            // unreachable;
           }
           $810 = ((($$3$i$i)) + 24|0);
           HEAP32[$810>>2] = $765;
           $811 = ((($714)) + 16|0);
           $812 = HEAP32[$811>>2]|0;
           $813 = ($812|0)==(0|0);
           do {
            if (!($813)) {
             $814 = ($812>>>0)<($808>>>0);
             if ($814) {
              _abort();
              // unreachable;
             } else {
              $815 = ((($$3$i$i)) + 16|0);
              HEAP32[$815>>2] = $812;
              $816 = ((($812)) + 24|0);
              HEAP32[$816>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $817 = ((($811)) + 4|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           if ($819) {
            break;
           }
           $820 = HEAP32[(1896)>>2]|0;
           $821 = ($818>>>0)<($820>>>0);
           if ($821) {
            _abort();
            // unreachable;
           } else {
            $822 = ((($$3$i$i)) + 20|0);
            HEAP32[$822>>2] = $818;
            $823 = ((($818)) + 24|0);
            HEAP32[$823>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $824 = (($714) + ($738)|0);
         $825 = (($738) + ($719))|0;
         $$0$i18$i = $824;$$0286$i$i = $825;
        } else {
         $$0$i18$i = $714;$$0286$i$i = $719;
        }
        $826 = ((($$0$i18$i)) + 4|0);
        $827 = HEAP32[$826>>2]|0;
        $828 = $827 & -2;
        HEAP32[$826>>2] = $828;
        $829 = $$0286$i$i | 1;
        $830 = ((($718)) + 4|0);
        HEAP32[$830>>2] = $829;
        $831 = (($718) + ($$0286$i$i)|0);
        HEAP32[$831>>2] = $$0286$i$i;
        $832 = $$0286$i$i >>> 3;
        $833 = ($$0286$i$i>>>0)<(256);
        if ($833) {
         $834 = $832 << 1;
         $835 = (1920 + ($834<<2)|0);
         $836 = HEAP32[470]|0;
         $837 = 1 << $832;
         $838 = $836 & $837;
         $839 = ($838|0)==(0);
         do {
          if ($839) {
           $840 = $836 | $837;
           HEAP32[470] = $840;
           $$pre$i19$i = ((($835)) + 8|0);
           $$0294$i$i = $835;$$pre$phi$i20$iZ2D = $$pre$i19$i;
          } else {
           $841 = ((($835)) + 8|0);
           $842 = HEAP32[$841>>2]|0;
           $843 = HEAP32[(1896)>>2]|0;
           $844 = ($842>>>0)<($843>>>0);
           if (!($844)) {
            $$0294$i$i = $842;$$pre$phi$i20$iZ2D = $841;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i20$iZ2D>>2] = $718;
         $845 = ((($$0294$i$i)) + 12|0);
         HEAP32[$845>>2] = $718;
         $846 = ((($718)) + 8|0);
         HEAP32[$846>>2] = $$0294$i$i;
         $847 = ((($718)) + 12|0);
         HEAP32[$847>>2] = $835;
         break;
        }
        $848 = $$0286$i$i >>> 8;
        $849 = ($848|0)==(0);
        do {
         if ($849) {
          $$0295$i$i = 0;
         } else {
          $850 = ($$0286$i$i>>>0)>(16777215);
          if ($850) {
           $$0295$i$i = 31;
           break;
          }
          $851 = (($848) + 1048320)|0;
          $852 = $851 >>> 16;
          $853 = $852 & 8;
          $854 = $848 << $853;
          $855 = (($854) + 520192)|0;
          $856 = $855 >>> 16;
          $857 = $856 & 4;
          $858 = $857 | $853;
          $859 = $854 << $857;
          $860 = (($859) + 245760)|0;
          $861 = $860 >>> 16;
          $862 = $861 & 2;
          $863 = $858 | $862;
          $864 = (14 - ($863))|0;
          $865 = $859 << $862;
          $866 = $865 >>> 15;
          $867 = (($864) + ($866))|0;
          $868 = $867 << 1;
          $869 = (($867) + 7)|0;
          $870 = $$0286$i$i >>> $869;
          $871 = $870 & 1;
          $872 = $871 | $868;
          $$0295$i$i = $872;
         }
        } while(0);
        $873 = (2184 + ($$0295$i$i<<2)|0);
        $874 = ((($718)) + 28|0);
        HEAP32[$874>>2] = $$0295$i$i;
        $875 = ((($718)) + 16|0);
        $876 = ((($875)) + 4|0);
        HEAP32[$876>>2] = 0;
        HEAP32[$875>>2] = 0;
        $877 = HEAP32[(1884)>>2]|0;
        $878 = 1 << $$0295$i$i;
        $879 = $877 & $878;
        $880 = ($879|0)==(0);
        if ($880) {
         $881 = $877 | $878;
         HEAP32[(1884)>>2] = $881;
         HEAP32[$873>>2] = $718;
         $882 = ((($718)) + 24|0);
         HEAP32[$882>>2] = $873;
         $883 = ((($718)) + 12|0);
         HEAP32[$883>>2] = $718;
         $884 = ((($718)) + 8|0);
         HEAP32[$884>>2] = $718;
         break;
        }
        $885 = HEAP32[$873>>2]|0;
        $886 = ($$0295$i$i|0)==(31);
        $887 = $$0295$i$i >>> 1;
        $888 = (25 - ($887))|0;
        $889 = $886 ? 0 : $888;
        $890 = $$0286$i$i << $889;
        $$0287$i$i = $890;$$0288$i$i = $885;
        while(1) {
         $891 = ((($$0288$i$i)) + 4|0);
         $892 = HEAP32[$891>>2]|0;
         $893 = $892 & -8;
         $894 = ($893|0)==($$0286$i$i|0);
         if ($894) {
          label = 278;
          break;
         }
         $895 = $$0287$i$i >>> 31;
         $896 = (((($$0288$i$i)) + 16|0) + ($895<<2)|0);
         $897 = $$0287$i$i << 1;
         $898 = HEAP32[$896>>2]|0;
         $899 = ($898|0)==(0|0);
         if ($899) {
          label = 275;
          break;
         } else {
          $$0287$i$i = $897;$$0288$i$i = $898;
         }
        }
        if ((label|0) == 275) {
         $900 = HEAP32[(1896)>>2]|0;
         $901 = ($896>>>0)<($900>>>0);
         if ($901) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$896>>2] = $718;
          $902 = ((($718)) + 24|0);
          HEAP32[$902>>2] = $$0288$i$i;
          $903 = ((($718)) + 12|0);
          HEAP32[$903>>2] = $718;
          $904 = ((($718)) + 8|0);
          HEAP32[$904>>2] = $718;
          break;
         }
        }
        else if ((label|0) == 278) {
         $905 = ((($$0288$i$i)) + 8|0);
         $906 = HEAP32[$905>>2]|0;
         $907 = HEAP32[(1896)>>2]|0;
         $908 = ($906>>>0)>=($907>>>0);
         $not$$i22$i = ($$0288$i$i>>>0)>=($907>>>0);
         $909 = $908 & $not$$i22$i;
         if ($909) {
          $910 = ((($906)) + 12|0);
          HEAP32[$910>>2] = $718;
          HEAP32[$905>>2] = $718;
          $911 = ((($718)) + 8|0);
          HEAP32[$911>>2] = $906;
          $912 = ((($718)) + 12|0);
          HEAP32[$912>>2] = $$0288$i$i;
          $913 = ((($718)) + 24|0);
          HEAP32[$913>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1044 = ((($706)) + 8|0);
      $$0 = $1044;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0$i$i$i = (2328);
     }
    }
    while(1) {
     $914 = HEAP32[$$0$i$i$i>>2]|0;
     $915 = ($914>>>0)>($627>>>0);
     if (!($915)) {
      $916 = ((($$0$i$i$i)) + 4|0);
      $917 = HEAP32[$916>>2]|0;
      $918 = (($914) + ($917)|0);
      $919 = ($918>>>0)>($627>>>0);
      if ($919) {
       break;
      }
     }
     $920 = ((($$0$i$i$i)) + 8|0);
     $921 = HEAP32[$920>>2]|0;
     $$0$i$i$i = $921;
    }
    $922 = ((($918)) + -47|0);
    $923 = ((($922)) + 8|0);
    $924 = $923;
    $925 = $924 & 7;
    $926 = ($925|0)==(0);
    $927 = (0 - ($924))|0;
    $928 = $927 & 7;
    $929 = $926 ? 0 : $928;
    $930 = (($922) + ($929)|0);
    $931 = ((($627)) + 16|0);
    $932 = ($930>>>0)<($931>>>0);
    $933 = $932 ? $627 : $930;
    $934 = ((($933)) + 8|0);
    $935 = ((($933)) + 24|0);
    $936 = (($$723947$i) + -40)|0;
    $937 = ((($$748$i)) + 8|0);
    $938 = $937;
    $939 = $938 & 7;
    $940 = ($939|0)==(0);
    $941 = (0 - ($938))|0;
    $942 = $941 & 7;
    $943 = $940 ? 0 : $942;
    $944 = (($$748$i) + ($943)|0);
    $945 = (($936) - ($943))|0;
    HEAP32[(1904)>>2] = $944;
    HEAP32[(1892)>>2] = $945;
    $946 = $945 | 1;
    $947 = ((($944)) + 4|0);
    HEAP32[$947>>2] = $946;
    $948 = (($944) + ($945)|0);
    $949 = ((($948)) + 4|0);
    HEAP32[$949>>2] = 40;
    $950 = HEAP32[(2368)>>2]|0;
    HEAP32[(1908)>>2] = $950;
    $951 = ((($933)) + 4|0);
    HEAP32[$951>>2] = 27;
    ;HEAP32[$934>>2]=HEAP32[(2328)>>2]|0;HEAP32[$934+4>>2]=HEAP32[(2328)+4>>2]|0;HEAP32[$934+8>>2]=HEAP32[(2328)+8>>2]|0;HEAP32[$934+12>>2]=HEAP32[(2328)+12>>2]|0;
    HEAP32[(2328)>>2] = $$748$i;
    HEAP32[(2332)>>2] = $$723947$i;
    HEAP32[(2340)>>2] = 0;
    HEAP32[(2336)>>2] = $934;
    $$0$i$i = $935;
    while(1) {
     $952 = ((($$0$i$i)) + 4|0);
     HEAP32[$952>>2] = 7;
     $953 = ((($952)) + 4|0);
     $954 = ($953>>>0)<($918>>>0);
     if ($954) {
      $$0$i$i = $952;
     } else {
      break;
     }
    }
    $955 = ($933|0)==($627|0);
    if (!($955)) {
     $956 = $933;
     $957 = $627;
     $958 = (($956) - ($957))|0;
     $959 = HEAP32[$951>>2]|0;
     $960 = $959 & -2;
     HEAP32[$951>>2] = $960;
     $961 = $958 | 1;
     $962 = ((($627)) + 4|0);
     HEAP32[$962>>2] = $961;
     HEAP32[$933>>2] = $958;
     $963 = $958 >>> 3;
     $964 = ($958>>>0)<(256);
     if ($964) {
      $965 = $963 << 1;
      $966 = (1920 + ($965<<2)|0);
      $967 = HEAP32[470]|0;
      $968 = 1 << $963;
      $969 = $967 & $968;
      $970 = ($969|0)==(0);
      if ($970) {
       $971 = $967 | $968;
       HEAP32[470] = $971;
       $$pre$i$i = ((($966)) + 8|0);
       $$0211$i$i = $966;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $972 = ((($966)) + 8|0);
       $973 = HEAP32[$972>>2]|0;
       $974 = HEAP32[(1896)>>2]|0;
       $975 = ($973>>>0)<($974>>>0);
       if ($975) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $973;$$pre$phi$i$iZ2D = $972;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $627;
      $976 = ((($$0211$i$i)) + 12|0);
      HEAP32[$976>>2] = $627;
      $977 = ((($627)) + 8|0);
      HEAP32[$977>>2] = $$0211$i$i;
      $978 = ((($627)) + 12|0);
      HEAP32[$978>>2] = $966;
      break;
     }
     $979 = $958 >>> 8;
     $980 = ($979|0)==(0);
     if ($980) {
      $$0212$i$i = 0;
     } else {
      $981 = ($958>>>0)>(16777215);
      if ($981) {
       $$0212$i$i = 31;
      } else {
       $982 = (($979) + 1048320)|0;
       $983 = $982 >>> 16;
       $984 = $983 & 8;
       $985 = $979 << $984;
       $986 = (($985) + 520192)|0;
       $987 = $986 >>> 16;
       $988 = $987 & 4;
       $989 = $988 | $984;
       $990 = $985 << $988;
       $991 = (($990) + 245760)|0;
       $992 = $991 >>> 16;
       $993 = $992 & 2;
       $994 = $989 | $993;
       $995 = (14 - ($994))|0;
       $996 = $990 << $993;
       $997 = $996 >>> 15;
       $998 = (($995) + ($997))|0;
       $999 = $998 << 1;
       $1000 = (($998) + 7)|0;
       $1001 = $958 >>> $1000;
       $1002 = $1001 & 1;
       $1003 = $1002 | $999;
       $$0212$i$i = $1003;
      }
     }
     $1004 = (2184 + ($$0212$i$i<<2)|0);
     $1005 = ((($627)) + 28|0);
     HEAP32[$1005>>2] = $$0212$i$i;
     $1006 = ((($627)) + 20|0);
     HEAP32[$1006>>2] = 0;
     HEAP32[$931>>2] = 0;
     $1007 = HEAP32[(1884)>>2]|0;
     $1008 = 1 << $$0212$i$i;
     $1009 = $1007 & $1008;
     $1010 = ($1009|0)==(0);
     if ($1010) {
      $1011 = $1007 | $1008;
      HEAP32[(1884)>>2] = $1011;
      HEAP32[$1004>>2] = $627;
      $1012 = ((($627)) + 24|0);
      HEAP32[$1012>>2] = $1004;
      $1013 = ((($627)) + 12|0);
      HEAP32[$1013>>2] = $627;
      $1014 = ((($627)) + 8|0);
      HEAP32[$1014>>2] = $627;
      break;
     }
     $1015 = HEAP32[$1004>>2]|0;
     $1016 = ($$0212$i$i|0)==(31);
     $1017 = $$0212$i$i >>> 1;
     $1018 = (25 - ($1017))|0;
     $1019 = $1016 ? 0 : $1018;
     $1020 = $958 << $1019;
     $$0206$i$i = $1020;$$0207$i$i = $1015;
     while(1) {
      $1021 = ((($$0207$i$i)) + 4|0);
      $1022 = HEAP32[$1021>>2]|0;
      $1023 = $1022 & -8;
      $1024 = ($1023|0)==($958|0);
      if ($1024) {
       label = 304;
       break;
      }
      $1025 = $$0206$i$i >>> 31;
      $1026 = (((($$0207$i$i)) + 16|0) + ($1025<<2)|0);
      $1027 = $$0206$i$i << 1;
      $1028 = HEAP32[$1026>>2]|0;
      $1029 = ($1028|0)==(0|0);
      if ($1029) {
       label = 301;
       break;
      } else {
       $$0206$i$i = $1027;$$0207$i$i = $1028;
      }
     }
     if ((label|0) == 301) {
      $1030 = HEAP32[(1896)>>2]|0;
      $1031 = ($1026>>>0)<($1030>>>0);
      if ($1031) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1026>>2] = $627;
       $1032 = ((($627)) + 24|0);
       HEAP32[$1032>>2] = $$0207$i$i;
       $1033 = ((($627)) + 12|0);
       HEAP32[$1033>>2] = $627;
       $1034 = ((($627)) + 8|0);
       HEAP32[$1034>>2] = $627;
       break;
      }
     }
     else if ((label|0) == 304) {
      $1035 = ((($$0207$i$i)) + 8|0);
      $1036 = HEAP32[$1035>>2]|0;
      $1037 = HEAP32[(1896)>>2]|0;
      $1038 = ($1036>>>0)>=($1037>>>0);
      $not$$i$i = ($$0207$i$i>>>0)>=($1037>>>0);
      $1039 = $1038 & $not$$i$i;
      if ($1039) {
       $1040 = ((($1036)) + 12|0);
       HEAP32[$1040>>2] = $627;
       HEAP32[$1035>>2] = $627;
       $1041 = ((($627)) + 8|0);
       HEAP32[$1041>>2] = $1036;
       $1042 = ((($627)) + 12|0);
       HEAP32[$1042>>2] = $$0207$i$i;
       $1043 = ((($627)) + 24|0);
       HEAP32[$1043>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1045 = HEAP32[(1892)>>2]|0;
  $1046 = ($1045>>>0)>($$0197>>>0);
  if ($1046) {
   $1047 = (($1045) - ($$0197))|0;
   HEAP32[(1892)>>2] = $1047;
   $1048 = HEAP32[(1904)>>2]|0;
   $1049 = (($1048) + ($$0197)|0);
   HEAP32[(1904)>>2] = $1049;
   $1050 = $1047 | 1;
   $1051 = ((($1049)) + 4|0);
   HEAP32[$1051>>2] = $1050;
   $1052 = $$0197 | 3;
   $1053 = ((($1048)) + 4|0);
   HEAP32[$1053>>2] = $1052;
   $1054 = ((($1048)) + 8|0);
   $$0 = $1054;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1055 = (___errno_location()|0);
 HEAP32[$1055>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381 = 0, $$0382 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1388 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre = 0, $$pre$phi439Z2D = 0, $$pre$phi441Z2D = 0, $$pre$phiZ2D = 0, $$pre438 = 0;
 var $$pre440 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond418 = 0, $cond419 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(1896)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(1900)>>2]|0;
   $20 = ($16|0)==($19|0);
   if ($20) {
    $105 = ((($10)) + 4|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = $106 & 3;
    $108 = ($107|0)==(3);
    if (!($108)) {
     $$1 = $16;$$1380 = $17;
     break;
    }
    HEAP32[(1888)>>2] = $17;
    $109 = $106 & -2;
    HEAP32[$105>>2] = $109;
    $110 = $17 | 1;
    $111 = ((($16)) + 4|0);
    HEAP32[$111>>2] = $110;
    $112 = (($16) + ($17)|0);
    HEAP32[$112>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (1920 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($24>>>0)<($3>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[470]|0;
     $38 = $37 & $36;
     HEAP32[470] = $38;
     $$1 = $16;$$1380 = $17;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre440 = ((($26)) + 8|0);
     $$pre$phi441Z2D = $$pre440;
    } else {
     $40 = ($26>>>0)<($3>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi441Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi441Z2D>>2] = $24;
    $$1 = $16;$$1380 = $17;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1385 = $63;$$1388 = $59;
      }
     } else {
      $$1385 = $61;$$1388 = $60;
     }
     while(1) {
      $65 = ((($$1385)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1385 = $66;$$1388 = $65;
       continue;
      }
      $68 = ((($$1385)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1385 = $69;$$1388 = $68;
      }
     }
     $71 = ($$1388>>>0)<($3>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1388>>2] = 0;
      $$3 = $$1385;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51>>>0)<($3>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1380 = $17;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (2184 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($16|0)==($76|0);
    if ($77) {
     HEAP32[$75>>2] = $$3;
     $cond418 = ($$3|0)==(0|0);
     if ($cond418) {
      $78 = 1 << $74;
      $79 = $78 ^ -1;
      $80 = HEAP32[(1884)>>2]|0;
      $81 = $80 & $79;
      HEAP32[(1884)>>2] = $81;
      $$1 = $16;$$1380 = $17;
      break;
     }
    } else {
     $82 = HEAP32[(1896)>>2]|0;
     $83 = ($46>>>0)<($82>>>0);
     if ($83) {
      _abort();
      // unreachable;
     }
     $84 = ((($46)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($85|0)==($16|0);
     if ($86) {
      HEAP32[$84>>2] = $$3;
     } else {
      $87 = ((($46)) + 20|0);
      HEAP32[$87>>2] = $$3;
     }
     $88 = ($$3|0)==(0|0);
     if ($88) {
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
    $89 = HEAP32[(1896)>>2]|0;
    $90 = ($$3>>>0)<($89>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($$3)) + 24|0);
    HEAP32[$91>>2] = $46;
    $92 = ((($16)) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    do {
     if (!($94)) {
      $95 = ($93>>>0)<($89>>>0);
      if ($95) {
       _abort();
       // unreachable;
      } else {
       $96 = ((($$3)) + 16|0);
       HEAP32[$96>>2] = $93;
       $97 = ((($93)) + 24|0);
       HEAP32[$97>>2] = $$3;
       break;
      }
     }
    } while(0);
    $98 = ((($92)) + 4|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = ($99|0)==(0|0);
    if ($100) {
     $$1 = $16;$$1380 = $17;
    } else {
     $101 = HEAP32[(1896)>>2]|0;
     $102 = ($99>>>0)<($101>>>0);
     if ($102) {
      _abort();
      // unreachable;
     } else {
      $103 = ((($$3)) + 20|0);
      HEAP32[$103>>2] = $99;
      $104 = ((($99)) + 24|0);
      HEAP32[$104>>2] = $$3;
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1380 = $9;
  }
 } while(0);
 $113 = ($$1>>>0)<($10>>>0);
 if (!($113)) {
  _abort();
  // unreachable;
 }
 $114 = ((($10)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = $115 & 1;
 $117 = ($116|0)==(0);
 if ($117) {
  _abort();
  // unreachable;
 }
 $118 = $115 & 2;
 $119 = ($118|0)==(0);
 if ($119) {
  $120 = HEAP32[(1904)>>2]|0;
  $121 = ($10|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(1892)>>2]|0;
   $123 = (($122) + ($$1380))|0;
   HEAP32[(1892)>>2] = $123;
   HEAP32[(1904)>>2] = $$1;
   $124 = $123 | 1;
   $125 = ((($$1)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = HEAP32[(1900)>>2]|0;
   $127 = ($$1|0)==($126|0);
   if (!($127)) {
    return;
   }
   HEAP32[(1900)>>2] = 0;
   HEAP32[(1888)>>2] = 0;
   return;
  }
  $128 = HEAP32[(1900)>>2]|0;
  $129 = ($10|0)==($128|0);
  if ($129) {
   $130 = HEAP32[(1888)>>2]|0;
   $131 = (($130) + ($$1380))|0;
   HEAP32[(1888)>>2] = $131;
   HEAP32[(1900)>>2] = $$1;
   $132 = $131 | 1;
   $133 = ((($$1)) + 4|0);
   HEAP32[$133>>2] = $132;
   $134 = (($$1) + ($131)|0);
   HEAP32[$134>>2] = $131;
   return;
  }
  $135 = $115 & -8;
  $136 = (($135) + ($$1380))|0;
  $137 = $115 >>> 3;
  $138 = ($115>>>0)<(256);
  do {
   if ($138) {
    $139 = ((($10)) + 8|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ((($10)) + 12|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = $137 << 1;
    $144 = (1920 + ($143<<2)|0);
    $145 = ($140|0)==($144|0);
    if (!($145)) {
     $146 = HEAP32[(1896)>>2]|0;
     $147 = ($140>>>0)<($146>>>0);
     if ($147) {
      _abort();
      // unreachable;
     }
     $148 = ((($140)) + 12|0);
     $149 = HEAP32[$148>>2]|0;
     $150 = ($149|0)==($10|0);
     if (!($150)) {
      _abort();
      // unreachable;
     }
    }
    $151 = ($142|0)==($140|0);
    if ($151) {
     $152 = 1 << $137;
     $153 = $152 ^ -1;
     $154 = HEAP32[470]|0;
     $155 = $154 & $153;
     HEAP32[470] = $155;
     break;
    }
    $156 = ($142|0)==($144|0);
    if ($156) {
     $$pre438 = ((($142)) + 8|0);
     $$pre$phi439Z2D = $$pre438;
    } else {
     $157 = HEAP32[(1896)>>2]|0;
     $158 = ($142>>>0)<($157>>>0);
     if ($158) {
      _abort();
      // unreachable;
     }
     $159 = ((($142)) + 8|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ($160|0)==($10|0);
     if ($161) {
      $$pre$phi439Z2D = $159;
     } else {
      _abort();
      // unreachable;
     }
    }
    $162 = ((($140)) + 12|0);
    HEAP32[$162>>2] = $142;
    HEAP32[$$pre$phi439Z2D>>2] = $140;
   } else {
    $163 = ((($10)) + 24|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = ((($10)) + 12|0);
    $166 = HEAP32[$165>>2]|0;
    $167 = ($166|0)==($10|0);
    do {
     if ($167) {
      $178 = ((($10)) + 16|0);
      $179 = ((($178)) + 4|0);
      $180 = HEAP32[$179>>2]|0;
      $181 = ($180|0)==(0|0);
      if ($181) {
       $182 = HEAP32[$178>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $$3398 = 0;
        break;
       } else {
        $$1396 = $182;$$1400 = $178;
       }
      } else {
       $$1396 = $180;$$1400 = $179;
      }
      while(1) {
       $184 = ((($$1396)) + 20|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if (!($186)) {
        $$1396 = $185;$$1400 = $184;
        continue;
       }
       $187 = ((($$1396)) + 16|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = ($188|0)==(0|0);
       if ($189) {
        break;
       } else {
        $$1396 = $188;$$1400 = $187;
       }
      }
      $190 = HEAP32[(1896)>>2]|0;
      $191 = ($$1400>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1400>>2] = 0;
       $$3398 = $$1396;
       break;
      }
     } else {
      $168 = ((($10)) + 8|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = HEAP32[(1896)>>2]|0;
      $171 = ($169>>>0)<($170>>>0);
      if ($171) {
       _abort();
       // unreachable;
      }
      $172 = ((($169)) + 12|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($10|0);
      if (!($174)) {
       _abort();
       // unreachable;
      }
      $175 = ((($166)) + 8|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==($10|0);
      if ($177) {
       HEAP32[$172>>2] = $166;
       HEAP32[$175>>2] = $169;
       $$3398 = $166;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $192 = ($164|0)==(0|0);
    if (!($192)) {
     $193 = ((($10)) + 28|0);
     $194 = HEAP32[$193>>2]|0;
     $195 = (2184 + ($194<<2)|0);
     $196 = HEAP32[$195>>2]|0;
     $197 = ($10|0)==($196|0);
     if ($197) {
      HEAP32[$195>>2] = $$3398;
      $cond419 = ($$3398|0)==(0|0);
      if ($cond419) {
       $198 = 1 << $194;
       $199 = $198 ^ -1;
       $200 = HEAP32[(1884)>>2]|0;
       $201 = $200 & $199;
       HEAP32[(1884)>>2] = $201;
       break;
      }
     } else {
      $202 = HEAP32[(1896)>>2]|0;
      $203 = ($164>>>0)<($202>>>0);
      if ($203) {
       _abort();
       // unreachable;
      }
      $204 = ((($164)) + 16|0);
      $205 = HEAP32[$204>>2]|0;
      $206 = ($205|0)==($10|0);
      if ($206) {
       HEAP32[$204>>2] = $$3398;
      } else {
       $207 = ((($164)) + 20|0);
       HEAP32[$207>>2] = $$3398;
      }
      $208 = ($$3398|0)==(0|0);
      if ($208) {
       break;
      }
     }
     $209 = HEAP32[(1896)>>2]|0;
     $210 = ($$3398>>>0)<($209>>>0);
     if ($210) {
      _abort();
      // unreachable;
     }
     $211 = ((($$3398)) + 24|0);
     HEAP32[$211>>2] = $164;
     $212 = ((($10)) + 16|0);
     $213 = HEAP32[$212>>2]|0;
     $214 = ($213|0)==(0|0);
     do {
      if (!($214)) {
       $215 = ($213>>>0)<($209>>>0);
       if ($215) {
        _abort();
        // unreachable;
       } else {
        $216 = ((($$3398)) + 16|0);
        HEAP32[$216>>2] = $213;
        $217 = ((($213)) + 24|0);
        HEAP32[$217>>2] = $$3398;
        break;
       }
      }
     } while(0);
     $218 = ((($212)) + 4|0);
     $219 = HEAP32[$218>>2]|0;
     $220 = ($219|0)==(0|0);
     if (!($220)) {
      $221 = HEAP32[(1896)>>2]|0;
      $222 = ($219>>>0)<($221>>>0);
      if ($222) {
       _abort();
       // unreachable;
      } else {
       $223 = ((($$3398)) + 20|0);
       HEAP32[$223>>2] = $219;
       $224 = ((($219)) + 24|0);
       HEAP32[$224>>2] = $$3398;
       break;
      }
     }
    }
   }
  } while(0);
  $225 = $136 | 1;
  $226 = ((($$1)) + 4|0);
  HEAP32[$226>>2] = $225;
  $227 = (($$1) + ($136)|0);
  HEAP32[$227>>2] = $136;
  $228 = HEAP32[(1900)>>2]|0;
  $229 = ($$1|0)==($228|0);
  if ($229) {
   HEAP32[(1888)>>2] = $136;
   return;
  } else {
   $$2 = $136;
  }
 } else {
  $230 = $115 & -2;
  HEAP32[$114>>2] = $230;
  $231 = $$1380 | 1;
  $232 = ((($$1)) + 4|0);
  HEAP32[$232>>2] = $231;
  $233 = (($$1) + ($$1380)|0);
  HEAP32[$233>>2] = $$1380;
  $$2 = $$1380;
 }
 $234 = $$2 >>> 3;
 $235 = ($$2>>>0)<(256);
 if ($235) {
  $236 = $234 << 1;
  $237 = (1920 + ($236<<2)|0);
  $238 = HEAP32[470]|0;
  $239 = 1 << $234;
  $240 = $238 & $239;
  $241 = ($240|0)==(0);
  if ($241) {
   $242 = $238 | $239;
   HEAP32[470] = $242;
   $$pre = ((($237)) + 8|0);
   $$0401 = $237;$$pre$phiZ2D = $$pre;
  } else {
   $243 = ((($237)) + 8|0);
   $244 = HEAP32[$243>>2]|0;
   $245 = HEAP32[(1896)>>2]|0;
   $246 = ($244>>>0)<($245>>>0);
   if ($246) {
    _abort();
    // unreachable;
   } else {
    $$0401 = $244;$$pre$phiZ2D = $243;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $247 = ((($$0401)) + 12|0);
  HEAP32[$247>>2] = $$1;
  $248 = ((($$1)) + 8|0);
  HEAP32[$248>>2] = $$0401;
  $249 = ((($$1)) + 12|0);
  HEAP32[$249>>2] = $237;
  return;
 }
 $250 = $$2 >>> 8;
 $251 = ($250|0)==(0);
 if ($251) {
  $$0394 = 0;
 } else {
  $252 = ($$2>>>0)>(16777215);
  if ($252) {
   $$0394 = 31;
  } else {
   $253 = (($250) + 1048320)|0;
   $254 = $253 >>> 16;
   $255 = $254 & 8;
   $256 = $250 << $255;
   $257 = (($256) + 520192)|0;
   $258 = $257 >>> 16;
   $259 = $258 & 4;
   $260 = $259 | $255;
   $261 = $256 << $259;
   $262 = (($261) + 245760)|0;
   $263 = $262 >>> 16;
   $264 = $263 & 2;
   $265 = $260 | $264;
   $266 = (14 - ($265))|0;
   $267 = $261 << $264;
   $268 = $267 >>> 15;
   $269 = (($266) + ($268))|0;
   $270 = $269 << 1;
   $271 = (($269) + 7)|0;
   $272 = $$2 >>> $271;
   $273 = $272 & 1;
   $274 = $273 | $270;
   $$0394 = $274;
  }
 }
 $275 = (2184 + ($$0394<<2)|0);
 $276 = ((($$1)) + 28|0);
 HEAP32[$276>>2] = $$0394;
 $277 = ((($$1)) + 16|0);
 $278 = ((($$1)) + 20|0);
 HEAP32[$278>>2] = 0;
 HEAP32[$277>>2] = 0;
 $279 = HEAP32[(1884)>>2]|0;
 $280 = 1 << $$0394;
 $281 = $279 & $280;
 $282 = ($281|0)==(0);
 do {
  if ($282) {
   $283 = $279 | $280;
   HEAP32[(1884)>>2] = $283;
   HEAP32[$275>>2] = $$1;
   $284 = ((($$1)) + 24|0);
   HEAP32[$284>>2] = $275;
   $285 = ((($$1)) + 12|0);
   HEAP32[$285>>2] = $$1;
   $286 = ((($$1)) + 8|0);
   HEAP32[$286>>2] = $$1;
  } else {
   $287 = HEAP32[$275>>2]|0;
   $288 = ($$0394|0)==(31);
   $289 = $$0394 >>> 1;
   $290 = (25 - ($289))|0;
   $291 = $288 ? 0 : $290;
   $292 = $$2 << $291;
   $$0381 = $292;$$0382 = $287;
   while(1) {
    $293 = ((($$0382)) + 4|0);
    $294 = HEAP32[$293>>2]|0;
    $295 = $294 & -8;
    $296 = ($295|0)==($$2|0);
    if ($296) {
     label = 130;
     break;
    }
    $297 = $$0381 >>> 31;
    $298 = (((($$0382)) + 16|0) + ($297<<2)|0);
    $299 = $$0381 << 1;
    $300 = HEAP32[$298>>2]|0;
    $301 = ($300|0)==(0|0);
    if ($301) {
     label = 127;
     break;
    } else {
     $$0381 = $299;$$0382 = $300;
    }
   }
   if ((label|0) == 127) {
    $302 = HEAP32[(1896)>>2]|0;
    $303 = ($298>>>0)<($302>>>0);
    if ($303) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$298>>2] = $$1;
     $304 = ((($$1)) + 24|0);
     HEAP32[$304>>2] = $$0382;
     $305 = ((($$1)) + 12|0);
     HEAP32[$305>>2] = $$1;
     $306 = ((($$1)) + 8|0);
     HEAP32[$306>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 130) {
    $307 = ((($$0382)) + 8|0);
    $308 = HEAP32[$307>>2]|0;
    $309 = HEAP32[(1896)>>2]|0;
    $310 = ($308>>>0)>=($309>>>0);
    $not$ = ($$0382>>>0)>=($309>>>0);
    $311 = $310 & $not$;
    if ($311) {
     $312 = ((($308)) + 12|0);
     HEAP32[$312>>2] = $$1;
     HEAP32[$307>>2] = $$1;
     $313 = ((($$1)) + 8|0);
     HEAP32[$313>>2] = $308;
     $314 = ((($$1)) + 12|0);
     HEAP32[$314>>2] = $$0382;
     $315 = ((($$1)) + 24|0);
     HEAP32[$315>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $316 = HEAP32[(1912)>>2]|0;
 $317 = (($316) + -1)|0;
 HEAP32[(1912)>>2] = $317;
 $318 = ($317|0)==(0);
 if ($318) {
  $$0211$in$i = (2336);
 } else {
  return;
 }
 while(1) {
  $$0211$i = HEAP32[$$0211$in$i>>2]|0;
  $319 = ($$0211$i|0)==(0|0);
  $320 = ((($$0211$i)) + 8|0);
  if ($319) {
   break;
  } else {
   $$0211$in$i = $320;
  }
 }
 HEAP32[(1912)>>2] = -1;
 return;
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _pthread_self() {
    return 0;
}

  


// EMSCRIPTEN_END_FUNCS


  return { _llvm_cttz_i32: _llvm_cttz_i32, _sphincsjs_secret_key_bytes: _sphincsjs_secret_key_bytes, _bitshift64Lshr: _bitshift64Lshr, _sphincsjs_signature_bytes: _sphincsjs_signature_bytes, _bitshift64Shl: _bitshift64Shl, _memset: _memset, _sbrk: _sbrk, _memcpy: _memcpy, ___muldi3: ___muldi3, ___uremdi3: ___uremdi3, _crypto_sign_sphincs_open: _crypto_sign_sphincs_open, _i64Subtract: _i64Subtract, ___udivmoddi4: ___udivmoddi4, _randombytes_stir: _randombytes_stir, _i64Add: _i64Add, _crypto_sign_sphincs_keypair: _crypto_sign_sphincs_keypair, _pthread_self: _pthread_self, ___muldsi3: ___muldsi3, _crypto_sign_sphincs: _crypto_sign_sphincs, _free: _free, _sphincsjs_public_key_bytes: _sphincsjs_public_key_bytes, _malloc: _malloc, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0 };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _sphincsjs_secret_key_bytes = Module["_sphincsjs_secret_key_bytes"] = asm["_sphincsjs_secret_key_bytes"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _sphincsjs_signature_bytes = Module["_sphincsjs_signature_bytes"] = asm["_sphincsjs_signature_bytes"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _crypto_sign_sphincs_open = Module["_crypto_sign_sphincs_open"] = asm["_crypto_sign_sphincs_open"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var _randombytes_stir = Module["_randombytes_stir"] = asm["_randombytes_stir"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _crypto_sign_sphincs_keypair = Module["_crypto_sign_sphincs_keypair"] = asm["_crypto_sign_sphincs_keypair"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _crypto_sign_sphincs = Module["_crypto_sign_sphincs"] = asm["_crypto_sign_sphincs"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _sphincsjs_public_key_bytes = Module["_sphincsjs_public_key_bytes"] = asm["_sphincsjs_public_key_bytes"];
var _malloc = Module["_malloc"] = asm["_malloc"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===





function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_i64Subtract","_i64Add","_memset","_bitshift64Lshr","_bitshift64Shl","_memcpy","___muldsi3","___muldi3","_sbrk","_llvm_cttz_i32","___udivmoddi4","___uremdi3","_pthread_self"]


;

function dataReturn (returnValue, result) {
	if (returnValue === 0) {
		return result;
	}
	else {
		throw new Error('SPHINCS error: ' + returnValue);
	}
}

function dataResult (buffer, bytes) {
	return new Uint8Array(
		new Uint8Array(Module.HEAPU8.buffer, buffer, bytes)
	);
}

function dataFree (buffer) {
	try {
		Module._free(buffer);
	}
	catch (_) {}
}


Module._randombytes_stir();


var sphincs	= {
	publicKeyBytes: Module._sphincsjs_public_key_bytes(),
	privateKeyBytes: Module._sphincsjs_secret_key_bytes(),
	bytes: Module._sphincsjs_signature_bytes(),

	keyPair: function () {
		var publicKeyBuffer		= Module._malloc(sphincs.publicKeyBytes);
		var privateKeyBuffer	= Module._malloc(sphincs.privateKeyBytes);

		try {
			var returnValue	= Module._crypto_sign_sphincs_keypair(
				publicKeyBuffer,
				privateKeyBuffer
			);

			return dataReturn(returnValue, {
				publicKey: dataResult(publicKeyBuffer, sphincs.publicKeyBytes),
				privateKey: dataResult(privateKeyBuffer, sphincs.privateKeyBytes)
			});
		}
		finally {
			dataFree(publicKeyBuffer);
			dataFree(privateKeyBuffer);
		}
	},

	sign: function (message, privateKey) {
		var signedBytes		= message.length + sphincs.bytes;

		var signedBuffer		= Module._malloc(signedBytes);
		var messageBuffer		= Module._malloc(message.length);
		var privateKeyBuffer	= Module._malloc(sphincs.privateKeyBytes);

		Module.writeArrayToMemory(message, messageBuffer);
		Module.writeArrayToMemory(privateKey, privateKeyBuffer);

		try {
			var returnValue	= Module._crypto_sign_sphincs(
				signedBuffer,
				0,
				messageBuffer,
				message.length,
				privateKeyBuffer
			);

			return dataReturn(returnValue, dataResult(signedBuffer, signedBytes));
		}
		finally {
			dataFree(signedBuffer);
			dataFree(messageBuffer);
			dataFree(privateKeyBuffer);
		}
	},

	signDetached: function (message, privateKey) {
		return new Uint8Array(
			sphincs.sign(message, privateKey).buffer,
			0,
			sphincs.bytes
		);
	},

	open: function (signed, publicKey) {
		var openedBytes	= signed.length - sphincs.bytes;

		var openedBuffer	= Module._malloc(openedBytes);
		var signedBuffer	= Module._malloc(signed.length);
		var publicKeyBuffer	= Module._malloc(sphincs.publicKeyBytes);

		Module.writeArrayToMemory(signed, signedBuffer);
		Module.writeArrayToMemory(publicKey, publicKeyBuffer);

		try {
			var returnValue	= Module._crypto_sign_sphincs_open(
				openedBuffer,
				0,
				signedBuffer,
				signed.length,
				publicKeyBuffer
			);

			return dataReturn(returnValue, dataResult(openedBuffer, openedBytes));
		}
		finally {
			dataFree(openedBuffer);
			dataFree(signedBuffer);
			dataFree(publicKeyBuffer);
		}
	},

	verifyDetached: function (signature, message, publicKey) {
		var signed	= new Uint8Array(sphincs.bytes + message.length);
		signed.set(signature);
		signed.set(message, sphincs.bytes);

		try {
			sphincs.open(signed, publicKey);
			return true; 
		}
		catch (_) {
			return false;
		}
		finally {
			dataFree(signed);
		}
	}
};



return sphincs;

}());


if (typeof module !== 'undefined' && module.exports) {
	sphincs.sphincs	= sphincs;
	module.exports	= sphincs;
}
else {
	self.sphincs	= sphincs;
}

//# sourceMappingURL=sphincs.debug.js.map